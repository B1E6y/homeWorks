{"{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\Alex\\\\Desktop\\\\Work1\\\\webdriverio-test\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\Alex\\\\Desktop\\\\Work1\\\\webdriverio-test\",\"filename\":\"C:\\\\Users\\\\Alex\\\\Desktop\\\\Work1\\\\webdriverio-test\\\\wdio.conf.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"C:\\\\Users\\\\Alex\\\\Desktop\\\\Work1\\\\webdriverio-test\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.22.11:test":{"value":{"code":"exports.config = {\n  //\n  // ====================\n  // Runner Configuration\n  // ====================\n  // WebdriverIO supports running e2e tests as well as unit and component tests.\n  runner: 'local',\n  //\n  // ==================\n  // Specify Test Files\n  // ==================\n  // Define which test specs should run. The pattern is relative to the directory\n  // of the configuration file being run.\n  //\n  // The specs are defined as an array of spec files (optionally using wildcards\n  // that will be expanded). The test for each spec file will be run in a separate\n  // worker process. In order to have a group of spec files run in the same worker\n  // process simply enclose them in an array within the specs array.\n  //\n  // If you are calling `wdio` from an NPM script (see https://docs.npmjs.com/cli/run-script),\n  // then the current working directory is where your `package.json` resides, so `wdio`\n  // will be called from there.\n  //\n  specs: ['./test/specs/**/*.js'],\n  // Patterns to exclude.\n  exclude: [\n    // 'path/to/excluded/files'\n  ],\n  //\n  // ============\n  // Capabilities\n  // ============\n  // Define your capabilities here. WebdriverIO can run multiple capabilities at the same\n  // time. Depending on the number of capabilities, WebdriverIO launches several test\n  // sessions. Within your capabilities you can overwrite the spec and exclude options in\n  // order to group specific specs to a specific capability.\n  //\n  // First, you can define how many instances should be started at the same time. Let's\n  // say you have 3 different capabilities (Chrome, Firefox, and Safari) and you have\n  // set maxInstances to 1; wdio will spawn 3 processes. Therefore, if you have 10 spec\n  // files and you set maxInstances to 10, all spec files will get tested at the same time\n  // and 30 processes will get spawned. The property handles how many capabilities\n  // from the same test should run tests.\n  //\n  maxInstances: 10,\n  //\n  // If you have trouble getting all important capabilities together, check out the\n  // Sauce Labs platform configurator - a great tool to configure your capabilities:\n  // https://saucelabs.com/platform/platform-configurator\n  //\n  capabilities: [{\n    // capabilities for local browser web tests\n    browserName: 'chrome' // or \"firefox\", \"microsoftedge\", \"safari\"\n  }],\n\n  //\n  // ===================\n  // Test Configurations\n  // ===================\n  // Define all options that are relevant for the WebdriverIO instance here\n  //\n  // Level of logging verbosity: trace | debug | info | warn | error | silent\n  logLevel: 'info',\n  //\n  // Set specific log levels per logger\n  // loggers:\n  // - webdriver, webdriverio\n  // - @wdio/browserstack-service, @wdio/devtools-service, @wdio/sauce-service\n  // - @wdio/mocha-framework, @wdio/jasmine-framework\n  // - @wdio/local-runner\n  // - @wdio/sumologic-reporter\n  // - @wdio/cli, @wdio/config, @wdio/utils\n  // Level of logging verbosity: trace | debug | info | warn | error | silent\n  // logLevels: {\n  //     webdriver: 'info',\n  //     '@wdio/appium-service': 'info'\n  // },\n  //\n  // If you only want to run your tests until a specific amount of tests have failed use\n  // bail (default is 0 - don't bail, run all tests).\n  bail: 0,\n  //\n  // Set a base URL in order to shorten url command calls. If your `url` parameter starts\n  // with `/`, the base url gets prepended, not including the path portion of your baseUrl.\n  // If your `url` parameter starts without a scheme or `/` (like `some/path`), the base url\n  // gets prepended directly.\n  baseUrl: 'http://localhost',\n  //\n  // Default timeout for all waitFor* commands.\n  waitforTimeout: 10000,\n  //\n  // Default timeout in milliseconds for request\n  // if browser driver or grid doesn't send response\n  connectionRetryTimeout: 120000,\n  //\n  // Default request retries count\n  connectionRetryCount: 3,\n  //\n  // Test runner services\n  // Services take over a specific job you don't want to take care of. They enhance\n  // your test setup with almost no effort. Unlike plugins, they don't add new\n  // commands. Instead, they hook themselves up into the test process.\n  // services: [],\n  //\n  // Framework you want to run your specs with.\n  // The following are supported: Mocha, Jasmine, and Cucumber\n  // see also: https://webdriver.io/docs/frameworks\n  //\n  // Make sure you have the wdio adapter package for the specific framework installed\n  // before running any tests.\n  framework: 'mocha',\n  //\n  // The number of times to retry the entire specfile when it fails as a whole\n  // specFileRetries: 1,\n  //\n  // Delay in seconds between the spec file retry attempts\n  // specFileRetriesDelay: 0,\n  //\n  // Whether or not retried spec files should be retried immediately or deferred to the end of the queue\n  // specFileRetriesDeferred: false,\n  //\n  // Test reporter for stdout.\n  // The only one supported by default is 'dot'\n  // see also: https://webdriver.io/docs/dot-reporter\n  reporters: ['spec'],\n  //\n  // Options to be passed to Mocha.\n  // See the full list at http://mochajs.org/\n  mochaOpts: {\n    ui: 'bdd',\n    timeout: 60000\n  }\n  //\n  // =====\n  // Hooks\n  // =====\n  // WebdriverIO provides several hooks you can use to interfere with the test process in order to enhance\n  // it and to build services around it. You can either apply a single function or an array of\n  // methods to it. If one of them returns with a promise, WebdriverIO will wait until that promise got\n  // resolved to continue.\n  /**\n   * Gets executed once before all workers get launched.\n   * @param {object} config wdio configuration object\n   * @param {Array.<Object>} capabilities list of capabilities details\n   */\n  // onPrepare: function (config, capabilities) {\n  // },\n  /**\n   * Gets executed before a worker process is spawned and can be used to initialise specific service\n   * for that worker as well as modify runtime environments in an async fashion.\n   * @param  {string} cid      capability id (e.g 0-0)\n   * @param  {object} caps     object containing capabilities for session that will be spawn in the worker\n   * @param  {object} specs    specs to be run in the worker process\n   * @param  {object} args     object that will be merged with the main configuration once worker is initialized\n   * @param  {object} execArgv list of string arguments passed to the worker process\n   */\n  // onWorkerStart: function (cid, caps, specs, args, execArgv) {\n  // },\n  /**\n   * Gets executed just after a worker process has exited.\n   * @param  {string} cid      capability id (e.g 0-0)\n   * @param  {number} exitCode 0 - success, 1 - fail\n   * @param  {object} specs    specs to be run in the worker process\n   * @param  {number} retries  number of retries used\n   */\n  // onWorkerEnd: function (cid, exitCode, specs, retries) {\n  // },\n  /**\n   * Gets executed just before initialising the webdriver session and test framework. It allows you\n   * to manipulate configurations depending on the capability or spec.\n   * @param {object} config wdio configuration object\n   * @param {Array.<Object>} capabilities list of capabilities details\n   * @param {Array.<String>} specs List of spec file paths that are to be run\n   * @param {string} cid worker id (e.g. 0-0)\n   */\n  // beforeSession: function (config, capabilities, specs, cid) {\n  // },\n  /**\n   * Gets executed before test execution begins. At this point you can access to all global\n   * variables like `browser`. It is the perfect place to define custom commands.\n   * @param {Array.<Object>} capabilities list of capabilities details\n   * @param {Array.<String>} specs        List of spec file paths that are to be run\n   * @param {object}         browser      instance of created browser/device session\n   */\n  // before: function (capabilities, specs) {\n  // },\n  /**\n   * Runs before a WebdriverIO command gets executed.\n   * @param {string} commandName hook command name\n   * @param {Array} args arguments that command would receive\n   */\n  // beforeCommand: function (commandName, args) {\n  // },\n  /**\n   * Hook that gets executed before the suite starts\n   * @param {object} suite suite details\n   */\n  // beforeSuite: function (suite) {\n  // },\n  /**\n   * Function to be executed before a test (in Mocha/Jasmine) starts.\n   */\n  // beforeTest: function (test, context) {\n  // },\n  /**\n   * Hook that gets executed _before_ a hook within the suite starts (e.g. runs before calling\n   * beforeEach in Mocha)\n   */\n  // beforeHook: function (test, context) {\n  // },\n  /**\n   * Hook that gets executed _after_ a hook within the suite starts (e.g. runs after calling\n   * afterEach in Mocha)\n   */\n  // afterHook: function (test, context, { error, result, duration, passed, retries }) {\n  // },\n  /**\n   * Function to be executed after a test (in Mocha/Jasmine only)\n   * @param {object}  test             test object\n   * @param {object}  context          scope object the test was executed with\n   * @param {Error}   result.error     error object in case the test fails, otherwise `undefined`\n   * @param {*}       result.result    return object of test function\n   * @param {number}  result.duration  duration of test\n   * @param {boolean} result.passed    true if test has passed, otherwise false\n   * @param {object}  result.retries   informations to spec related retries, e.g. `{ attempts: 0, limit: 0 }`\n   */\n  // afterTest: function(test, context, { error, result, duration, passed, retries }) {\n  // },\n\n  /**\n   * Hook that gets executed after the suite has ended\n   * @param {object} suite suite details\n   */\n  // afterSuite: function (suite) {\n  // },\n  /**\n   * Runs after a WebdriverIO command gets executed\n   * @param {string} commandName hook command name\n   * @param {Array} args arguments that command would receive\n   * @param {number} result 0 - command success, 1 - command error\n   * @param {object} error error object if any\n   */\n  // afterCommand: function (commandName, args, result, error) {\n  // },\n  /**\n   * Gets executed after all tests are done. You still have access to all global variables from\n   * the test.\n   * @param {number} result 0 - test pass, 1 - test fail\n   * @param {Array.<Object>} capabilities list of capabilities details\n   * @param {Array.<String>} specs List of spec file paths that ran\n   */\n  // after: function (result, capabilities, specs) {\n  // },\n  /**\n   * Gets executed right after terminating the webdriver session.\n   * @param {object} config wdio configuration object\n   * @param {Array.<Object>} capabilities list of capabilities details\n   * @param {Array.<String>} specs List of spec file paths that ran\n   */\n  // afterSession: function (config, capabilities, specs) {\n  // },\n  /**\n   * Gets executed after all workers got shut down and the process is about to exit. An error\n   * thrown in the onComplete hook will result in the test run failing.\n   * @param {object} exitCode 0 - success, 1 - fail\n   * @param {object} config wdio configuration object\n   * @param {Array.<Object>} capabilities list of capabilities details\n   * @param {<Object>} results object containing test results\n   */\n  // onComplete: function(exitCode, config, capabilities, results) {\n  // },\n  /**\n  * Gets executed when a refresh happens.\n  * @param {string} oldSessionId session ID of the old session\n  * @param {string} newSessionId session ID of the new session\n  */\n  // onReload: function(oldSessionId, newSessionId) {\n  // }\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","map":{"version":3,"names":["exports","config","runner","specs","exclude","maxInstances","capabilities","browserName","logLevel","bail","baseUrl","waitforTimeout","connectionRetryTimeout","connectionRetryCount","framework","reporters","mochaOpts","ui","timeout"],"sourceRoot":"C:\\Users\\Alex\\Desktop\\Work1\\webdriverio-test\\","sources":["wdio.conf.js"],"sourcesContent":["exports.config = {\n    //\n    // ====================\n    // Runner Configuration\n    // ====================\n    // WebdriverIO supports running e2e tests as well as unit and component tests.\n    runner: 'local',\n    //\n    // ==================\n    // Specify Test Files\n    // ==================\n    // Define which test specs should run. The pattern is relative to the directory\n    // of the configuration file being run.\n    //\n    // The specs are defined as an array of spec files (optionally using wildcards\n    // that will be expanded). The test for each spec file will be run in a separate\n    // worker process. In order to have a group of spec files run in the same worker\n    // process simply enclose them in an array within the specs array.\n    //\n    // If you are calling `wdio` from an NPM script (see https://docs.npmjs.com/cli/run-script),\n    // then the current working directory is where your `package.json` resides, so `wdio`\n    // will be called from there.\n    //\n    specs: [\n        './test/specs/**/*.js'\n    ],\n    // Patterns to exclude.\n    exclude: [\n        // 'path/to/excluded/files'\n    ],\n    //\n    // ============\n    // Capabilities\n    // ============\n    // Define your capabilities here. WebdriverIO can run multiple capabilities at the same\n    // time. Depending on the number of capabilities, WebdriverIO launches several test\n    // sessions. Within your capabilities you can overwrite the spec and exclude options in\n    // order to group specific specs to a specific capability.\n    //\n    // First, you can define how many instances should be started at the same time. Let's\n    // say you have 3 different capabilities (Chrome, Firefox, and Safari) and you have\n    // set maxInstances to 1; wdio will spawn 3 processes. Therefore, if you have 10 spec\n    // files and you set maxInstances to 10, all spec files will get tested at the same time\n    // and 30 processes will get spawned. The property handles how many capabilities\n    // from the same test should run tests.\n    //\n    maxInstances: 10,\n    //\n    // If you have trouble getting all important capabilities together, check out the\n    // Sauce Labs platform configurator - a great tool to configure your capabilities:\n    // https://saucelabs.com/platform/platform-configurator\n    //\n    capabilities: [{\n        // capabilities for local browser web tests\n        browserName: 'chrome' // or \"firefox\", \"microsoftedge\", \"safari\"\n    }],\n\n    //\n    // ===================\n    // Test Configurations\n    // ===================\n    // Define all options that are relevant for the WebdriverIO instance here\n    //\n    // Level of logging verbosity: trace | debug | info | warn | error | silent\n    logLevel: 'info',\n    //\n    // Set specific log levels per logger\n    // loggers:\n    // - webdriver, webdriverio\n    // - @wdio/browserstack-service, @wdio/devtools-service, @wdio/sauce-service\n    // - @wdio/mocha-framework, @wdio/jasmine-framework\n    // - @wdio/local-runner\n    // - @wdio/sumologic-reporter\n    // - @wdio/cli, @wdio/config, @wdio/utils\n    // Level of logging verbosity: trace | debug | info | warn | error | silent\n    // logLevels: {\n    //     webdriver: 'info',\n    //     '@wdio/appium-service': 'info'\n    // },\n    //\n    // If you only want to run your tests until a specific amount of tests have failed use\n    // bail (default is 0 - don't bail, run all tests).\n    bail: 0,\n    //\n    // Set a base URL in order to shorten url command calls. If your `url` parameter starts\n    // with `/`, the base url gets prepended, not including the path portion of your baseUrl.\n    // If your `url` parameter starts without a scheme or `/` (like `some/path`), the base url\n    // gets prepended directly.\n    baseUrl: 'http://localhost',\n    //\n    // Default timeout for all waitFor* commands.\n    waitforTimeout: 10000,\n    //\n    // Default timeout in milliseconds for request\n    // if browser driver or grid doesn't send response\n    connectionRetryTimeout: 120000,\n    //\n    // Default request retries count\n    connectionRetryCount: 3,\n    //\n    // Test runner services\n    // Services take over a specific job you don't want to take care of. They enhance\n    // your test setup with almost no effort. Unlike plugins, they don't add new\n    // commands. Instead, they hook themselves up into the test process.\n    // services: [],\n    //\n    // Framework you want to run your specs with.\n    // The following are supported: Mocha, Jasmine, and Cucumber\n    // see also: https://webdriver.io/docs/frameworks\n    //\n    // Make sure you have the wdio adapter package for the specific framework installed\n    // before running any tests.\n    framework: 'mocha',\n    //\n    // The number of times to retry the entire specfile when it fails as a whole\n    // specFileRetries: 1,\n    //\n    // Delay in seconds between the spec file retry attempts\n    // specFileRetriesDelay: 0,\n    //\n    // Whether or not retried spec files should be retried immediately or deferred to the end of the queue\n    // specFileRetriesDeferred: false,\n    //\n    // Test reporter for stdout.\n    // The only one supported by default is 'dot'\n    // see also: https://webdriver.io/docs/dot-reporter\n    reporters: ['spec'],\n\n    \n    //\n    // Options to be passed to Mocha.\n    // See the full list at http://mochajs.org/\n    mochaOpts: {\n        ui: 'bdd',\n        timeout: 60000\n    },\n    //\n    // =====\n    // Hooks\n    // =====\n    // WebdriverIO provides several hooks you can use to interfere with the test process in order to enhance\n    // it and to build services around it. You can either apply a single function or an array of\n    // methods to it. If one of them returns with a promise, WebdriverIO will wait until that promise got\n    // resolved to continue.\n    /**\n     * Gets executed once before all workers get launched.\n     * @param {object} config wdio configuration object\n     * @param {Array.<Object>} capabilities list of capabilities details\n     */\n    // onPrepare: function (config, capabilities) {\n    // },\n    /**\n     * Gets executed before a worker process is spawned and can be used to initialise specific service\n     * for that worker as well as modify runtime environments in an async fashion.\n     * @param  {string} cid      capability id (e.g 0-0)\n     * @param  {object} caps     object containing capabilities for session that will be spawn in the worker\n     * @param  {object} specs    specs to be run in the worker process\n     * @param  {object} args     object that will be merged with the main configuration once worker is initialized\n     * @param  {object} execArgv list of string arguments passed to the worker process\n     */\n    // onWorkerStart: function (cid, caps, specs, args, execArgv) {\n    // },\n    /**\n     * Gets executed just after a worker process has exited.\n     * @param  {string} cid      capability id (e.g 0-0)\n     * @param  {number} exitCode 0 - success, 1 - fail\n     * @param  {object} specs    specs to be run in the worker process\n     * @param  {number} retries  number of retries used\n     */\n    // onWorkerEnd: function (cid, exitCode, specs, retries) {\n    // },\n    /**\n     * Gets executed just before initialising the webdriver session and test framework. It allows you\n     * to manipulate configurations depending on the capability or spec.\n     * @param {object} config wdio configuration object\n     * @param {Array.<Object>} capabilities list of capabilities details\n     * @param {Array.<String>} specs List of spec file paths that are to be run\n     * @param {string} cid worker id (e.g. 0-0)\n     */\n    // beforeSession: function (config, capabilities, specs, cid) {\n    // },\n    /**\n     * Gets executed before test execution begins. At this point you can access to all global\n     * variables like `browser`. It is the perfect place to define custom commands.\n     * @param {Array.<Object>} capabilities list of capabilities details\n     * @param {Array.<String>} specs        List of spec file paths that are to be run\n     * @param {object}         browser      instance of created browser/device session\n     */\n    // before: function (capabilities, specs) {\n    // },\n    /**\n     * Runs before a WebdriverIO command gets executed.\n     * @param {string} commandName hook command name\n     * @param {Array} args arguments that command would receive\n     */\n    // beforeCommand: function (commandName, args) {\n    // },\n    /**\n     * Hook that gets executed before the suite starts\n     * @param {object} suite suite details\n     */\n    // beforeSuite: function (suite) {\n    // },\n    /**\n     * Function to be executed before a test (in Mocha/Jasmine) starts.\n     */\n    // beforeTest: function (test, context) {\n    // },\n    /**\n     * Hook that gets executed _before_ a hook within the suite starts (e.g. runs before calling\n     * beforeEach in Mocha)\n     */\n    // beforeHook: function (test, context) {\n    // },\n    /**\n     * Hook that gets executed _after_ a hook within the suite starts (e.g. runs after calling\n     * afterEach in Mocha)\n     */\n    // afterHook: function (test, context, { error, result, duration, passed, retries }) {\n    // },\n    /**\n     * Function to be executed after a test (in Mocha/Jasmine only)\n     * @param {object}  test             test object\n     * @param {object}  context          scope object the test was executed with\n     * @param {Error}   result.error     error object in case the test fails, otherwise `undefined`\n     * @param {*}       result.result    return object of test function\n     * @param {number}  result.duration  duration of test\n     * @param {boolean} result.passed    true if test has passed, otherwise false\n     * @param {object}  result.retries   informations to spec related retries, e.g. `{ attempts: 0, limit: 0 }`\n     */\n    // afterTest: function(test, context, { error, result, duration, passed, retries }) {\n    // },\n\n\n    /**\n     * Hook that gets executed after the suite has ended\n     * @param {object} suite suite details\n     */\n    // afterSuite: function (suite) {\n    // },\n    /**\n     * Runs after a WebdriverIO command gets executed\n     * @param {string} commandName hook command name\n     * @param {Array} args arguments that command would receive\n     * @param {number} result 0 - command success, 1 - command error\n     * @param {object} error error object if any\n     */\n    // afterCommand: function (commandName, args, result, error) {\n    // },\n    /**\n     * Gets executed after all tests are done. You still have access to all global variables from\n     * the test.\n     * @param {number} result 0 - test pass, 1 - test fail\n     * @param {Array.<Object>} capabilities list of capabilities details\n     * @param {Array.<String>} specs List of spec file paths that ran\n     */\n    // after: function (result, capabilities, specs) {\n    // },\n    /**\n     * Gets executed right after terminating the webdriver session.\n     * @param {object} config wdio configuration object\n     * @param {Array.<Object>} capabilities list of capabilities details\n     * @param {Array.<String>} specs List of spec file paths that ran\n     */\n    // afterSession: function (config, capabilities, specs) {\n    // },\n    /**\n     * Gets executed after all workers got shut down and the process is about to exit. An error\n     * thrown in the onComplete hook will result in the test run failing.\n     * @param {object} exitCode 0 - success, 1 - fail\n     * @param {object} config wdio configuration object\n     * @param {Array.<Object>} capabilities list of capabilities details\n     * @param {<Object>} results object containing test results\n     */\n    // onComplete: function(exitCode, config, capabilities, results) {\n    // },\n    /**\n    * Gets executed when a refresh happens.\n    * @param {string} oldSessionId session ID of the old session\n    * @param {string} newSessionId session ID of the new session\n    */\n    // onReload: function(oldSessionId, newSessionId) {\n    // }\n}\n"],"mappings":"AAAAA,OAAO,CAACC,MAAM,GAAG;EACb;EACA;EACA;EACA;EACA;EACAC,MAAM,EAAE,OAAO;EACf;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACAC,KAAK,EAAE,CACH,sBAAsB,CACzB;EACD;EACAC,OAAO,EAAE;IACL;EAAA,CACH;EACD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACAC,YAAY,EAAE,EAAE;EAChB;EACA;EACA;EACA;EACA;EACAC,YAAY,EAAE,CAAC;IACX;IACAC,WAAW,EAAE,QAAQ,CAAC;EAC1B,CAAC,CAAC;;EAEF;EACA;EACA;EACA;EACA;EACA;EACA;EACAC,QAAQ,EAAE,MAAM;EAChB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACAC,IAAI,EAAE,CAAC;EACP;EACA;EACA;EACA;EACA;EACAC,OAAO,EAAE,kBAAkB;EAC3B;EACA;EACAC,cAAc,EAAE,KAAK;EACrB;EACA;EACA;EACAC,sBAAsB,EAAE,MAAM;EAC9B;EACA;EACAC,oBAAoB,EAAE,CAAC;EACvB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACAC,SAAS,EAAE,OAAO;EAClB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACAC,SAAS,EAAE,CAAC,MAAM,CAAC;EAGnB;EACA;EACA;EACAC,SAAS,EAAE;IACPC,EAAE,EAAE,KAAK;IACTC,OAAO,EAAE;EACb;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACJ;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI;EACA;;EAGA;AACJ;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;EACI;EACA;AACJ,CAAC"}},"mtime":1693336488935},"{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\Alex\\\\Desktop\\\\Work1\\\\webdriverio-test\\\\test\\\\specs\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\Alex\\\\Desktop\\\\Work1\\\\webdriverio-test\",\"filename\":\"C:\\\\Users\\\\Alex\\\\Desktop\\\\Work1\\\\webdriverio-test\\\\test\\\\specs\\\\test.e2e.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"C:\\\\Users\\\\Alex\\\\Desktop\\\\Work1\\\\webdriverio-test\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.22.11:test":{"value":{"code":"const {\n  expect\n} = require('@wdio/globals');\nconst LoginPage = require('../pageobjects/login.page');\nconst SecurePage = require('../pageobjects/secure.page');\ndescribe('My Login application', () => {\n  it('should login with valid credentials', async () => {\n    await LoginPage.open();\n    await LoginPage.login('tomsmith', 'SuperSecretPassword!');\n    await expect(SecurePage.flashAlert).toBeExisting();\n    await expect(SecurePage.flashAlert).toHaveTextContaining('You logged into a secure area!');\n  });\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJleHBlY3QiLCJyZXF1aXJlIiwiTG9naW5QYWdlIiwiU2VjdXJlUGFnZSIsImRlc2NyaWJlIiwiaXQiLCJvcGVuIiwibG9naW4iLCJmbGFzaEFsZXJ0IiwidG9CZUV4aXN0aW5nIiwidG9IYXZlVGV4dENvbnRhaW5pbmciXSwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcQWxleFxcRGVza3RvcFxcV29yazFcXHdlYmRyaXZlcmlvLXRlc3RcXHRlc3RcXHNwZWNzXFwiLCJzb3VyY2VzIjpbInRlc3QuZTJlLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IHsgZXhwZWN0IH0gPSByZXF1aXJlKCdAd2Rpby9nbG9iYWxzJylcbmNvbnN0IExvZ2luUGFnZSA9IHJlcXVpcmUoJy4uL3BhZ2VvYmplY3RzL2xvZ2luLnBhZ2UnKVxuY29uc3QgU2VjdXJlUGFnZSA9IHJlcXVpcmUoJy4uL3BhZ2VvYmplY3RzL3NlY3VyZS5wYWdlJylcblxuZGVzY3JpYmUoJ015IExvZ2luIGFwcGxpY2F0aW9uJywgKCkgPT4ge1xuICAgIGl0KCdzaG91bGQgbG9naW4gd2l0aCB2YWxpZCBjcmVkZW50aWFscycsIGFzeW5jICgpID0+IHtcbiAgICAgICAgYXdhaXQgTG9naW5QYWdlLm9wZW4oKVxuXG4gICAgICAgIGF3YWl0IExvZ2luUGFnZS5sb2dpbigndG9tc21pdGgnLCAnU3VwZXJTZWNyZXRQYXNzd29yZCEnKVxuICAgICAgICBhd2FpdCBleHBlY3QoU2VjdXJlUGFnZS5mbGFzaEFsZXJ0KS50b0JlRXhpc3RpbmcoKVxuICAgICAgICBhd2FpdCBleHBlY3QoU2VjdXJlUGFnZS5mbGFzaEFsZXJ0KS50b0hhdmVUZXh0Q29udGFpbmluZyhcbiAgICAgICAgICAgICdZb3UgbG9nZ2VkIGludG8gYSBzZWN1cmUgYXJlYSEnKVxuICAgIH0pXG59KVxuXG4iXSwibWFwcGluZ3MiOiJBQUFBLE1BQU07RUFBRUE7QUFBTyxDQUFDLEdBQUdDLE9BQU8sQ0FBQyxlQUFlLENBQUM7QUFDM0MsTUFBTUMsU0FBUyxHQUFHRCxPQUFPLENBQUMsMkJBQTJCLENBQUM7QUFDdEQsTUFBTUUsVUFBVSxHQUFHRixPQUFPLENBQUMsNEJBQTRCLENBQUM7QUFFeERHLFFBQVEsQ0FBQyxzQkFBc0IsRUFBRSxNQUFNO0VBQ25DQyxFQUFFLENBQUMscUNBQXFDLEVBQUUsWUFBWTtJQUNsRCxNQUFNSCxTQUFTLENBQUNJLElBQUksQ0FBQyxDQUFDO0lBRXRCLE1BQU1KLFNBQVMsQ0FBQ0ssS0FBSyxDQUFDLFVBQVUsRUFBRSxzQkFBc0IsQ0FBQztJQUN6RCxNQUFNUCxNQUFNLENBQUNHLFVBQVUsQ0FBQ0ssVUFBVSxDQUFDLENBQUNDLFlBQVksQ0FBQyxDQUFDO0lBQ2xELE1BQU1ULE1BQU0sQ0FBQ0csVUFBVSxDQUFDSyxVQUFVLENBQUMsQ0FBQ0Usb0JBQW9CLENBQ3BELGdDQUFnQyxDQUFDO0VBQ3pDLENBQUMsQ0FBQztBQUNOLENBQUMsQ0FBQyJ9","map":{"version":3,"names":["expect","require","LoginPage","SecurePage","describe","it","open","login","flashAlert","toBeExisting","toHaveTextContaining"],"sourceRoot":"C:\\Users\\Alex\\Desktop\\Work1\\webdriverio-test\\test\\specs\\","sources":["test.e2e.js"],"sourcesContent":["const { expect } = require('@wdio/globals')\nconst LoginPage = require('../pageobjects/login.page')\nconst SecurePage = require('../pageobjects/secure.page')\n\ndescribe('My Login application', () => {\n    it('should login with valid credentials', async () => {\n        await LoginPage.open()\n\n        await LoginPage.login('tomsmith', 'SuperSecretPassword!')\n        await expect(SecurePage.flashAlert).toBeExisting()\n        await expect(SecurePage.flashAlert).toHaveTextContaining(\n            'You logged into a secure area!')\n    })\n})\n\n"],"mappings":"AAAA,MAAM;EAAEA;AAAO,CAAC,GAAGC,OAAO,CAAC,eAAe,CAAC;AAC3C,MAAMC,SAAS,GAAGD,OAAO,CAAC,2BAA2B,CAAC;AACtD,MAAME,UAAU,GAAGF,OAAO,CAAC,4BAA4B,CAAC;AAExDG,QAAQ,CAAC,sBAAsB,EAAE,MAAM;EACnCC,EAAE,CAAC,qCAAqC,EAAE,YAAY;IAClD,MAAMH,SAAS,CAACI,IAAI,CAAC,CAAC;IAEtB,MAAMJ,SAAS,CAACK,KAAK,CAAC,UAAU,EAAE,sBAAsB,CAAC;IACzD,MAAMP,MAAM,CAACG,UAAU,CAACK,UAAU,CAAC,CAACC,YAAY,CAAC,CAAC;IAClD,MAAMT,MAAM,CAACG,UAAU,CAACK,UAAU,CAAC,CAACE,oBAAoB,CACpD,gCAAgC,CAAC;EACzC,CAAC,CAAC;AACN,CAAC,CAAC"}},"mtime":1693336488953},"{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\Alex\\\\Desktop\\\\Work1\\\\webdriverio-test\\\\test\\\\pageobjects\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\Alex\\\\Desktop\\\\Work1\\\\webdriverio-test\",\"filename\":\"C:\\\\Users\\\\Alex\\\\Desktop\\\\Work1\\\\webdriverio-test\\\\test\\\\pageobjects\\\\login.page.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"C:\\\\Users\\\\Alex\\\\Desktop\\\\Work1\\\\webdriverio-test\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.22.11:test":{"value":{"code":"const {\n  $\n} = require('@wdio/globals');\nconst Page = require('./page');\n\n/**\n * sub page containing specific selectors and methods for a specific page\n */\nclass LoginPage extends Page {\n  /**\n   * define selectors using getter methods\n   */\n  get inputUsername() {\n    return $('#username');\n  }\n  get inputPassword() {\n    return $('#password');\n  }\n  get btnSubmit() {\n    return $('button[type=\"submit\"]');\n  }\n\n  /**\n   * a method to encapsule automation code to interact with the page\n   * e.g. to login using username and password\n   */\n  async login(username, password) {\n    await this.inputUsername.setValue(username);\n    await this.inputPassword.setValue(password);\n    await this.btnSubmit.click();\n  }\n\n  /**\n   * overwrite specific options to adapt it to page object\n   */\n  open() {\n    return super.open('login');\n  }\n}\nmodule.exports = new LoginPage();\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyIkIiwicmVxdWlyZSIsIlBhZ2UiLCJMb2dpblBhZ2UiLCJpbnB1dFVzZXJuYW1lIiwiaW5wdXRQYXNzd29yZCIsImJ0blN1Ym1pdCIsImxvZ2luIiwidXNlcm5hbWUiLCJwYXNzd29yZCIsInNldFZhbHVlIiwiY2xpY2siLCJvcGVuIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFxBbGV4XFxEZXNrdG9wXFxXb3JrMVxcd2ViZHJpdmVyaW8tdGVzdFxcdGVzdFxccGFnZW9iamVjdHNcXCIsInNvdXJjZXMiOlsibG9naW4ucGFnZS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCB7ICQgfSA9IHJlcXVpcmUoJ0B3ZGlvL2dsb2JhbHMnKVxuY29uc3QgUGFnZSA9IHJlcXVpcmUoJy4vcGFnZScpO1xuXG4vKipcbiAqIHN1YiBwYWdlIGNvbnRhaW5pbmcgc3BlY2lmaWMgc2VsZWN0b3JzIGFuZCBtZXRob2RzIGZvciBhIHNwZWNpZmljIHBhZ2VcbiAqL1xuY2xhc3MgTG9naW5QYWdlIGV4dGVuZHMgUGFnZSB7XG4gICAgLyoqXG4gICAgICogZGVmaW5lIHNlbGVjdG9ycyB1c2luZyBnZXR0ZXIgbWV0aG9kc1xuICAgICAqL1xuICAgIGdldCBpbnB1dFVzZXJuYW1lICgpIHtcbiAgICAgICAgcmV0dXJuICQoJyN1c2VybmFtZScpO1xuICAgIH1cblxuICAgIGdldCBpbnB1dFBhc3N3b3JkICgpIHtcbiAgICAgICAgcmV0dXJuICQoJyNwYXNzd29yZCcpO1xuICAgIH1cblxuICAgIGdldCBidG5TdWJtaXQgKCkge1xuICAgICAgICByZXR1cm4gJCgnYnV0dG9uW3R5cGU9XCJzdWJtaXRcIl0nKTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBhIG1ldGhvZCB0byBlbmNhcHN1bGUgYXV0b21hdGlvbiBjb2RlIHRvIGludGVyYWN0IHdpdGggdGhlIHBhZ2VcbiAgICAgKiBlLmcuIHRvIGxvZ2luIHVzaW5nIHVzZXJuYW1lIGFuZCBwYXNzd29yZFxuICAgICAqL1xuICAgIGFzeW5jIGxvZ2luICh1c2VybmFtZSwgcGFzc3dvcmQpIHtcbiAgICAgICAgYXdhaXQgdGhpcy5pbnB1dFVzZXJuYW1lLnNldFZhbHVlKHVzZXJuYW1lKTtcbiAgICAgICAgYXdhaXQgdGhpcy5pbnB1dFBhc3N3b3JkLnNldFZhbHVlKHBhc3N3b3JkKTtcbiAgICAgICAgYXdhaXQgdGhpcy5idG5TdWJtaXQuY2xpY2soKTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBvdmVyd3JpdGUgc3BlY2lmaWMgb3B0aW9ucyB0byBhZGFwdCBpdCB0byBwYWdlIG9iamVjdFxuICAgICAqL1xuICAgIG9wZW4gKCkge1xuICAgICAgICByZXR1cm4gc3VwZXIub3BlbignbG9naW4nKTtcbiAgICB9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gbmV3IExvZ2luUGFnZSgpO1xuIl0sIm1hcHBpbmdzIjoiQUFBQSxNQUFNO0VBQUVBO0FBQUUsQ0FBQyxHQUFHQyxPQUFPLENBQUMsZUFBZSxDQUFDO0FBQ3RDLE1BQU1DLElBQUksR0FBR0QsT0FBTyxDQUFDLFFBQVEsQ0FBQzs7QUFFOUI7QUFDQTtBQUNBO0FBQ0EsTUFBTUUsU0FBUyxTQUFTRCxJQUFJLENBQUM7RUFDekI7QUFDSjtBQUNBO0VBQ0ksSUFBSUUsYUFBYUEsQ0FBQSxFQUFJO0lBQ2pCLE9BQU9KLENBQUMsQ0FBQyxXQUFXLENBQUM7RUFDekI7RUFFQSxJQUFJSyxhQUFhQSxDQUFBLEVBQUk7SUFDakIsT0FBT0wsQ0FBQyxDQUFDLFdBQVcsQ0FBQztFQUN6QjtFQUVBLElBQUlNLFNBQVNBLENBQUEsRUFBSTtJQUNiLE9BQU9OLENBQUMsQ0FBQyx1QkFBdUIsQ0FBQztFQUNyQzs7RUFFQTtBQUNKO0FBQ0E7QUFDQTtFQUNJLE1BQU1PLEtBQUtBLENBQUVDLFFBQVEsRUFBRUMsUUFBUSxFQUFFO0lBQzdCLE1BQU0sSUFBSSxDQUFDTCxhQUFhLENBQUNNLFFBQVEsQ0FBQ0YsUUFBUSxDQUFDO0lBQzNDLE1BQU0sSUFBSSxDQUFDSCxhQUFhLENBQUNLLFFBQVEsQ0FBQ0QsUUFBUSxDQUFDO0lBQzNDLE1BQU0sSUFBSSxDQUFDSCxTQUFTLENBQUNLLEtBQUssQ0FBQyxDQUFDO0VBQ2hDOztFQUVBO0FBQ0o7QUFDQTtFQUNJQyxJQUFJQSxDQUFBLEVBQUk7SUFDSixPQUFPLEtBQUssQ0FBQ0EsSUFBSSxDQUFDLE9BQU8sQ0FBQztFQUM5QjtBQUNKO0FBRUFDLE1BQU0sQ0FBQ0MsT0FBTyxHQUFHLElBQUlYLFNBQVMsQ0FBQyxDQUFDIn0=","map":{"version":3,"names":["$","require","Page","LoginPage","inputUsername","inputPassword","btnSubmit","login","username","password","setValue","click","open","module","exports"],"sourceRoot":"C:\\Users\\Alex\\Desktop\\Work1\\webdriverio-test\\test\\pageobjects\\","sources":["login.page.js"],"sourcesContent":["const { $ } = require('@wdio/globals')\nconst Page = require('./page');\n\n/**\n * sub page containing specific selectors and methods for a specific page\n */\nclass LoginPage extends Page {\n    /**\n     * define selectors using getter methods\n     */\n    get inputUsername () {\n        return $('#username');\n    }\n\n    get inputPassword () {\n        return $('#password');\n    }\n\n    get btnSubmit () {\n        return $('button[type=\"submit\"]');\n    }\n\n    /**\n     * a method to encapsule automation code to interact with the page\n     * e.g. to login using username and password\n     */\n    async login (username, password) {\n        await this.inputUsername.setValue(username);\n        await this.inputPassword.setValue(password);\n        await this.btnSubmit.click();\n    }\n\n    /**\n     * overwrite specific options to adapt it to page object\n     */\n    open () {\n        return super.open('login');\n    }\n}\n\nmodule.exports = new LoginPage();\n"],"mappings":"AAAA,MAAM;EAAEA;AAAE,CAAC,GAAGC,OAAO,CAAC,eAAe,CAAC;AACtC,MAAMC,IAAI,GAAGD,OAAO,CAAC,QAAQ,CAAC;;AAE9B;AACA;AACA;AACA,MAAME,SAAS,SAASD,IAAI,CAAC;EACzB;AACJ;AACA;EACI,IAAIE,aAAaA,CAAA,EAAI;IACjB,OAAOJ,CAAC,CAAC,WAAW,CAAC;EACzB;EAEA,IAAIK,aAAaA,CAAA,EAAI;IACjB,OAAOL,CAAC,CAAC,WAAW,CAAC;EACzB;EAEA,IAAIM,SAASA,CAAA,EAAI;IACb,OAAON,CAAC,CAAC,uBAAuB,CAAC;EACrC;;EAEA;AACJ;AACA;AACA;EACI,MAAMO,KAAKA,CAAEC,QAAQ,EAAEC,QAAQ,EAAE;IAC7B,MAAM,IAAI,CAACL,aAAa,CAACM,QAAQ,CAACF,QAAQ,CAAC;IAC3C,MAAM,IAAI,CAACH,aAAa,CAACK,QAAQ,CAACD,QAAQ,CAAC;IAC3C,MAAM,IAAI,CAACH,SAAS,CAACK,KAAK,CAAC,CAAC;EAChC;;EAEA;AACJ;AACA;EACIC,IAAIA,CAAA,EAAI;IACJ,OAAO,KAAK,CAACA,IAAI,CAAC,OAAO,CAAC;EAC9B;AACJ;AAEAC,MAAM,CAACC,OAAO,GAAG,IAAIX,SAAS,CAAC,CAAC"}},"mtime":1693336488940},"{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\Alex\\\\Desktop\\\\Work1\\\\webdriverio-test\\\\test\\\\pageobjects\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\Alex\\\\Desktop\\\\Work1\\\\webdriverio-test\",\"filename\":\"C:\\\\Users\\\\Alex\\\\Desktop\\\\Work1\\\\webdriverio-test\\\\test\\\\pageobjects\\\\page.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"C:\\\\Users\\\\Alex\\\\Desktop\\\\Work1\\\\webdriverio-test\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.22.11:test":{"value":{"code":"const {\n  browser\n} = require('@wdio/globals');\n\n/**\n* main page object containing all methods, selectors and functionality\n* that is shared across all page objects\n*/\nmodule.exports = class Page {\n  /**\n  * Opens a sub page of the page\n  * @param path path of the sub page (e.g. /path/to/page.html)\n  */\n  open(path) {\n    return browser.url(`https://the-internet.herokuapp.com/${path}`);\n  }\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJicm93c2VyIiwicmVxdWlyZSIsIm1vZHVsZSIsImV4cG9ydHMiLCJQYWdlIiwib3BlbiIsInBhdGgiLCJ1cmwiXSwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcQWxleFxcRGVza3RvcFxcV29yazFcXHdlYmRyaXZlcmlvLXRlc3RcXHRlc3RcXHBhZ2VvYmplY3RzXFwiLCJzb3VyY2VzIjpbInBhZ2UuanMiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgeyBicm93c2VyIH0gPSByZXF1aXJlKCdAd2Rpby9nbG9iYWxzJylcblxuLyoqXG4qIG1haW4gcGFnZSBvYmplY3QgY29udGFpbmluZyBhbGwgbWV0aG9kcywgc2VsZWN0b3JzIGFuZCBmdW5jdGlvbmFsaXR5XG4qIHRoYXQgaXMgc2hhcmVkIGFjcm9zcyBhbGwgcGFnZSBvYmplY3RzXG4qL1xubW9kdWxlLmV4cG9ydHMgPSBjbGFzcyBQYWdlIHtcbiAgICAvKipcbiAgICAqIE9wZW5zIGEgc3ViIHBhZ2Ugb2YgdGhlIHBhZ2VcbiAgICAqIEBwYXJhbSBwYXRoIHBhdGggb2YgdGhlIHN1YiBwYWdlIChlLmcuIC9wYXRoL3RvL3BhZ2UuaHRtbClcbiAgICAqL1xuICAgIG9wZW4gKHBhdGgpIHtcbiAgICAgICAgcmV0dXJuIGJyb3dzZXIudXJsKGBodHRwczovL3RoZS1pbnRlcm5ldC5oZXJva3VhcHAuY29tLyR7cGF0aH1gKVxuICAgIH1cbn1cbiJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTTtFQUFFQTtBQUFRLENBQUMsR0FBR0MsT0FBTyxDQUFDLGVBQWUsQ0FBQzs7QUFFNUM7QUFDQTtBQUNBO0FBQ0E7QUFDQUMsTUFBTSxDQUFDQyxPQUFPLEdBQUcsTUFBTUMsSUFBSSxDQUFDO0VBQ3hCO0FBQ0o7QUFDQTtBQUNBO0VBQ0lDLElBQUlBLENBQUVDLElBQUksRUFBRTtJQUNSLE9BQU9OLE9BQU8sQ0FBQ08sR0FBRyxDQUFFLHNDQUFxQ0QsSUFBSyxFQUFDLENBQUM7RUFDcEU7QUFDSixDQUFDIn0=","map":{"version":3,"names":["browser","require","module","exports","Page","open","path","url"],"sourceRoot":"C:\\Users\\Alex\\Desktop\\Work1\\webdriverio-test\\test\\pageobjects\\","sources":["page.js"],"sourcesContent":["const { browser } = require('@wdio/globals')\n\n/**\n* main page object containing all methods, selectors and functionality\n* that is shared across all page objects\n*/\nmodule.exports = class Page {\n    /**\n    * Opens a sub page of the page\n    * @param path path of the sub page (e.g. /path/to/page.html)\n    */\n    open (path) {\n        return browser.url(`https://the-internet.herokuapp.com/${path}`)\n    }\n}\n"],"mappings":"AAAA,MAAM;EAAEA;AAAQ,CAAC,GAAGC,OAAO,CAAC,eAAe,CAAC;;AAE5C;AACA;AACA;AACA;AACAC,MAAM,CAACC,OAAO,GAAG,MAAMC,IAAI,CAAC;EACxB;AACJ;AACA;AACA;EACIC,IAAIA,CAAEC,IAAI,EAAE;IACR,OAAON,OAAO,CAACO,GAAG,CAAE,sCAAqCD,IAAK,EAAC,CAAC;EACpE;AACJ,CAAC"}},"mtime":1693336488943},"{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\Alex\\\\Desktop\\\\Work1\\\\webdriverio-test\\\\test\\\\pageobjects\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\Alex\\\\Desktop\\\\Work1\\\\webdriverio-test\",\"filename\":\"C:\\\\Users\\\\Alex\\\\Desktop\\\\Work1\\\\webdriverio-test\\\\test\\\\pageobjects\\\\secure.page.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"C:\\\\Users\\\\Alex\\\\Desktop\\\\Work1\\\\webdriverio-test\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.22.11:test":{"value":{"code":"const {\n  $\n} = require('@wdio/globals');\nconst Page = require('./page');\n\n/**\n * sub page containing specific selectors and methods for a specific page\n */\nclass SecurePage extends Page {\n  /**\n   * define selectors using getter methods\n   */\n  get flashAlert() {\n    return $('#flash');\n  }\n}\nmodule.exports = new SecurePage();\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyIkIiwicmVxdWlyZSIsIlBhZ2UiLCJTZWN1cmVQYWdlIiwiZmxhc2hBbGVydCIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcQWxleFxcRGVza3RvcFxcV29yazFcXHdlYmRyaXZlcmlvLXRlc3RcXHRlc3RcXHBhZ2VvYmplY3RzXFwiLCJzb3VyY2VzIjpbInNlY3VyZS5wYWdlLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IHsgJCB9ID0gcmVxdWlyZSgnQHdkaW8vZ2xvYmFscycpXG5jb25zdCBQYWdlID0gcmVxdWlyZSgnLi9wYWdlJyk7XG5cbi8qKlxuICogc3ViIHBhZ2UgY29udGFpbmluZyBzcGVjaWZpYyBzZWxlY3RvcnMgYW5kIG1ldGhvZHMgZm9yIGEgc3BlY2lmaWMgcGFnZVxuICovXG5jbGFzcyBTZWN1cmVQYWdlIGV4dGVuZHMgUGFnZSB7XG4gICAgLyoqXG4gICAgICogZGVmaW5lIHNlbGVjdG9ycyB1c2luZyBnZXR0ZXIgbWV0aG9kc1xuICAgICAqL1xuICAgIGdldCBmbGFzaEFsZXJ0ICgpIHtcbiAgICAgICAgcmV0dXJuICQoJyNmbGFzaCcpO1xuICAgIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBuZXcgU2VjdXJlUGFnZSgpO1xuIl0sIm1hcHBpbmdzIjoiQUFBQSxNQUFNO0VBQUVBO0FBQUUsQ0FBQyxHQUFHQyxPQUFPLENBQUMsZUFBZSxDQUFDO0FBQ3RDLE1BQU1DLElBQUksR0FBR0QsT0FBTyxDQUFDLFFBQVEsQ0FBQzs7QUFFOUI7QUFDQTtBQUNBO0FBQ0EsTUFBTUUsVUFBVSxTQUFTRCxJQUFJLENBQUM7RUFDMUI7QUFDSjtBQUNBO0VBQ0ksSUFBSUUsVUFBVUEsQ0FBQSxFQUFJO0lBQ2QsT0FBT0osQ0FBQyxDQUFDLFFBQVEsQ0FBQztFQUN0QjtBQUNKO0FBRUFLLE1BQU0sQ0FBQ0MsT0FBTyxHQUFHLElBQUlILFVBQVUsQ0FBQyxDQUFDIn0=","map":{"version":3,"names":["$","require","Page","SecurePage","flashAlert","module","exports"],"sourceRoot":"C:\\Users\\Alex\\Desktop\\Work1\\webdriverio-test\\test\\pageobjects\\","sources":["secure.page.js"],"sourcesContent":["const { $ } = require('@wdio/globals')\nconst Page = require('./page');\n\n/**\n * sub page containing specific selectors and methods for a specific page\n */\nclass SecurePage extends Page {\n    /**\n     * define selectors using getter methods\n     */\n    get flashAlert () {\n        return $('#flash');\n    }\n}\n\nmodule.exports = new SecurePage();\n"],"mappings":"AAAA,MAAM;EAAEA;AAAE,CAAC,GAAGC,OAAO,CAAC,eAAe,CAAC;AACtC,MAAMC,IAAI,GAAGD,OAAO,CAAC,QAAQ,CAAC;;AAE9B;AACA;AACA;AACA,MAAME,UAAU,SAASD,IAAI,CAAC;EAC1B;AACJ;AACA;EACI,IAAIE,UAAUA,CAAA,EAAI;IACd,OAAOJ,CAAC,CAAC,QAAQ,CAAC;EACtB;AACJ;AAEAK,MAAM,CAACC,OAAO,GAAG,IAAIH,UAAU,CAAC,CAAC"}},"mtime":1693336488945},"{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\Alex\\\\Desktop\\\\work1\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\Alex\\\\Desktop\\\\work1\",\"filename\":\"C:\\\\Users\\\\Alex\\\\Desktop\\\\work1\\\\wdio.conf.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"C:\\\\Users\\\\Alex\\\\Desktop\\\\work1\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.22.11:test":{"value":{"code":"exports.config = {\n  //\n  // ====================\n  // Runner Configuration\n  // ====================\n  // WebdriverIO supports running e2e tests as well as unit and component tests.\n  runner: 'local',\n  //\n  // ==================\n  // Specify Test Files\n  // ==================\n  // Define which test specs should run. The pattern is relative to the directory\n  // of the configuration file being run.\n  //\n  // The specs are defined as an array of spec files (optionally using wildcards\n  // that will be expanded). The test for each spec file will be run in a separate\n  // worker process. In order to have a group of spec files run in the same worker\n  // process simply enclose them in an array within the specs array.\n  //\n  // If you are calling `wdio` from an NPM script (see https://docs.npmjs.com/cli/run-script),\n  // then the current working directory is where your `package.json` resides, so `wdio`\n  // will be called from there.\n  //\n  specs: ['./test/specs/**/*.js'],\n  // Patterns to exclude.\n  exclude: [\n    // 'path/to/excluded/files'\n  ],\n  //\n  // ============\n  // Capabilities\n  // ============\n  // Define your capabilities here. WebdriverIO can run multiple capabilities at the same\n  // time. Depending on the number of capabilities, WebdriverIO launches several test\n  // sessions. Within your capabilities you can overwrite the spec and exclude options in\n  // order to group specific specs to a specific capability.\n  //\n  // First, you can define how many instances should be started at the same time. Let's\n  // say you have 3 different capabilities (Chrome, Firefox, and Safari) and you have\n  // set maxInstances to 1; wdio will spawn 3 processes. Therefore, if you have 10 spec\n  // files and you set maxInstances to 10, all spec files will get tested at the same time\n  // and 30 processes will get spawned. The property handles how many capabilities\n  // from the same test should run tests.\n  //\n  maxInstances: 10,\n  //\n  // If you have trouble getting all important capabilities together, check out the\n  // Sauce Labs platform configurator - a great tool to configure your capabilities:\n  // https://saucelabs.com/platform/platform-configurator\n  //\n  capabilities: [{\n    // capabilities for local browser web tests\n    browserName: 'chrome' // or \"firefox\", \"microsoftedge\", \"safari\"\n  }],\n\n  //\n  // ===================\n  // Test Configurations\n  // ===================\n  // Define all options that are relevant for the WebdriverIO instance here\n  //\n  // Level of logging verbosity: trace | debug | info | warn | error | silent\n  logLevel: 'info',\n  //\n  // Set specific log levels per logger\n  // loggers:\n  // - webdriver, webdriverio\n  // - @wdio/browserstack-service, @wdio/devtools-service, @wdio/sauce-service\n  // - @wdio/mocha-framework, @wdio/jasmine-framework\n  // - @wdio/local-runner\n  // - @wdio/sumologic-reporter\n  // - @wdio/cli, @wdio/config, @wdio/utils\n  // Level of logging verbosity: trace | debug | info | warn | error | silent\n  // logLevels: {\n  //     webdriver: 'info',\n  //     '@wdio/appium-service': 'info'\n  // },\n  //\n  // If you only want to run your tests until a specific amount of tests have failed use\n  // bail (default is 0 - don't bail, run all tests).\n  bail: 0,\n  //\n  // Set a base URL in order to shorten url command calls. If your `url` parameter starts\n  // with `/`, the base url gets prepended, not including the path portion of your baseUrl.\n  // If your `url` parameter starts without a scheme or `/` (like `some/path`), the base url\n  // gets prepended directly.\n  baseUrl: 'http://localhost',\n  //\n  // Default timeout for all waitFor* commands.\n  waitforTimeout: 10000,\n  //\n  // Default timeout in milliseconds for request\n  // if browser driver or grid doesn't send response\n  connectionRetryTimeout: 120000,\n  //\n  // Default request retries count\n  connectionRetryCount: 3,\n  //\n  // Test runner services\n  // Services take over a specific job you don't want to take care of. They enhance\n  // your test setup with almost no effort. Unlike plugins, they don't add new\n  // commands. Instead, they hook themselves up into the test process.\n  // services: [],\n  //\n  // Framework you want to run your specs with.\n  // The following are supported: Mocha, Jasmine, and Cucumber\n  // see also: https://webdriver.io/docs/frameworks\n  //\n  // Make sure you have the wdio adapter package for the specific framework installed\n  // before running any tests.\n  framework: 'mocha',\n  //\n  // The number of times to retry the entire specfile when it fails as a whole\n  // specFileRetries: 1,\n  //\n  // Delay in seconds between the spec file retry attempts\n  // specFileRetriesDelay: 0,\n  //\n  // Whether or not retried spec files should be retried immediately or deferred to the end of the queue\n  // specFileRetriesDeferred: false,\n  //\n  // Test reporter for stdout.\n  // The only one supported by default is 'dot'\n  // see also: https://webdriver.io/docs/dot-reporter\n  reporters: ['spec'],\n  //\n  // Options to be passed to Mocha.\n  // See the full list at http://mochajs.org/\n  mochaOpts: {\n    ui: 'bdd',\n    timeout: 60000\n  }\n  //\n  // =====\n  // Hooks\n  // =====\n  // WebdriverIO provides several hooks you can use to interfere with the test process in order to enhance\n  // it and to build services around it. You can either apply a single function or an array of\n  // methods to it. If one of them returns with a promise, WebdriverIO will wait until that promise got\n  // resolved to continue.\n  /**\n   * Gets executed once before all workers get launched.\n   * @param {object} config wdio configuration object\n   * @param {Array.<Object>} capabilities list of capabilities details\n   */\n  // onPrepare: function (config, capabilities) {\n  // },\n  /**\n   * Gets executed before a worker process is spawned and can be used to initialise specific service\n   * for that worker as well as modify runtime environments in an async fashion.\n   * @param  {string} cid      capability id (e.g 0-0)\n   * @param  {object} caps     object containing capabilities for session that will be spawn in the worker\n   * @param  {object} specs    specs to be run in the worker process\n   * @param  {object} args     object that will be merged with the main configuration once worker is initialized\n   * @param  {object} execArgv list of string arguments passed to the worker process\n   */\n  // onWorkerStart: function (cid, caps, specs, args, execArgv) {\n  // },\n  /**\n   * Gets executed just after a worker process has exited.\n   * @param  {string} cid      capability id (e.g 0-0)\n   * @param  {number} exitCode 0 - success, 1 - fail\n   * @param  {object} specs    specs to be run in the worker process\n   * @param  {number} retries  number of retries used\n   */\n  // onWorkerEnd: function (cid, exitCode, specs, retries) {\n  // },\n  /**\n   * Gets executed just before initialising the webdriver session and test framework. It allows you\n   * to manipulate configurations depending on the capability or spec.\n   * @param {object} config wdio configuration object\n   * @param {Array.<Object>} capabilities list of capabilities details\n   * @param {Array.<String>} specs List of spec file paths that are to be run\n   * @param {string} cid worker id (e.g. 0-0)\n   */\n  // beforeSession: function (config, capabilities, specs, cid) {\n  // },\n  /**\n   * Gets executed before test execution begins. At this point you can access to all global\n   * variables like `browser`. It is the perfect place to define custom commands.\n   * @param {Array.<Object>} capabilities list of capabilities details\n   * @param {Array.<String>} specs        List of spec file paths that are to be run\n   * @param {object}         browser      instance of created browser/device session\n   */\n  // before: function (capabilities, specs) {\n  // },\n  /**\n   * Runs before a WebdriverIO command gets executed.\n   * @param {string} commandName hook command name\n   * @param {Array} args arguments that command would receive\n   */\n  // beforeCommand: function (commandName, args) {\n  // },\n  /**\n   * Hook that gets executed before the suite starts\n   * @param {object} suite suite details\n   */\n  // beforeSuite: function (suite) {\n  // },\n  /**\n   * Function to be executed before a test (in Mocha/Jasmine) starts.\n   */\n  // beforeTest: function (test, context) {\n  // },\n  /**\n   * Hook that gets executed _before_ a hook within the suite starts (e.g. runs before calling\n   * beforeEach in Mocha)\n   */\n  // beforeHook: function (test, context) {\n  // },\n  /**\n   * Hook that gets executed _after_ a hook within the suite starts (e.g. runs after calling\n   * afterEach in Mocha)\n   */\n  // afterHook: function (test, context, { error, result, duration, passed, retries }) {\n  // },\n  /**\n   * Function to be executed after a test (in Mocha/Jasmine only)\n   * @param {object}  test             test object\n   * @param {object}  context          scope object the test was executed with\n   * @param {Error}   result.error     error object in case the test fails, otherwise `undefined`\n   * @param {*}       result.result    return object of test function\n   * @param {number}  result.duration  duration of test\n   * @param {boolean} result.passed    true if test has passed, otherwise false\n   * @param {object}  result.retries   informations to spec related retries, e.g. `{ attempts: 0, limit: 0 }`\n   */\n  // afterTest: function(test, context, { error, result, duration, passed, retries }) {\n  // },\n\n  /**\n   * Hook that gets executed after the suite has ended\n   * @param {object} suite suite details\n   */\n  // afterSuite: function (suite) {\n  // },\n  /**\n   * Runs after a WebdriverIO command gets executed\n   * @param {string} commandName hook command name\n   * @param {Array} args arguments that command would receive\n   * @param {number} result 0 - command success, 1 - command error\n   * @param {object} error error object if any\n   */\n  // afterCommand: function (commandName, args, result, error) {\n  // },\n  /**\n   * Gets executed after all tests are done. You still have access to all global variables from\n   * the test.\n   * @param {number} result 0 - test pass, 1 - test fail\n   * @param {Array.<Object>} capabilities list of capabilities details\n   * @param {Array.<String>} specs List of spec file paths that ran\n   */\n  // after: function (result, capabilities, specs) {\n  // },\n  /**\n   * Gets executed right after terminating the webdriver session.\n   * @param {object} config wdio configuration object\n   * @param {Array.<Object>} capabilities list of capabilities details\n   * @param {Array.<String>} specs List of spec file paths that ran\n   */\n  // afterSession: function (config, capabilities, specs) {\n  // },\n  /**\n   * Gets executed after all workers got shut down and the process is about to exit. An error\n   * thrown in the onComplete hook will result in the test run failing.\n   * @param {object} exitCode 0 - success, 1 - fail\n   * @param {object} config wdio configuration object\n   * @param {Array.<Object>} capabilities list of capabilities details\n   * @param {<Object>} results object containing test results\n   */\n  // onComplete: function(exitCode, config, capabilities, results) {\n  // },\n  /**\n  * Gets executed when a refresh happens.\n  * @param {string} oldSessionId session ID of the old session\n  * @param {string} newSessionId session ID of the new session\n  */\n  // onReload: function(oldSessionId, newSessionId) {\n  // }\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJleHBvcnRzIiwiY29uZmlnIiwicnVubmVyIiwic3BlY3MiLCJleGNsdWRlIiwibWF4SW5zdGFuY2VzIiwiY2FwYWJpbGl0aWVzIiwiYnJvd3Nlck5hbWUiLCJsb2dMZXZlbCIsImJhaWwiLCJiYXNlVXJsIiwid2FpdGZvclRpbWVvdXQiLCJjb25uZWN0aW9uUmV0cnlUaW1lb3V0IiwiY29ubmVjdGlvblJldHJ5Q291bnQiLCJmcmFtZXdvcmsiLCJyZXBvcnRlcnMiLCJtb2NoYU9wdHMiLCJ1aSIsInRpbWVvdXQiXSwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcQWxleFxcRGVza3RvcFxcd29yazFcXCIsInNvdXJjZXMiOlsid2Rpby5jb25mLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydHMuY29uZmlnID0ge1xuICAgIC8vXG4gICAgLy8gPT09PT09PT09PT09PT09PT09PT1cbiAgICAvLyBSdW5uZXIgQ29uZmlndXJhdGlvblxuICAgIC8vID09PT09PT09PT09PT09PT09PT09XG4gICAgLy8gV2ViZHJpdmVySU8gc3VwcG9ydHMgcnVubmluZyBlMmUgdGVzdHMgYXMgd2VsbCBhcyB1bml0IGFuZCBjb21wb25lbnQgdGVzdHMuXG4gICAgcnVubmVyOiAnbG9jYWwnLFxuICAgIC8vXG4gICAgLy8gPT09PT09PT09PT09PT09PT09XG4gICAgLy8gU3BlY2lmeSBUZXN0IEZpbGVzXG4gICAgLy8gPT09PT09PT09PT09PT09PT09XG4gICAgLy8gRGVmaW5lIHdoaWNoIHRlc3Qgc3BlY3Mgc2hvdWxkIHJ1bi4gVGhlIHBhdHRlcm4gaXMgcmVsYXRpdmUgdG8gdGhlIGRpcmVjdG9yeVxuICAgIC8vIG9mIHRoZSBjb25maWd1cmF0aW9uIGZpbGUgYmVpbmcgcnVuLlxuICAgIC8vXG4gICAgLy8gVGhlIHNwZWNzIGFyZSBkZWZpbmVkIGFzIGFuIGFycmF5IG9mIHNwZWMgZmlsZXMgKG9wdGlvbmFsbHkgdXNpbmcgd2lsZGNhcmRzXG4gICAgLy8gdGhhdCB3aWxsIGJlIGV4cGFuZGVkKS4gVGhlIHRlc3QgZm9yIGVhY2ggc3BlYyBmaWxlIHdpbGwgYmUgcnVuIGluIGEgc2VwYXJhdGVcbiAgICAvLyB3b3JrZXIgcHJvY2Vzcy4gSW4gb3JkZXIgdG8gaGF2ZSBhIGdyb3VwIG9mIHNwZWMgZmlsZXMgcnVuIGluIHRoZSBzYW1lIHdvcmtlclxuICAgIC8vIHByb2Nlc3Mgc2ltcGx5IGVuY2xvc2UgdGhlbSBpbiBhbiBhcnJheSB3aXRoaW4gdGhlIHNwZWNzIGFycmF5LlxuICAgIC8vXG4gICAgLy8gSWYgeW91IGFyZSBjYWxsaW5nIGB3ZGlvYCBmcm9tIGFuIE5QTSBzY3JpcHQgKHNlZSBodHRwczovL2RvY3MubnBtanMuY29tL2NsaS9ydW4tc2NyaXB0KSxcbiAgICAvLyB0aGVuIHRoZSBjdXJyZW50IHdvcmtpbmcgZGlyZWN0b3J5IGlzIHdoZXJlIHlvdXIgYHBhY2thZ2UuanNvbmAgcmVzaWRlcywgc28gYHdkaW9gXG4gICAgLy8gd2lsbCBiZSBjYWxsZWQgZnJvbSB0aGVyZS5cbiAgICAvL1xuICAgIHNwZWNzOiBbXG4gICAgICAgICcuL3Rlc3Qvc3BlY3MvKiovKi5qcydcbiAgICBdLFxuICAgIC8vIFBhdHRlcm5zIHRvIGV4Y2x1ZGUuXG4gICAgZXhjbHVkZTogW1xuICAgICAgICAvLyAncGF0aC90by9leGNsdWRlZC9maWxlcydcbiAgICBdLFxuICAgIC8vXG4gICAgLy8gPT09PT09PT09PT09XG4gICAgLy8gQ2FwYWJpbGl0aWVzXG4gICAgLy8gPT09PT09PT09PT09XG4gICAgLy8gRGVmaW5lIHlvdXIgY2FwYWJpbGl0aWVzIGhlcmUuIFdlYmRyaXZlcklPIGNhbiBydW4gbXVsdGlwbGUgY2FwYWJpbGl0aWVzIGF0IHRoZSBzYW1lXG4gICAgLy8gdGltZS4gRGVwZW5kaW5nIG9uIHRoZSBudW1iZXIgb2YgY2FwYWJpbGl0aWVzLCBXZWJkcml2ZXJJTyBsYXVuY2hlcyBzZXZlcmFsIHRlc3RcbiAgICAvLyBzZXNzaW9ucy4gV2l0aGluIHlvdXIgY2FwYWJpbGl0aWVzIHlvdSBjYW4gb3ZlcndyaXRlIHRoZSBzcGVjIGFuZCBleGNsdWRlIG9wdGlvbnMgaW5cbiAgICAvLyBvcmRlciB0byBncm91cCBzcGVjaWZpYyBzcGVjcyB0byBhIHNwZWNpZmljIGNhcGFiaWxpdHkuXG4gICAgLy9cbiAgICAvLyBGaXJzdCwgeW91IGNhbiBkZWZpbmUgaG93IG1hbnkgaW5zdGFuY2VzIHNob3VsZCBiZSBzdGFydGVkIGF0IHRoZSBzYW1lIHRpbWUuIExldCdzXG4gICAgLy8gc2F5IHlvdSBoYXZlIDMgZGlmZmVyZW50IGNhcGFiaWxpdGllcyAoQ2hyb21lLCBGaXJlZm94LCBhbmQgU2FmYXJpKSBhbmQgeW91IGhhdmVcbiAgICAvLyBzZXQgbWF4SW5zdGFuY2VzIHRvIDE7IHdkaW8gd2lsbCBzcGF3biAzIHByb2Nlc3Nlcy4gVGhlcmVmb3JlLCBpZiB5b3UgaGF2ZSAxMCBzcGVjXG4gICAgLy8gZmlsZXMgYW5kIHlvdSBzZXQgbWF4SW5zdGFuY2VzIHRvIDEwLCBhbGwgc3BlYyBmaWxlcyB3aWxsIGdldCB0ZXN0ZWQgYXQgdGhlIHNhbWUgdGltZVxuICAgIC8vIGFuZCAzMCBwcm9jZXNzZXMgd2lsbCBnZXQgc3Bhd25lZC4gVGhlIHByb3BlcnR5IGhhbmRsZXMgaG93IG1hbnkgY2FwYWJpbGl0aWVzXG4gICAgLy8gZnJvbSB0aGUgc2FtZSB0ZXN0IHNob3VsZCBydW4gdGVzdHMuXG4gICAgLy9cbiAgICBtYXhJbnN0YW5jZXM6IDEwLFxuICAgIC8vXG4gICAgLy8gSWYgeW91IGhhdmUgdHJvdWJsZSBnZXR0aW5nIGFsbCBpbXBvcnRhbnQgY2FwYWJpbGl0aWVzIHRvZ2V0aGVyLCBjaGVjayBvdXQgdGhlXG4gICAgLy8gU2F1Y2UgTGFicyBwbGF0Zm9ybSBjb25maWd1cmF0b3IgLSBhIGdyZWF0IHRvb2wgdG8gY29uZmlndXJlIHlvdXIgY2FwYWJpbGl0aWVzOlxuICAgIC8vIGh0dHBzOi8vc2F1Y2VsYWJzLmNvbS9wbGF0Zm9ybS9wbGF0Zm9ybS1jb25maWd1cmF0b3JcbiAgICAvL1xuICAgIGNhcGFiaWxpdGllczogW3tcbiAgICAgICAgLy8gY2FwYWJpbGl0aWVzIGZvciBsb2NhbCBicm93c2VyIHdlYiB0ZXN0c1xuICAgICAgICBicm93c2VyTmFtZTogJ2Nocm9tZScgLy8gb3IgXCJmaXJlZm94XCIsIFwibWljcm9zb2Z0ZWRnZVwiLCBcInNhZmFyaVwiXG4gICAgfV0sXG5cbiAgICAvL1xuICAgIC8vID09PT09PT09PT09PT09PT09PT1cbiAgICAvLyBUZXN0IENvbmZpZ3VyYXRpb25zXG4gICAgLy8gPT09PT09PT09PT09PT09PT09PVxuICAgIC8vIERlZmluZSBhbGwgb3B0aW9ucyB0aGF0IGFyZSByZWxldmFudCBmb3IgdGhlIFdlYmRyaXZlcklPIGluc3RhbmNlIGhlcmVcbiAgICAvL1xuICAgIC8vIExldmVsIG9mIGxvZ2dpbmcgdmVyYm9zaXR5OiB0cmFjZSB8IGRlYnVnIHwgaW5mbyB8IHdhcm4gfCBlcnJvciB8IHNpbGVudFxuICAgIGxvZ0xldmVsOiAnaW5mbycsXG4gICAgLy9cbiAgICAvLyBTZXQgc3BlY2lmaWMgbG9nIGxldmVscyBwZXIgbG9nZ2VyXG4gICAgLy8gbG9nZ2VyczpcbiAgICAvLyAtIHdlYmRyaXZlciwgd2ViZHJpdmVyaW9cbiAgICAvLyAtIEB3ZGlvL2Jyb3dzZXJzdGFjay1zZXJ2aWNlLCBAd2Rpby9kZXZ0b29scy1zZXJ2aWNlLCBAd2Rpby9zYXVjZS1zZXJ2aWNlXG4gICAgLy8gLSBAd2Rpby9tb2NoYS1mcmFtZXdvcmssIEB3ZGlvL2phc21pbmUtZnJhbWV3b3JrXG4gICAgLy8gLSBAd2Rpby9sb2NhbC1ydW5uZXJcbiAgICAvLyAtIEB3ZGlvL3N1bW9sb2dpYy1yZXBvcnRlclxuICAgIC8vIC0gQHdkaW8vY2xpLCBAd2Rpby9jb25maWcsIEB3ZGlvL3V0aWxzXG4gICAgLy8gTGV2ZWwgb2YgbG9nZ2luZyB2ZXJib3NpdHk6IHRyYWNlIHwgZGVidWcgfCBpbmZvIHwgd2FybiB8IGVycm9yIHwgc2lsZW50XG4gICAgLy8gbG9nTGV2ZWxzOiB7XG4gICAgLy8gICAgIHdlYmRyaXZlcjogJ2luZm8nLFxuICAgIC8vICAgICAnQHdkaW8vYXBwaXVtLXNlcnZpY2UnOiAnaW5mbydcbiAgICAvLyB9LFxuICAgIC8vXG4gICAgLy8gSWYgeW91IG9ubHkgd2FudCB0byBydW4geW91ciB0ZXN0cyB1bnRpbCBhIHNwZWNpZmljIGFtb3VudCBvZiB0ZXN0cyBoYXZlIGZhaWxlZCB1c2VcbiAgICAvLyBiYWlsIChkZWZhdWx0IGlzIDAgLSBkb24ndCBiYWlsLCBydW4gYWxsIHRlc3RzKS5cbiAgICBiYWlsOiAwLFxuICAgIC8vXG4gICAgLy8gU2V0IGEgYmFzZSBVUkwgaW4gb3JkZXIgdG8gc2hvcnRlbiB1cmwgY29tbWFuZCBjYWxscy4gSWYgeW91ciBgdXJsYCBwYXJhbWV0ZXIgc3RhcnRzXG4gICAgLy8gd2l0aCBgL2AsIHRoZSBiYXNlIHVybCBnZXRzIHByZXBlbmRlZCwgbm90IGluY2x1ZGluZyB0aGUgcGF0aCBwb3J0aW9uIG9mIHlvdXIgYmFzZVVybC5cbiAgICAvLyBJZiB5b3VyIGB1cmxgIHBhcmFtZXRlciBzdGFydHMgd2l0aG91dCBhIHNjaGVtZSBvciBgL2AgKGxpa2UgYHNvbWUvcGF0aGApLCB0aGUgYmFzZSB1cmxcbiAgICAvLyBnZXRzIHByZXBlbmRlZCBkaXJlY3RseS5cbiAgICBiYXNlVXJsOiAnaHR0cDovL2xvY2FsaG9zdCcsXG4gICAgLy9cbiAgICAvLyBEZWZhdWx0IHRpbWVvdXQgZm9yIGFsbCB3YWl0Rm9yKiBjb21tYW5kcy5cbiAgICB3YWl0Zm9yVGltZW91dDogMTAwMDAsXG4gICAgLy9cbiAgICAvLyBEZWZhdWx0IHRpbWVvdXQgaW4gbWlsbGlzZWNvbmRzIGZvciByZXF1ZXN0XG4gICAgLy8gaWYgYnJvd3NlciBkcml2ZXIgb3IgZ3JpZCBkb2Vzbid0IHNlbmQgcmVzcG9uc2VcbiAgICBjb25uZWN0aW9uUmV0cnlUaW1lb3V0OiAxMjAwMDAsXG4gICAgLy9cbiAgICAvLyBEZWZhdWx0IHJlcXVlc3QgcmV0cmllcyBjb3VudFxuICAgIGNvbm5lY3Rpb25SZXRyeUNvdW50OiAzLFxuICAgIC8vXG4gICAgLy8gVGVzdCBydW5uZXIgc2VydmljZXNcbiAgICAvLyBTZXJ2aWNlcyB0YWtlIG92ZXIgYSBzcGVjaWZpYyBqb2IgeW91IGRvbid0IHdhbnQgdG8gdGFrZSBjYXJlIG9mLiBUaGV5IGVuaGFuY2VcbiAgICAvLyB5b3VyIHRlc3Qgc2V0dXAgd2l0aCBhbG1vc3Qgbm8gZWZmb3J0LiBVbmxpa2UgcGx1Z2lucywgdGhleSBkb24ndCBhZGQgbmV3XG4gICAgLy8gY29tbWFuZHMuIEluc3RlYWQsIHRoZXkgaG9vayB0aGVtc2VsdmVzIHVwIGludG8gdGhlIHRlc3QgcHJvY2Vzcy5cbiAgICAvLyBzZXJ2aWNlczogW10sXG4gICAgLy9cbiAgICAvLyBGcmFtZXdvcmsgeW91IHdhbnQgdG8gcnVuIHlvdXIgc3BlY3Mgd2l0aC5cbiAgICAvLyBUaGUgZm9sbG93aW5nIGFyZSBzdXBwb3J0ZWQ6IE1vY2hhLCBKYXNtaW5lLCBhbmQgQ3VjdW1iZXJcbiAgICAvLyBzZWUgYWxzbzogaHR0cHM6Ly93ZWJkcml2ZXIuaW8vZG9jcy9mcmFtZXdvcmtzXG4gICAgLy9cbiAgICAvLyBNYWtlIHN1cmUgeW91IGhhdmUgdGhlIHdkaW8gYWRhcHRlciBwYWNrYWdlIGZvciB0aGUgc3BlY2lmaWMgZnJhbWV3b3JrIGluc3RhbGxlZFxuICAgIC8vIGJlZm9yZSBydW5uaW5nIGFueSB0ZXN0cy5cbiAgICBmcmFtZXdvcms6ICdtb2NoYScsXG4gICAgLy9cbiAgICAvLyBUaGUgbnVtYmVyIG9mIHRpbWVzIHRvIHJldHJ5IHRoZSBlbnRpcmUgc3BlY2ZpbGUgd2hlbiBpdCBmYWlscyBhcyBhIHdob2xlXG4gICAgLy8gc3BlY0ZpbGVSZXRyaWVzOiAxLFxuICAgIC8vXG4gICAgLy8gRGVsYXkgaW4gc2Vjb25kcyBiZXR3ZWVuIHRoZSBzcGVjIGZpbGUgcmV0cnkgYXR0ZW1wdHNcbiAgICAvLyBzcGVjRmlsZVJldHJpZXNEZWxheTogMCxcbiAgICAvL1xuICAgIC8vIFdoZXRoZXIgb3Igbm90IHJldHJpZWQgc3BlYyBmaWxlcyBzaG91bGQgYmUgcmV0cmllZCBpbW1lZGlhdGVseSBvciBkZWZlcnJlZCB0byB0aGUgZW5kIG9mIHRoZSBxdWV1ZVxuICAgIC8vIHNwZWNGaWxlUmV0cmllc0RlZmVycmVkOiBmYWxzZSxcbiAgICAvL1xuICAgIC8vIFRlc3QgcmVwb3J0ZXIgZm9yIHN0ZG91dC5cbiAgICAvLyBUaGUgb25seSBvbmUgc3VwcG9ydGVkIGJ5IGRlZmF1bHQgaXMgJ2RvdCdcbiAgICAvLyBzZWUgYWxzbzogaHR0cHM6Ly93ZWJkcml2ZXIuaW8vZG9jcy9kb3QtcmVwb3J0ZXJcbiAgICByZXBvcnRlcnM6IFsnc3BlYyddLFxuXG4gICAgXG4gICAgLy9cbiAgICAvLyBPcHRpb25zIHRvIGJlIHBhc3NlZCB0byBNb2NoYS5cbiAgICAvLyBTZWUgdGhlIGZ1bGwgbGlzdCBhdCBodHRwOi8vbW9jaGFqcy5vcmcvXG4gICAgbW9jaGFPcHRzOiB7XG4gICAgICAgIHVpOiAnYmRkJyxcbiAgICAgICAgdGltZW91dDogNjAwMDBcbiAgICB9LFxuICAgIC8vXG4gICAgLy8gPT09PT1cbiAgICAvLyBIb29rc1xuICAgIC8vID09PT09XG4gICAgLy8gV2ViZHJpdmVySU8gcHJvdmlkZXMgc2V2ZXJhbCBob29rcyB5b3UgY2FuIHVzZSB0byBpbnRlcmZlcmUgd2l0aCB0aGUgdGVzdCBwcm9jZXNzIGluIG9yZGVyIHRvIGVuaGFuY2VcbiAgICAvLyBpdCBhbmQgdG8gYnVpbGQgc2VydmljZXMgYXJvdW5kIGl0LiBZb3UgY2FuIGVpdGhlciBhcHBseSBhIHNpbmdsZSBmdW5jdGlvbiBvciBhbiBhcnJheSBvZlxuICAgIC8vIG1ldGhvZHMgdG8gaXQuIElmIG9uZSBvZiB0aGVtIHJldHVybnMgd2l0aCBhIHByb21pc2UsIFdlYmRyaXZlcklPIHdpbGwgd2FpdCB1bnRpbCB0aGF0IHByb21pc2UgZ290XG4gICAgLy8gcmVzb2x2ZWQgdG8gY29udGludWUuXG4gICAgLyoqXG4gICAgICogR2V0cyBleGVjdXRlZCBvbmNlIGJlZm9yZSBhbGwgd29ya2VycyBnZXQgbGF1bmNoZWQuXG4gICAgICogQHBhcmFtIHtvYmplY3R9IGNvbmZpZyB3ZGlvIGNvbmZpZ3VyYXRpb24gb2JqZWN0XG4gICAgICogQHBhcmFtIHtBcnJheS48T2JqZWN0Pn0gY2FwYWJpbGl0aWVzIGxpc3Qgb2YgY2FwYWJpbGl0aWVzIGRldGFpbHNcbiAgICAgKi9cbiAgICAvLyBvblByZXBhcmU6IGZ1bmN0aW9uIChjb25maWcsIGNhcGFiaWxpdGllcykge1xuICAgIC8vIH0sXG4gICAgLyoqXG4gICAgICogR2V0cyBleGVjdXRlZCBiZWZvcmUgYSB3b3JrZXIgcHJvY2VzcyBpcyBzcGF3bmVkIGFuZCBjYW4gYmUgdXNlZCB0byBpbml0aWFsaXNlIHNwZWNpZmljIHNlcnZpY2VcbiAgICAgKiBmb3IgdGhhdCB3b3JrZXIgYXMgd2VsbCBhcyBtb2RpZnkgcnVudGltZSBlbnZpcm9ubWVudHMgaW4gYW4gYXN5bmMgZmFzaGlvbi5cbiAgICAgKiBAcGFyYW0gIHtzdHJpbmd9IGNpZCAgICAgIGNhcGFiaWxpdHkgaWQgKGUuZyAwLTApXG4gICAgICogQHBhcmFtICB7b2JqZWN0fSBjYXBzICAgICBvYmplY3QgY29udGFpbmluZyBjYXBhYmlsaXRpZXMgZm9yIHNlc3Npb24gdGhhdCB3aWxsIGJlIHNwYXduIGluIHRoZSB3b3JrZXJcbiAgICAgKiBAcGFyYW0gIHtvYmplY3R9IHNwZWNzICAgIHNwZWNzIHRvIGJlIHJ1biBpbiB0aGUgd29ya2VyIHByb2Nlc3NcbiAgICAgKiBAcGFyYW0gIHtvYmplY3R9IGFyZ3MgICAgIG9iamVjdCB0aGF0IHdpbGwgYmUgbWVyZ2VkIHdpdGggdGhlIG1haW4gY29uZmlndXJhdGlvbiBvbmNlIHdvcmtlciBpcyBpbml0aWFsaXplZFxuICAgICAqIEBwYXJhbSAge29iamVjdH0gZXhlY0FyZ3YgbGlzdCBvZiBzdHJpbmcgYXJndW1lbnRzIHBhc3NlZCB0byB0aGUgd29ya2VyIHByb2Nlc3NcbiAgICAgKi9cbiAgICAvLyBvbldvcmtlclN0YXJ0OiBmdW5jdGlvbiAoY2lkLCBjYXBzLCBzcGVjcywgYXJncywgZXhlY0FyZ3YpIHtcbiAgICAvLyB9LFxuICAgIC8qKlxuICAgICAqIEdldHMgZXhlY3V0ZWQganVzdCBhZnRlciBhIHdvcmtlciBwcm9jZXNzIGhhcyBleGl0ZWQuXG4gICAgICogQHBhcmFtICB7c3RyaW5nfSBjaWQgICAgICBjYXBhYmlsaXR5IGlkIChlLmcgMC0wKVxuICAgICAqIEBwYXJhbSAge251bWJlcn0gZXhpdENvZGUgMCAtIHN1Y2Nlc3MsIDEgLSBmYWlsXG4gICAgICogQHBhcmFtICB7b2JqZWN0fSBzcGVjcyAgICBzcGVjcyB0byBiZSBydW4gaW4gdGhlIHdvcmtlciBwcm9jZXNzXG4gICAgICogQHBhcmFtICB7bnVtYmVyfSByZXRyaWVzICBudW1iZXIgb2YgcmV0cmllcyB1c2VkXG4gICAgICovXG4gICAgLy8gb25Xb3JrZXJFbmQ6IGZ1bmN0aW9uIChjaWQsIGV4aXRDb2RlLCBzcGVjcywgcmV0cmllcykge1xuICAgIC8vIH0sXG4gICAgLyoqXG4gICAgICogR2V0cyBleGVjdXRlZCBqdXN0IGJlZm9yZSBpbml0aWFsaXNpbmcgdGhlIHdlYmRyaXZlciBzZXNzaW9uIGFuZCB0ZXN0IGZyYW1ld29yay4gSXQgYWxsb3dzIHlvdVxuICAgICAqIHRvIG1hbmlwdWxhdGUgY29uZmlndXJhdGlvbnMgZGVwZW5kaW5nIG9uIHRoZSBjYXBhYmlsaXR5IG9yIHNwZWMuXG4gICAgICogQHBhcmFtIHtvYmplY3R9IGNvbmZpZyB3ZGlvIGNvbmZpZ3VyYXRpb24gb2JqZWN0XG4gICAgICogQHBhcmFtIHtBcnJheS48T2JqZWN0Pn0gY2FwYWJpbGl0aWVzIGxpc3Qgb2YgY2FwYWJpbGl0aWVzIGRldGFpbHNcbiAgICAgKiBAcGFyYW0ge0FycmF5LjxTdHJpbmc+fSBzcGVjcyBMaXN0IG9mIHNwZWMgZmlsZSBwYXRocyB0aGF0IGFyZSB0byBiZSBydW5cbiAgICAgKiBAcGFyYW0ge3N0cmluZ30gY2lkIHdvcmtlciBpZCAoZS5nLiAwLTApXG4gICAgICovXG4gICAgLy8gYmVmb3JlU2Vzc2lvbjogZnVuY3Rpb24gKGNvbmZpZywgY2FwYWJpbGl0aWVzLCBzcGVjcywgY2lkKSB7XG4gICAgLy8gfSxcbiAgICAvKipcbiAgICAgKiBHZXRzIGV4ZWN1dGVkIGJlZm9yZSB0ZXN0IGV4ZWN1dGlvbiBiZWdpbnMuIEF0IHRoaXMgcG9pbnQgeW91IGNhbiBhY2Nlc3MgdG8gYWxsIGdsb2JhbFxuICAgICAqIHZhcmlhYmxlcyBsaWtlIGBicm93c2VyYC4gSXQgaXMgdGhlIHBlcmZlY3QgcGxhY2UgdG8gZGVmaW5lIGN1c3RvbSBjb21tYW5kcy5cbiAgICAgKiBAcGFyYW0ge0FycmF5LjxPYmplY3Q+fSBjYXBhYmlsaXRpZXMgbGlzdCBvZiBjYXBhYmlsaXRpZXMgZGV0YWlsc1xuICAgICAqIEBwYXJhbSB7QXJyYXkuPFN0cmluZz59IHNwZWNzICAgICAgICBMaXN0IG9mIHNwZWMgZmlsZSBwYXRocyB0aGF0IGFyZSB0byBiZSBydW5cbiAgICAgKiBAcGFyYW0ge29iamVjdH0gICAgICAgICBicm93c2VyICAgICAgaW5zdGFuY2Ugb2YgY3JlYXRlZCBicm93c2VyL2RldmljZSBzZXNzaW9uXG4gICAgICovXG4gICAgLy8gYmVmb3JlOiBmdW5jdGlvbiAoY2FwYWJpbGl0aWVzLCBzcGVjcykge1xuICAgIC8vIH0sXG4gICAgLyoqXG4gICAgICogUnVucyBiZWZvcmUgYSBXZWJkcml2ZXJJTyBjb21tYW5kIGdldHMgZXhlY3V0ZWQuXG4gICAgICogQHBhcmFtIHtzdHJpbmd9IGNvbW1hbmROYW1lIGhvb2sgY29tbWFuZCBuYW1lXG4gICAgICogQHBhcmFtIHtBcnJheX0gYXJncyBhcmd1bWVudHMgdGhhdCBjb21tYW5kIHdvdWxkIHJlY2VpdmVcbiAgICAgKi9cbiAgICAvLyBiZWZvcmVDb21tYW5kOiBmdW5jdGlvbiAoY29tbWFuZE5hbWUsIGFyZ3MpIHtcbiAgICAvLyB9LFxuICAgIC8qKlxuICAgICAqIEhvb2sgdGhhdCBnZXRzIGV4ZWN1dGVkIGJlZm9yZSB0aGUgc3VpdGUgc3RhcnRzXG4gICAgICogQHBhcmFtIHtvYmplY3R9IHN1aXRlIHN1aXRlIGRldGFpbHNcbiAgICAgKi9cbiAgICAvLyBiZWZvcmVTdWl0ZTogZnVuY3Rpb24gKHN1aXRlKSB7XG4gICAgLy8gfSxcbiAgICAvKipcbiAgICAgKiBGdW5jdGlvbiB0byBiZSBleGVjdXRlZCBiZWZvcmUgYSB0ZXN0IChpbiBNb2NoYS9KYXNtaW5lKSBzdGFydHMuXG4gICAgICovXG4gICAgLy8gYmVmb3JlVGVzdDogZnVuY3Rpb24gKHRlc3QsIGNvbnRleHQpIHtcbiAgICAvLyB9LFxuICAgIC8qKlxuICAgICAqIEhvb2sgdGhhdCBnZXRzIGV4ZWN1dGVkIF9iZWZvcmVfIGEgaG9vayB3aXRoaW4gdGhlIHN1aXRlIHN0YXJ0cyAoZS5nLiBydW5zIGJlZm9yZSBjYWxsaW5nXG4gICAgICogYmVmb3JlRWFjaCBpbiBNb2NoYSlcbiAgICAgKi9cbiAgICAvLyBiZWZvcmVIb29rOiBmdW5jdGlvbiAodGVzdCwgY29udGV4dCkge1xuICAgIC8vIH0sXG4gICAgLyoqXG4gICAgICogSG9vayB0aGF0IGdldHMgZXhlY3V0ZWQgX2FmdGVyXyBhIGhvb2sgd2l0aGluIHRoZSBzdWl0ZSBzdGFydHMgKGUuZy4gcnVucyBhZnRlciBjYWxsaW5nXG4gICAgICogYWZ0ZXJFYWNoIGluIE1vY2hhKVxuICAgICAqL1xuICAgIC8vIGFmdGVySG9vazogZnVuY3Rpb24gKHRlc3QsIGNvbnRleHQsIHsgZXJyb3IsIHJlc3VsdCwgZHVyYXRpb24sIHBhc3NlZCwgcmV0cmllcyB9KSB7XG4gICAgLy8gfSxcbiAgICAvKipcbiAgICAgKiBGdW5jdGlvbiB0byBiZSBleGVjdXRlZCBhZnRlciBhIHRlc3QgKGluIE1vY2hhL0phc21pbmUgb25seSlcbiAgICAgKiBAcGFyYW0ge29iamVjdH0gIHRlc3QgICAgICAgICAgICAgdGVzdCBvYmplY3RcbiAgICAgKiBAcGFyYW0ge29iamVjdH0gIGNvbnRleHQgICAgICAgICAgc2NvcGUgb2JqZWN0IHRoZSB0ZXN0IHdhcyBleGVjdXRlZCB3aXRoXG4gICAgICogQHBhcmFtIHtFcnJvcn0gICByZXN1bHQuZXJyb3IgICAgIGVycm9yIG9iamVjdCBpbiBjYXNlIHRoZSB0ZXN0IGZhaWxzLCBvdGhlcndpc2UgYHVuZGVmaW5lZGBcbiAgICAgKiBAcGFyYW0geyp9ICAgICAgIHJlc3VsdC5yZXN1bHQgICAgcmV0dXJuIG9iamVjdCBvZiB0ZXN0IGZ1bmN0aW9uXG4gICAgICogQHBhcmFtIHtudW1iZXJ9ICByZXN1bHQuZHVyYXRpb24gIGR1cmF0aW9uIG9mIHRlc3RcbiAgICAgKiBAcGFyYW0ge2Jvb2xlYW59IHJlc3VsdC5wYXNzZWQgICAgdHJ1ZSBpZiB0ZXN0IGhhcyBwYXNzZWQsIG90aGVyd2lzZSBmYWxzZVxuICAgICAqIEBwYXJhbSB7b2JqZWN0fSAgcmVzdWx0LnJldHJpZXMgICBpbmZvcm1hdGlvbnMgdG8gc3BlYyByZWxhdGVkIHJldHJpZXMsIGUuZy4gYHsgYXR0ZW1wdHM6IDAsIGxpbWl0OiAwIH1gXG4gICAgICovXG4gICAgLy8gYWZ0ZXJUZXN0OiBmdW5jdGlvbih0ZXN0LCBjb250ZXh0LCB7IGVycm9yLCByZXN1bHQsIGR1cmF0aW9uLCBwYXNzZWQsIHJldHJpZXMgfSkge1xuICAgIC8vIH0sXG5cblxuICAgIC8qKlxuICAgICAqIEhvb2sgdGhhdCBnZXRzIGV4ZWN1dGVkIGFmdGVyIHRoZSBzdWl0ZSBoYXMgZW5kZWRcbiAgICAgKiBAcGFyYW0ge29iamVjdH0gc3VpdGUgc3VpdGUgZGV0YWlsc1xuICAgICAqL1xuICAgIC8vIGFmdGVyU3VpdGU6IGZ1bmN0aW9uIChzdWl0ZSkge1xuICAgIC8vIH0sXG4gICAgLyoqXG4gICAgICogUnVucyBhZnRlciBhIFdlYmRyaXZlcklPIGNvbW1hbmQgZ2V0cyBleGVjdXRlZFxuICAgICAqIEBwYXJhbSB7c3RyaW5nfSBjb21tYW5kTmFtZSBob29rIGNvbW1hbmQgbmFtZVxuICAgICAqIEBwYXJhbSB7QXJyYXl9IGFyZ3MgYXJndW1lbnRzIHRoYXQgY29tbWFuZCB3b3VsZCByZWNlaXZlXG4gICAgICogQHBhcmFtIHtudW1iZXJ9IHJlc3VsdCAwIC0gY29tbWFuZCBzdWNjZXNzLCAxIC0gY29tbWFuZCBlcnJvclxuICAgICAqIEBwYXJhbSB7b2JqZWN0fSBlcnJvciBlcnJvciBvYmplY3QgaWYgYW55XG4gICAgICovXG4gICAgLy8gYWZ0ZXJDb21tYW5kOiBmdW5jdGlvbiAoY29tbWFuZE5hbWUsIGFyZ3MsIHJlc3VsdCwgZXJyb3IpIHtcbiAgICAvLyB9LFxuICAgIC8qKlxuICAgICAqIEdldHMgZXhlY3V0ZWQgYWZ0ZXIgYWxsIHRlc3RzIGFyZSBkb25lLiBZb3Ugc3RpbGwgaGF2ZSBhY2Nlc3MgdG8gYWxsIGdsb2JhbCB2YXJpYWJsZXMgZnJvbVxuICAgICAqIHRoZSB0ZXN0LlxuICAgICAqIEBwYXJhbSB7bnVtYmVyfSByZXN1bHQgMCAtIHRlc3QgcGFzcywgMSAtIHRlc3QgZmFpbFxuICAgICAqIEBwYXJhbSB7QXJyYXkuPE9iamVjdD59IGNhcGFiaWxpdGllcyBsaXN0IG9mIGNhcGFiaWxpdGllcyBkZXRhaWxzXG4gICAgICogQHBhcmFtIHtBcnJheS48U3RyaW5nPn0gc3BlY3MgTGlzdCBvZiBzcGVjIGZpbGUgcGF0aHMgdGhhdCByYW5cbiAgICAgKi9cbiAgICAvLyBhZnRlcjogZnVuY3Rpb24gKHJlc3VsdCwgY2FwYWJpbGl0aWVzLCBzcGVjcykge1xuICAgIC8vIH0sXG4gICAgLyoqXG4gICAgICogR2V0cyBleGVjdXRlZCByaWdodCBhZnRlciB0ZXJtaW5hdGluZyB0aGUgd2ViZHJpdmVyIHNlc3Npb24uXG4gICAgICogQHBhcmFtIHtvYmplY3R9IGNvbmZpZyB3ZGlvIGNvbmZpZ3VyYXRpb24gb2JqZWN0XG4gICAgICogQHBhcmFtIHtBcnJheS48T2JqZWN0Pn0gY2FwYWJpbGl0aWVzIGxpc3Qgb2YgY2FwYWJpbGl0aWVzIGRldGFpbHNcbiAgICAgKiBAcGFyYW0ge0FycmF5LjxTdHJpbmc+fSBzcGVjcyBMaXN0IG9mIHNwZWMgZmlsZSBwYXRocyB0aGF0IHJhblxuICAgICAqL1xuICAgIC8vIGFmdGVyU2Vzc2lvbjogZnVuY3Rpb24gKGNvbmZpZywgY2FwYWJpbGl0aWVzLCBzcGVjcykge1xuICAgIC8vIH0sXG4gICAgLyoqXG4gICAgICogR2V0cyBleGVjdXRlZCBhZnRlciBhbGwgd29ya2VycyBnb3Qgc2h1dCBkb3duIGFuZCB0aGUgcHJvY2VzcyBpcyBhYm91dCB0byBleGl0LiBBbiBlcnJvclxuICAgICAqIHRocm93biBpbiB0aGUgb25Db21wbGV0ZSBob29rIHdpbGwgcmVzdWx0IGluIHRoZSB0ZXN0IHJ1biBmYWlsaW5nLlxuICAgICAqIEBwYXJhbSB7b2JqZWN0fSBleGl0Q29kZSAwIC0gc3VjY2VzcywgMSAtIGZhaWxcbiAgICAgKiBAcGFyYW0ge29iamVjdH0gY29uZmlnIHdkaW8gY29uZmlndXJhdGlvbiBvYmplY3RcbiAgICAgKiBAcGFyYW0ge0FycmF5LjxPYmplY3Q+fSBjYXBhYmlsaXRpZXMgbGlzdCBvZiBjYXBhYmlsaXRpZXMgZGV0YWlsc1xuICAgICAqIEBwYXJhbSB7PE9iamVjdD59IHJlc3VsdHMgb2JqZWN0IGNvbnRhaW5pbmcgdGVzdCByZXN1bHRzXG4gICAgICovXG4gICAgLy8gb25Db21wbGV0ZTogZnVuY3Rpb24oZXhpdENvZGUsIGNvbmZpZywgY2FwYWJpbGl0aWVzLCByZXN1bHRzKSB7XG4gICAgLy8gfSxcbiAgICAvKipcbiAgICAqIEdldHMgZXhlY3V0ZWQgd2hlbiBhIHJlZnJlc2ggaGFwcGVucy5cbiAgICAqIEBwYXJhbSB7c3RyaW5nfSBvbGRTZXNzaW9uSWQgc2Vzc2lvbiBJRCBvZiB0aGUgb2xkIHNlc3Npb25cbiAgICAqIEBwYXJhbSB7c3RyaW5nfSBuZXdTZXNzaW9uSWQgc2Vzc2lvbiBJRCBvZiB0aGUgbmV3IHNlc3Npb25cbiAgICAqL1xuICAgIC8vIG9uUmVsb2FkOiBmdW5jdGlvbihvbGRTZXNzaW9uSWQsIG5ld1Nlc3Npb25JZCkge1xuICAgIC8vIH1cbn1cbiJdLCJtYXBwaW5ncyI6IkFBQUFBLE9BQU8sQ0FBQ0MsTUFBTSxHQUFHO0VBQ2I7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBQyxNQUFNLEVBQUUsT0FBTztFQUNmO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0FDLEtBQUssRUFBRSxDQUNILHNCQUFzQixDQUN6QjtFQUNEO0VBQ0FDLE9BQU8sRUFBRTtJQUNMO0VBQUEsQ0FDSDtFQUNEO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0FDLFlBQVksRUFBRSxFQUFFO0VBQ2hCO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQUMsWUFBWSxFQUFFLENBQUM7SUFDWDtJQUNBQyxXQUFXLEVBQUUsUUFBUSxDQUFDO0VBQzFCLENBQUMsQ0FBQzs7RUFFRjtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBQyxRQUFRLEVBQUUsTUFBTTtFQUNoQjtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0FDLElBQUksRUFBRSxDQUFDO0VBQ1A7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBQyxPQUFPLEVBQUUsa0JBQWtCO0VBQzNCO0VBQ0E7RUFDQUMsY0FBYyxFQUFFLEtBQUs7RUFDckI7RUFDQTtFQUNBO0VBQ0FDLHNCQUFzQixFQUFFLE1BQU07RUFDOUI7RUFDQTtFQUNBQyxvQkFBb0IsRUFBRSxDQUFDO0VBQ3ZCO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0FDLFNBQVMsRUFBRSxPQUFPO0VBQ2xCO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0FDLFNBQVMsRUFBRSxDQUFDLE1BQU0sQ0FBQztFQUduQjtFQUNBO0VBQ0E7RUFDQUMsU0FBUyxFQUFFO0lBQ1BDLEVBQUUsRUFBRSxLQUFLO0lBQ1RDLE9BQU8sRUFBRTtFQUNiO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7RUFDSTtFQUNBO0VBQ0E7QUFDSjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0VBQ0k7RUFDQTtFQUNBO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0VBQ0k7RUFDQTtFQUNBO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7RUFDSTtFQUNBO0VBQ0E7QUFDSjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7RUFDSTtFQUNBO0VBQ0E7QUFDSjtBQUNBO0FBQ0E7QUFDQTtFQUNJO0VBQ0E7RUFDQTtBQUNKO0FBQ0E7QUFDQTtFQUNJO0VBQ0E7RUFDQTtBQUNKO0FBQ0E7RUFDSTtFQUNBO0VBQ0E7QUFDSjtBQUNBO0FBQ0E7RUFDSTtFQUNBO0VBQ0E7QUFDSjtBQUNBO0FBQ0E7RUFDSTtFQUNBO0VBQ0E7QUFDSjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7RUFDSTtFQUNBOztFQUdBO0FBQ0o7QUFDQTtBQUNBO0VBQ0k7RUFDQTtFQUNBO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0VBQ0k7RUFDQTtFQUNBO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0VBQ0k7RUFDQTtFQUNBO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtFQUNJO0VBQ0E7RUFDQTtBQUNKO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0VBQ0k7RUFDQTtFQUNBO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7RUFDSTtFQUNBO0FBQ0osQ0FBQyJ9","map":{"version":3,"names":["exports","config","runner","specs","exclude","maxInstances","capabilities","browserName","logLevel","bail","baseUrl","waitforTimeout","connectionRetryTimeout","connectionRetryCount","framework","reporters","mochaOpts","ui","timeout"],"sourceRoot":"C:\\Users\\Alex\\Desktop\\work1\\","sources":["wdio.conf.js"],"sourcesContent":["exports.config = {\n    //\n    // ====================\n    // Runner Configuration\n    // ====================\n    // WebdriverIO supports running e2e tests as well as unit and component tests.\n    runner: 'local',\n    //\n    // ==================\n    // Specify Test Files\n    // ==================\n    // Define which test specs should run. The pattern is relative to the directory\n    // of the configuration file being run.\n    //\n    // The specs are defined as an array of spec files (optionally using wildcards\n    // that will be expanded). The test for each spec file will be run in a separate\n    // worker process. In order to have a group of spec files run in the same worker\n    // process simply enclose them in an array within the specs array.\n    //\n    // If you are calling `wdio` from an NPM script (see https://docs.npmjs.com/cli/run-script),\n    // then the current working directory is where your `package.json` resides, so `wdio`\n    // will be called from there.\n    //\n    specs: [\n        './test/specs/**/*.js'\n    ],\n    // Patterns to exclude.\n    exclude: [\n        // 'path/to/excluded/files'\n    ],\n    //\n    // ============\n    // Capabilities\n    // ============\n    // Define your capabilities here. WebdriverIO can run multiple capabilities at the same\n    // time. Depending on the number of capabilities, WebdriverIO launches several test\n    // sessions. Within your capabilities you can overwrite the spec and exclude options in\n    // order to group specific specs to a specific capability.\n    //\n    // First, you can define how many instances should be started at the same time. Let's\n    // say you have 3 different capabilities (Chrome, Firefox, and Safari) and you have\n    // set maxInstances to 1; wdio will spawn 3 processes. Therefore, if you have 10 spec\n    // files and you set maxInstances to 10, all spec files will get tested at the same time\n    // and 30 processes will get spawned. The property handles how many capabilities\n    // from the same test should run tests.\n    //\n    maxInstances: 10,\n    //\n    // If you have trouble getting all important capabilities together, check out the\n    // Sauce Labs platform configurator - a great tool to configure your capabilities:\n    // https://saucelabs.com/platform/platform-configurator\n    //\n    capabilities: [{\n        // capabilities for local browser web tests\n        browserName: 'chrome' // or \"firefox\", \"microsoftedge\", \"safari\"\n    }],\n\n    //\n    // ===================\n    // Test Configurations\n    // ===================\n    // Define all options that are relevant for the WebdriverIO instance here\n    //\n    // Level of logging verbosity: trace | debug | info | warn | error | silent\n    logLevel: 'info',\n    //\n    // Set specific log levels per logger\n    // loggers:\n    // - webdriver, webdriverio\n    // - @wdio/browserstack-service, @wdio/devtools-service, @wdio/sauce-service\n    // - @wdio/mocha-framework, @wdio/jasmine-framework\n    // - @wdio/local-runner\n    // - @wdio/sumologic-reporter\n    // - @wdio/cli, @wdio/config, @wdio/utils\n    // Level of logging verbosity: trace | debug | info | warn | error | silent\n    // logLevels: {\n    //     webdriver: 'info',\n    //     '@wdio/appium-service': 'info'\n    // },\n    //\n    // If you only want to run your tests until a specific amount of tests have failed use\n    // bail (default is 0 - don't bail, run all tests).\n    bail: 0,\n    //\n    // Set a base URL in order to shorten url command calls. If your `url` parameter starts\n    // with `/`, the base url gets prepended, not including the path portion of your baseUrl.\n    // If your `url` parameter starts without a scheme or `/` (like `some/path`), the base url\n    // gets prepended directly.\n    baseUrl: 'http://localhost',\n    //\n    // Default timeout for all waitFor* commands.\n    waitforTimeout: 10000,\n    //\n    // Default timeout in milliseconds for request\n    // if browser driver or grid doesn't send response\n    connectionRetryTimeout: 120000,\n    //\n    // Default request retries count\n    connectionRetryCount: 3,\n    //\n    // Test runner services\n    // Services take over a specific job you don't want to take care of. They enhance\n    // your test setup with almost no effort. Unlike plugins, they don't add new\n    // commands. Instead, they hook themselves up into the test process.\n    // services: [],\n    //\n    // Framework you want to run your specs with.\n    // The following are supported: Mocha, Jasmine, and Cucumber\n    // see also: https://webdriver.io/docs/frameworks\n    //\n    // Make sure you have the wdio adapter package for the specific framework installed\n    // before running any tests.\n    framework: 'mocha',\n    //\n    // The number of times to retry the entire specfile when it fails as a whole\n    // specFileRetries: 1,\n    //\n    // Delay in seconds between the spec file retry attempts\n    // specFileRetriesDelay: 0,\n    //\n    // Whether or not retried spec files should be retried immediately or deferred to the end of the queue\n    // specFileRetriesDeferred: false,\n    //\n    // Test reporter for stdout.\n    // The only one supported by default is 'dot'\n    // see also: https://webdriver.io/docs/dot-reporter\n    reporters: ['spec'],\n\n    \n    //\n    // Options to be passed to Mocha.\n    // See the full list at http://mochajs.org/\n    mochaOpts: {\n        ui: 'bdd',\n        timeout: 60000\n    },\n    //\n    // =====\n    // Hooks\n    // =====\n    // WebdriverIO provides several hooks you can use to interfere with the test process in order to enhance\n    // it and to build services around it. You can either apply a single function or an array of\n    // methods to it. If one of them returns with a promise, WebdriverIO will wait until that promise got\n    // resolved to continue.\n    /**\n     * Gets executed once before all workers get launched.\n     * @param {object} config wdio configuration object\n     * @param {Array.<Object>} capabilities list of capabilities details\n     */\n    // onPrepare: function (config, capabilities) {\n    // },\n    /**\n     * Gets executed before a worker process is spawned and can be used to initialise specific service\n     * for that worker as well as modify runtime environments in an async fashion.\n     * @param  {string} cid      capability id (e.g 0-0)\n     * @param  {object} caps     object containing capabilities for session that will be spawn in the worker\n     * @param  {object} specs    specs to be run in the worker process\n     * @param  {object} args     object that will be merged with the main configuration once worker is initialized\n     * @param  {object} execArgv list of string arguments passed to the worker process\n     */\n    // onWorkerStart: function (cid, caps, specs, args, execArgv) {\n    // },\n    /**\n     * Gets executed just after a worker process has exited.\n     * @param  {string} cid      capability id (e.g 0-0)\n     * @param  {number} exitCode 0 - success, 1 - fail\n     * @param  {object} specs    specs to be run in the worker process\n     * @param  {number} retries  number of retries used\n     */\n    // onWorkerEnd: function (cid, exitCode, specs, retries) {\n    // },\n    /**\n     * Gets executed just before initialising the webdriver session and test framework. It allows you\n     * to manipulate configurations depending on the capability or spec.\n     * @param {object} config wdio configuration object\n     * @param {Array.<Object>} capabilities list of capabilities details\n     * @param {Array.<String>} specs List of spec file paths that are to be run\n     * @param {string} cid worker id (e.g. 0-0)\n     */\n    // beforeSession: function (config, capabilities, specs, cid) {\n    // },\n    /**\n     * Gets executed before test execution begins. At this point you can access to all global\n     * variables like `browser`. It is the perfect place to define custom commands.\n     * @param {Array.<Object>} capabilities list of capabilities details\n     * @param {Array.<String>} specs        List of spec file paths that are to be run\n     * @param {object}         browser      instance of created browser/device session\n     */\n    // before: function (capabilities, specs) {\n    // },\n    /**\n     * Runs before a WebdriverIO command gets executed.\n     * @param {string} commandName hook command name\n     * @param {Array} args arguments that command would receive\n     */\n    // beforeCommand: function (commandName, args) {\n    // },\n    /**\n     * Hook that gets executed before the suite starts\n     * @param {object} suite suite details\n     */\n    // beforeSuite: function (suite) {\n    // },\n    /**\n     * Function to be executed before a test (in Mocha/Jasmine) starts.\n     */\n    // beforeTest: function (test, context) {\n    // },\n    /**\n     * Hook that gets executed _before_ a hook within the suite starts (e.g. runs before calling\n     * beforeEach in Mocha)\n     */\n    // beforeHook: function (test, context) {\n    // },\n    /**\n     * Hook that gets executed _after_ a hook within the suite starts (e.g. runs after calling\n     * afterEach in Mocha)\n     */\n    // afterHook: function (test, context, { error, result, duration, passed, retries }) {\n    // },\n    /**\n     * Function to be executed after a test (in Mocha/Jasmine only)\n     * @param {object}  test             test object\n     * @param {object}  context          scope object the test was executed with\n     * @param {Error}   result.error     error object in case the test fails, otherwise `undefined`\n     * @param {*}       result.result    return object of test function\n     * @param {number}  result.duration  duration of test\n     * @param {boolean} result.passed    true if test has passed, otherwise false\n     * @param {object}  result.retries   informations to spec related retries, e.g. `{ attempts: 0, limit: 0 }`\n     */\n    // afterTest: function(test, context, { error, result, duration, passed, retries }) {\n    // },\n\n\n    /**\n     * Hook that gets executed after the suite has ended\n     * @param {object} suite suite details\n     */\n    // afterSuite: function (suite) {\n    // },\n    /**\n     * Runs after a WebdriverIO command gets executed\n     * @param {string} commandName hook command name\n     * @param {Array} args arguments that command would receive\n     * @param {number} result 0 - command success, 1 - command error\n     * @param {object} error error object if any\n     */\n    // afterCommand: function (commandName, args, result, error) {\n    // },\n    /**\n     * Gets executed after all tests are done. You still have access to all global variables from\n     * the test.\n     * @param {number} result 0 - test pass, 1 - test fail\n     * @param {Array.<Object>} capabilities list of capabilities details\n     * @param {Array.<String>} specs List of spec file paths that ran\n     */\n    // after: function (result, capabilities, specs) {\n    // },\n    /**\n     * Gets executed right after terminating the webdriver session.\n     * @param {object} config wdio configuration object\n     * @param {Array.<Object>} capabilities list of capabilities details\n     * @param {Array.<String>} specs List of spec file paths that ran\n     */\n    // afterSession: function (config, capabilities, specs) {\n    // },\n    /**\n     * Gets executed after all workers got shut down and the process is about to exit. An error\n     * thrown in the onComplete hook will result in the test run failing.\n     * @param {object} exitCode 0 - success, 1 - fail\n     * @param {object} config wdio configuration object\n     * @param {Array.<Object>} capabilities list of capabilities details\n     * @param {<Object>} results object containing test results\n     */\n    // onComplete: function(exitCode, config, capabilities, results) {\n    // },\n    /**\n    * Gets executed when a refresh happens.\n    * @param {string} oldSessionId session ID of the old session\n    * @param {string} newSessionId session ID of the new session\n    */\n    // onReload: function(oldSessionId, newSessionId) {\n    // }\n}\n"],"mappings":"AAAAA,OAAO,CAACC,MAAM,GAAG;EACb;EACA;EACA;EACA;EACA;EACAC,MAAM,EAAE,OAAO;EACf;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACAC,KAAK,EAAE,CACH,sBAAsB,CACzB;EACD;EACAC,OAAO,EAAE;IACL;EAAA,CACH;EACD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACAC,YAAY,EAAE,EAAE;EAChB;EACA;EACA;EACA;EACA;EACAC,YAAY,EAAE,CAAC;IACX;IACAC,WAAW,EAAE,QAAQ,CAAC;EAC1B,CAAC,CAAC;;EAEF;EACA;EACA;EACA;EACA;EACA;EACA;EACAC,QAAQ,EAAE,MAAM;EAChB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACAC,IAAI,EAAE,CAAC;EACP;EACA;EACA;EACA;EACA;EACAC,OAAO,EAAE,kBAAkB;EAC3B;EACA;EACAC,cAAc,EAAE,KAAK;EACrB;EACA;EACA;EACAC,sBAAsB,EAAE,MAAM;EAC9B;EACA;EACAC,oBAAoB,EAAE,CAAC;EACvB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACAC,SAAS,EAAE,OAAO;EAClB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACAC,SAAS,EAAE,CAAC,MAAM,CAAC;EAGnB;EACA;EACA;EACAC,SAAS,EAAE;IACPC,EAAE,EAAE,KAAK;IACTC,OAAO,EAAE;EACb;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACJ;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI;EACA;;EAGA;AACJ;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;EACI;EACA;AACJ,CAAC"}},"mtime":1693336488935},"{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\Alex\\\\Desktop\\\\work1\\\\test\\\\specs\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\Alex\\\\Desktop\\\\work1\",\"filename\":\"C:\\\\Users\\\\Alex\\\\Desktop\\\\work1\\\\test\\\\specs\\\\test.e2e.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"C:\\\\Users\\\\Alex\\\\Desktop\\\\work1\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.22.11:test":{"value":{"code":"const {\n  expect\n} = require('@wdio/globals');\nconst LoginPage = require('../pageobjects/login.page');\nconst SecurePage = require('../pageobjects/secure.page');\ndescribe('My Login application', () => {\n  it('should login with valid credentials', async () => {\n    await LoginPage.open();\n    await LoginPage.login('tomsmith', 'SuperSecretPassword!');\n    await expect(SecurePage.flashAlert).toBeExisting();\n    await expect(SecurePage.flashAlert).toHaveTextContaining('You logged into a secure area!');\n  });\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJleHBlY3QiLCJyZXF1aXJlIiwiTG9naW5QYWdlIiwiU2VjdXJlUGFnZSIsImRlc2NyaWJlIiwiaXQiLCJvcGVuIiwibG9naW4iLCJmbGFzaEFsZXJ0IiwidG9CZUV4aXN0aW5nIiwidG9IYXZlVGV4dENvbnRhaW5pbmciXSwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcQWxleFxcRGVza3RvcFxcd29yazFcXHRlc3RcXHNwZWNzXFwiLCJzb3VyY2VzIjpbInRlc3QuZTJlLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IHsgZXhwZWN0IH0gPSByZXF1aXJlKCdAd2Rpby9nbG9iYWxzJylcbmNvbnN0IExvZ2luUGFnZSA9IHJlcXVpcmUoJy4uL3BhZ2VvYmplY3RzL2xvZ2luLnBhZ2UnKVxuY29uc3QgU2VjdXJlUGFnZSA9IHJlcXVpcmUoJy4uL3BhZ2VvYmplY3RzL3NlY3VyZS5wYWdlJylcblxuZGVzY3JpYmUoJ015IExvZ2luIGFwcGxpY2F0aW9uJywgKCkgPT4ge1xuICAgIGl0KCdzaG91bGQgbG9naW4gd2l0aCB2YWxpZCBjcmVkZW50aWFscycsIGFzeW5jICgpID0+IHtcbiAgICAgICAgYXdhaXQgTG9naW5QYWdlLm9wZW4oKVxuXG4gICAgICAgIGF3YWl0IExvZ2luUGFnZS5sb2dpbigndG9tc21pdGgnLCAnU3VwZXJTZWNyZXRQYXNzd29yZCEnKVxuICAgICAgICBhd2FpdCBleHBlY3QoU2VjdXJlUGFnZS5mbGFzaEFsZXJ0KS50b0JlRXhpc3RpbmcoKVxuICAgICAgICBhd2FpdCBleHBlY3QoU2VjdXJlUGFnZS5mbGFzaEFsZXJ0KS50b0hhdmVUZXh0Q29udGFpbmluZyhcbiAgICAgICAgICAgICdZb3UgbG9nZ2VkIGludG8gYSBzZWN1cmUgYXJlYSEnKVxuICAgIH0pXG59KVxuXG4iXSwibWFwcGluZ3MiOiJBQUFBLE1BQU07RUFBRUE7QUFBTyxDQUFDLEdBQUdDLE9BQU8sQ0FBQyxlQUFlLENBQUM7QUFDM0MsTUFBTUMsU0FBUyxHQUFHRCxPQUFPLENBQUMsMkJBQTJCLENBQUM7QUFDdEQsTUFBTUUsVUFBVSxHQUFHRixPQUFPLENBQUMsNEJBQTRCLENBQUM7QUFFeERHLFFBQVEsQ0FBQyxzQkFBc0IsRUFBRSxNQUFNO0VBQ25DQyxFQUFFLENBQUMscUNBQXFDLEVBQUUsWUFBWTtJQUNsRCxNQUFNSCxTQUFTLENBQUNJLElBQUksQ0FBQyxDQUFDO0lBRXRCLE1BQU1KLFNBQVMsQ0FBQ0ssS0FBSyxDQUFDLFVBQVUsRUFBRSxzQkFBc0IsQ0FBQztJQUN6RCxNQUFNUCxNQUFNLENBQUNHLFVBQVUsQ0FBQ0ssVUFBVSxDQUFDLENBQUNDLFlBQVksQ0FBQyxDQUFDO0lBQ2xELE1BQU1ULE1BQU0sQ0FBQ0csVUFBVSxDQUFDSyxVQUFVLENBQUMsQ0FBQ0Usb0JBQW9CLENBQ3BELGdDQUFnQyxDQUFDO0VBQ3pDLENBQUMsQ0FBQztBQUNOLENBQUMsQ0FBQyJ9","map":{"version":3,"names":["expect","require","LoginPage","SecurePage","describe","it","open","login","flashAlert","toBeExisting","toHaveTextContaining"],"sourceRoot":"C:\\Users\\Alex\\Desktop\\work1\\test\\specs\\","sources":["test.e2e.js"],"sourcesContent":["const { expect } = require('@wdio/globals')\nconst LoginPage = require('../pageobjects/login.page')\nconst SecurePage = require('../pageobjects/secure.page')\n\ndescribe('My Login application', () => {\n    it('should login with valid credentials', async () => {\n        await LoginPage.open()\n\n        await LoginPage.login('tomsmith', 'SuperSecretPassword!')\n        await expect(SecurePage.flashAlert).toBeExisting()\n        await expect(SecurePage.flashAlert).toHaveTextContaining(\n            'You logged into a secure area!')\n    })\n})\n\n"],"mappings":"AAAA,MAAM;EAAEA;AAAO,CAAC,GAAGC,OAAO,CAAC,eAAe,CAAC;AAC3C,MAAMC,SAAS,GAAGD,OAAO,CAAC,2BAA2B,CAAC;AACtD,MAAME,UAAU,GAAGF,OAAO,CAAC,4BAA4B,CAAC;AAExDG,QAAQ,CAAC,sBAAsB,EAAE,MAAM;EACnCC,EAAE,CAAC,qCAAqC,EAAE,YAAY;IAClD,MAAMH,SAAS,CAACI,IAAI,CAAC,CAAC;IAEtB,MAAMJ,SAAS,CAACK,KAAK,CAAC,UAAU,EAAE,sBAAsB,CAAC;IACzD,MAAMP,MAAM,CAACG,UAAU,CAACK,UAAU,CAAC,CAACC,YAAY,CAAC,CAAC;IAClD,MAAMT,MAAM,CAACG,UAAU,CAACK,UAAU,CAAC,CAACE,oBAAoB,CACpD,gCAAgC,CAAC;EACzC,CAAC,CAAC;AACN,CAAC,CAAC"}},"mtime":1693336488953},"{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\Alex\\\\Desktop\\\\work1\\\\test\\\\pageobjects\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\Alex\\\\Desktop\\\\work1\",\"filename\":\"C:\\\\Users\\\\Alex\\\\Desktop\\\\work1\\\\test\\\\pageobjects\\\\login.page.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"C:\\\\Users\\\\Alex\\\\Desktop\\\\work1\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.22.11:test":{"value":{"code":"const {\n  $\n} = require('@wdio/globals');\nconst Page = require('./page');\n\n/**\n * sub page containing specific selectors and methods for a specific page\n */\nclass LoginPage extends Page {\n  /**\n   * define selectors using getter methods\n   */\n  get inputUsername() {\n    return $('#username');\n  }\n  get inputPassword() {\n    return $('#password');\n  }\n  get btnSubmit() {\n    return $('button[type=\"submit\"]');\n  }\n\n  /**\n   * a method to encapsule automation code to interact with the page\n   * e.g. to login using username and password\n   */\n  async login(username, password) {\n    await this.inputUsername.setValue(username);\n    await this.inputPassword.setValue(password);\n    await this.btnSubmit.click();\n  }\n\n  /**\n   * overwrite specific options to adapt it to page object\n   */\n  open() {\n    return super.open('login');\n  }\n}\nmodule.exports = new LoginPage();\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyIkIiwicmVxdWlyZSIsIlBhZ2UiLCJMb2dpblBhZ2UiLCJpbnB1dFVzZXJuYW1lIiwiaW5wdXRQYXNzd29yZCIsImJ0blN1Ym1pdCIsImxvZ2luIiwidXNlcm5hbWUiLCJwYXNzd29yZCIsInNldFZhbHVlIiwiY2xpY2siLCJvcGVuIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFxBbGV4XFxEZXNrdG9wXFx3b3JrMVxcdGVzdFxccGFnZW9iamVjdHNcXCIsInNvdXJjZXMiOlsibG9naW4ucGFnZS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCB7ICQgfSA9IHJlcXVpcmUoJ0B3ZGlvL2dsb2JhbHMnKVxuY29uc3QgUGFnZSA9IHJlcXVpcmUoJy4vcGFnZScpO1xuXG4vKipcbiAqIHN1YiBwYWdlIGNvbnRhaW5pbmcgc3BlY2lmaWMgc2VsZWN0b3JzIGFuZCBtZXRob2RzIGZvciBhIHNwZWNpZmljIHBhZ2VcbiAqL1xuY2xhc3MgTG9naW5QYWdlIGV4dGVuZHMgUGFnZSB7XG4gICAgLyoqXG4gICAgICogZGVmaW5lIHNlbGVjdG9ycyB1c2luZyBnZXR0ZXIgbWV0aG9kc1xuICAgICAqL1xuICAgIGdldCBpbnB1dFVzZXJuYW1lICgpIHtcbiAgICAgICAgcmV0dXJuICQoJyN1c2VybmFtZScpO1xuICAgIH1cblxuICAgIGdldCBpbnB1dFBhc3N3b3JkICgpIHtcbiAgICAgICAgcmV0dXJuICQoJyNwYXNzd29yZCcpO1xuICAgIH1cblxuICAgIGdldCBidG5TdWJtaXQgKCkge1xuICAgICAgICByZXR1cm4gJCgnYnV0dG9uW3R5cGU9XCJzdWJtaXRcIl0nKTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBhIG1ldGhvZCB0byBlbmNhcHN1bGUgYXV0b21hdGlvbiBjb2RlIHRvIGludGVyYWN0IHdpdGggdGhlIHBhZ2VcbiAgICAgKiBlLmcuIHRvIGxvZ2luIHVzaW5nIHVzZXJuYW1lIGFuZCBwYXNzd29yZFxuICAgICAqL1xuICAgIGFzeW5jIGxvZ2luICh1c2VybmFtZSwgcGFzc3dvcmQpIHtcbiAgICAgICAgYXdhaXQgdGhpcy5pbnB1dFVzZXJuYW1lLnNldFZhbHVlKHVzZXJuYW1lKTtcbiAgICAgICAgYXdhaXQgdGhpcy5pbnB1dFBhc3N3b3JkLnNldFZhbHVlKHBhc3N3b3JkKTtcbiAgICAgICAgYXdhaXQgdGhpcy5idG5TdWJtaXQuY2xpY2soKTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBvdmVyd3JpdGUgc3BlY2lmaWMgb3B0aW9ucyB0byBhZGFwdCBpdCB0byBwYWdlIG9iamVjdFxuICAgICAqL1xuICAgIG9wZW4gKCkge1xuICAgICAgICByZXR1cm4gc3VwZXIub3BlbignbG9naW4nKTtcbiAgICB9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gbmV3IExvZ2luUGFnZSgpO1xuIl0sIm1hcHBpbmdzIjoiQUFBQSxNQUFNO0VBQUVBO0FBQUUsQ0FBQyxHQUFHQyxPQUFPLENBQUMsZUFBZSxDQUFDO0FBQ3RDLE1BQU1DLElBQUksR0FBR0QsT0FBTyxDQUFDLFFBQVEsQ0FBQzs7QUFFOUI7QUFDQTtBQUNBO0FBQ0EsTUFBTUUsU0FBUyxTQUFTRCxJQUFJLENBQUM7RUFDekI7QUFDSjtBQUNBO0VBQ0ksSUFBSUUsYUFBYUEsQ0FBQSxFQUFJO0lBQ2pCLE9BQU9KLENBQUMsQ0FBQyxXQUFXLENBQUM7RUFDekI7RUFFQSxJQUFJSyxhQUFhQSxDQUFBLEVBQUk7SUFDakIsT0FBT0wsQ0FBQyxDQUFDLFdBQVcsQ0FBQztFQUN6QjtFQUVBLElBQUlNLFNBQVNBLENBQUEsRUFBSTtJQUNiLE9BQU9OLENBQUMsQ0FBQyx1QkFBdUIsQ0FBQztFQUNyQzs7RUFFQTtBQUNKO0FBQ0E7QUFDQTtFQUNJLE1BQU1PLEtBQUtBLENBQUVDLFFBQVEsRUFBRUMsUUFBUSxFQUFFO0lBQzdCLE1BQU0sSUFBSSxDQUFDTCxhQUFhLENBQUNNLFFBQVEsQ0FBQ0YsUUFBUSxDQUFDO0lBQzNDLE1BQU0sSUFBSSxDQUFDSCxhQUFhLENBQUNLLFFBQVEsQ0FBQ0QsUUFBUSxDQUFDO0lBQzNDLE1BQU0sSUFBSSxDQUFDSCxTQUFTLENBQUNLLEtBQUssQ0FBQyxDQUFDO0VBQ2hDOztFQUVBO0FBQ0o7QUFDQTtFQUNJQyxJQUFJQSxDQUFBLEVBQUk7SUFDSixPQUFPLEtBQUssQ0FBQ0EsSUFBSSxDQUFDLE9BQU8sQ0FBQztFQUM5QjtBQUNKO0FBRUFDLE1BQU0sQ0FBQ0MsT0FBTyxHQUFHLElBQUlYLFNBQVMsQ0FBQyxDQUFDIn0=","map":{"version":3,"names":["$","require","Page","LoginPage","inputUsername","inputPassword","btnSubmit","login","username","password","setValue","click","open","module","exports"],"sourceRoot":"C:\\Users\\Alex\\Desktop\\work1\\test\\pageobjects\\","sources":["login.page.js"],"sourcesContent":["const { $ } = require('@wdio/globals')\nconst Page = require('./page');\n\n/**\n * sub page containing specific selectors and methods for a specific page\n */\nclass LoginPage extends Page {\n    /**\n     * define selectors using getter methods\n     */\n    get inputUsername () {\n        return $('#username');\n    }\n\n    get inputPassword () {\n        return $('#password');\n    }\n\n    get btnSubmit () {\n        return $('button[type=\"submit\"]');\n    }\n\n    /**\n     * a method to encapsule automation code to interact with the page\n     * e.g. to login using username and password\n     */\n    async login (username, password) {\n        await this.inputUsername.setValue(username);\n        await this.inputPassword.setValue(password);\n        await this.btnSubmit.click();\n    }\n\n    /**\n     * overwrite specific options to adapt it to page object\n     */\n    open () {\n        return super.open('login');\n    }\n}\n\nmodule.exports = new LoginPage();\n"],"mappings":"AAAA,MAAM;EAAEA;AAAE,CAAC,GAAGC,OAAO,CAAC,eAAe,CAAC;AACtC,MAAMC,IAAI,GAAGD,OAAO,CAAC,QAAQ,CAAC;;AAE9B;AACA;AACA;AACA,MAAME,SAAS,SAASD,IAAI,CAAC;EACzB;AACJ;AACA;EACI,IAAIE,aAAaA,CAAA,EAAI;IACjB,OAAOJ,CAAC,CAAC,WAAW,CAAC;EACzB;EAEA,IAAIK,aAAaA,CAAA,EAAI;IACjB,OAAOL,CAAC,CAAC,WAAW,CAAC;EACzB;EAEA,IAAIM,SAASA,CAAA,EAAI;IACb,OAAON,CAAC,CAAC,uBAAuB,CAAC;EACrC;;EAEA;AACJ;AACA;AACA;EACI,MAAMO,KAAKA,CAAEC,QAAQ,EAAEC,QAAQ,EAAE;IAC7B,MAAM,IAAI,CAACL,aAAa,CAACM,QAAQ,CAACF,QAAQ,CAAC;IAC3C,MAAM,IAAI,CAACH,aAAa,CAACK,QAAQ,CAACD,QAAQ,CAAC;IAC3C,MAAM,IAAI,CAACH,SAAS,CAACK,KAAK,CAAC,CAAC;EAChC;;EAEA;AACJ;AACA;EACIC,IAAIA,CAAA,EAAI;IACJ,OAAO,KAAK,CAACA,IAAI,CAAC,OAAO,CAAC;EAC9B;AACJ;AAEAC,MAAM,CAACC,OAAO,GAAG,IAAIX,SAAS,CAAC,CAAC"}},"mtime":1693336488940},"{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\Alex\\\\Desktop\\\\work1\\\\test\\\\pageobjects\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\Alex\\\\Desktop\\\\work1\",\"filename\":\"C:\\\\Users\\\\Alex\\\\Desktop\\\\work1\\\\test\\\\pageobjects\\\\page.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"C:\\\\Users\\\\Alex\\\\Desktop\\\\work1\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.22.11:test":{"value":{"code":"const {\n  browser\n} = require('@wdio/globals');\n\n/**\n* main page object containing all methods, selectors and functionality\n* that is shared across all page objects\n*/\nmodule.exports = class Page {\n  /**\n  * Opens a sub page of the page\n  * @param path path of the sub page (e.g. /path/to/page.html)\n  */\n  open(path) {\n    return browser.url(`https://the-internet.herokuapp.com/${path}`);\n  }\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJicm93c2VyIiwicmVxdWlyZSIsIm1vZHVsZSIsImV4cG9ydHMiLCJQYWdlIiwib3BlbiIsInBhdGgiLCJ1cmwiXSwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcQWxleFxcRGVza3RvcFxcd29yazFcXHRlc3RcXHBhZ2VvYmplY3RzXFwiLCJzb3VyY2VzIjpbInBhZ2UuanMiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgeyBicm93c2VyIH0gPSByZXF1aXJlKCdAd2Rpby9nbG9iYWxzJylcblxuLyoqXG4qIG1haW4gcGFnZSBvYmplY3QgY29udGFpbmluZyBhbGwgbWV0aG9kcywgc2VsZWN0b3JzIGFuZCBmdW5jdGlvbmFsaXR5XG4qIHRoYXQgaXMgc2hhcmVkIGFjcm9zcyBhbGwgcGFnZSBvYmplY3RzXG4qL1xubW9kdWxlLmV4cG9ydHMgPSBjbGFzcyBQYWdlIHtcbiAgICAvKipcbiAgICAqIE9wZW5zIGEgc3ViIHBhZ2Ugb2YgdGhlIHBhZ2VcbiAgICAqIEBwYXJhbSBwYXRoIHBhdGggb2YgdGhlIHN1YiBwYWdlIChlLmcuIC9wYXRoL3RvL3BhZ2UuaHRtbClcbiAgICAqL1xuICAgIG9wZW4gKHBhdGgpIHtcbiAgICAgICAgcmV0dXJuIGJyb3dzZXIudXJsKGBodHRwczovL3RoZS1pbnRlcm5ldC5oZXJva3VhcHAuY29tLyR7cGF0aH1gKVxuICAgIH1cbn1cbiJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTTtFQUFFQTtBQUFRLENBQUMsR0FBR0MsT0FBTyxDQUFDLGVBQWUsQ0FBQzs7QUFFNUM7QUFDQTtBQUNBO0FBQ0E7QUFDQUMsTUFBTSxDQUFDQyxPQUFPLEdBQUcsTUFBTUMsSUFBSSxDQUFDO0VBQ3hCO0FBQ0o7QUFDQTtBQUNBO0VBQ0lDLElBQUlBLENBQUVDLElBQUksRUFBRTtJQUNSLE9BQU9OLE9BQU8sQ0FBQ08sR0FBRyxDQUFFLHNDQUFxQ0QsSUFBSyxFQUFDLENBQUM7RUFDcEU7QUFDSixDQUFDIn0=","map":{"version":3,"names":["browser","require","module","exports","Page","open","path","url"],"sourceRoot":"C:\\Users\\Alex\\Desktop\\work1\\test\\pageobjects\\","sources":["page.js"],"sourcesContent":["const { browser } = require('@wdio/globals')\n\n/**\n* main page object containing all methods, selectors and functionality\n* that is shared across all page objects\n*/\nmodule.exports = class Page {\n    /**\n    * Opens a sub page of the page\n    * @param path path of the sub page (e.g. /path/to/page.html)\n    */\n    open (path) {\n        return browser.url(`https://the-internet.herokuapp.com/${path}`)\n    }\n}\n"],"mappings":"AAAA,MAAM;EAAEA;AAAQ,CAAC,GAAGC,OAAO,CAAC,eAAe,CAAC;;AAE5C;AACA;AACA;AACA;AACAC,MAAM,CAACC,OAAO,GAAG,MAAMC,IAAI,CAAC;EACxB;AACJ;AACA;AACA;EACIC,IAAIA,CAAEC,IAAI,EAAE;IACR,OAAON,OAAO,CAACO,GAAG,CAAE,sCAAqCD,IAAK,EAAC,CAAC;EACpE;AACJ,CAAC"}},"mtime":1693336488943},"{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\Alex\\\\Desktop\\\\work1\\\\test\\\\pageobjects\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\Alex\\\\Desktop\\\\work1\",\"filename\":\"C:\\\\Users\\\\Alex\\\\Desktop\\\\work1\\\\test\\\\pageobjects\\\\secure.page.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"C:\\\\Users\\\\Alex\\\\Desktop\\\\work1\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.22.11:test":{"value":{"code":"const {\n  $\n} = require('@wdio/globals');\nconst Page = require('./page');\n\n/**\n * sub page containing specific selectors and methods for a specific page\n */\nclass SecurePage extends Page {\n  /**\n   * define selectors using getter methods\n   */\n  get flashAlert() {\n    return $('#flash');\n  }\n}\nmodule.exports = new SecurePage();\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyIkIiwicmVxdWlyZSIsIlBhZ2UiLCJTZWN1cmVQYWdlIiwiZmxhc2hBbGVydCIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xcQWxleFxcRGVza3RvcFxcd29yazFcXHRlc3RcXHBhZ2VvYmplY3RzXFwiLCJzb3VyY2VzIjpbInNlY3VyZS5wYWdlLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IHsgJCB9ID0gcmVxdWlyZSgnQHdkaW8vZ2xvYmFscycpXG5jb25zdCBQYWdlID0gcmVxdWlyZSgnLi9wYWdlJyk7XG5cbi8qKlxuICogc3ViIHBhZ2UgY29udGFpbmluZyBzcGVjaWZpYyBzZWxlY3RvcnMgYW5kIG1ldGhvZHMgZm9yIGEgc3BlY2lmaWMgcGFnZVxuICovXG5jbGFzcyBTZWN1cmVQYWdlIGV4dGVuZHMgUGFnZSB7XG4gICAgLyoqXG4gICAgICogZGVmaW5lIHNlbGVjdG9ycyB1c2luZyBnZXR0ZXIgbWV0aG9kc1xuICAgICAqL1xuICAgIGdldCBmbGFzaEFsZXJ0ICgpIHtcbiAgICAgICAgcmV0dXJuICQoJyNmbGFzaCcpO1xuICAgIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBuZXcgU2VjdXJlUGFnZSgpO1xuIl0sIm1hcHBpbmdzIjoiQUFBQSxNQUFNO0VBQUVBO0FBQUUsQ0FBQyxHQUFHQyxPQUFPLENBQUMsZUFBZSxDQUFDO0FBQ3RDLE1BQU1DLElBQUksR0FBR0QsT0FBTyxDQUFDLFFBQVEsQ0FBQzs7QUFFOUI7QUFDQTtBQUNBO0FBQ0EsTUFBTUUsVUFBVSxTQUFTRCxJQUFJLENBQUM7RUFDMUI7QUFDSjtBQUNBO0VBQ0ksSUFBSUUsVUFBVUEsQ0FBQSxFQUFJO0lBQ2QsT0FBT0osQ0FBQyxDQUFDLFFBQVEsQ0FBQztFQUN0QjtBQUNKO0FBRUFLLE1BQU0sQ0FBQ0MsT0FBTyxHQUFHLElBQUlILFVBQVUsQ0FBQyxDQUFDIn0=","map":{"version":3,"names":["$","require","Page","SecurePage","flashAlert","module","exports"],"sourceRoot":"C:\\Users\\Alex\\Desktop\\work1\\test\\pageobjects\\","sources":["secure.page.js"],"sourcesContent":["const { $ } = require('@wdio/globals')\nconst Page = require('./page');\n\n/**\n * sub page containing specific selectors and methods for a specific page\n */\nclass SecurePage extends Page {\n    /**\n     * define selectors using getter methods\n     */\n    get flashAlert () {\n        return $('#flash');\n    }\n}\n\nmodule.exports = new SecurePage();\n"],"mappings":"AAAA,MAAM;EAAEA;AAAE,CAAC,GAAGC,OAAO,CAAC,eAAe,CAAC;AACtC,MAAMC,IAAI,GAAGD,OAAO,CAAC,QAAQ,CAAC;;AAE9B;AACA;AACA;AACA,MAAME,UAAU,SAASD,IAAI,CAAC;EAC1B;AACJ;AACA;EACI,IAAIE,UAAUA,CAAA,EAAI;IACd,OAAOJ,CAAC,CAAC,QAAQ,CAAC;EACtB;AACJ;AAEAK,MAAM,CAACC,OAAO,GAAG,IAAIH,UAAU,CAAC,CAAC"}},"mtime":1693336488945},"{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\Alex\\\\Desktop\\\\work1\\\\test\\\\specs\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\Alex\\\\Desktop\\\\work1\",\"filename\":\"C:\\\\Users\\\\Alex\\\\Desktop\\\\work1\\\\test\\\\specs\\\\basic.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"C:\\\\Users\\\\Alex\\\\Desktop\\\\work1\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.22.11:test":{"value":{"code":"it('Homework1', async () => {\n  await browser.url('https://v7.webdriver.io/docs/api');\n  await browser.pause(2000);\n  //getAttribute\n  const JSONWire = await $('//*[text()=\"JSONWire protocol\"]');\n  const newwind = await JSONWire.getAttribute('href');\n  //newWindow\n  browser.newWindow(newwind);\n  await browser.pause(1000);\n  //isDisplayed\n  const WikiButton = await $('[href=\"/SeleniumHQ/selenium/wiki\"]');\n  isDisplayed = await WikiButton.isDisplayed();\n  console.log('Is Displayed?: ' + (await isDisplayed));\n  await browser.pause(1000);\n  //switchWindow\n  browser.switchWindow('https://v7.webdriver.io/docs/api');\n  await browser.pause(1000);\n  //waitUntil\n  browser.waitUntil(() => {\n    return $('.docTitle_Oumm').getText();\n  }, 2000, 'blog is not diaplayed');\n  //saveScreenshot\n  const elem = $('.docTitle_Oumm');\n  elem.saveScreenshot('elemScreenshot.png');\n  await browser.pause(1000);\n  //isDisplayed\n  const Twitter = await $('[href=\"https://twitter.com/webdriverio\"]');\n  isDisplayed = await Twitter.isDisplayed();\n  console.log('Twittet Is Displayed?: ' + (await isDisplayed));\n  await browser.pause(1000);\n  //isDisplayedInViewport\n  let isDisplayedInViewport = await $('[href=\"https://twitter.com/webdriverio\"]').isDisplayedInViewport();\n  console.log('Twittet is displayed in ViewPort?: ' + (await isDisplayedInViewport));\n  await browser.pause(1000);\n  //scrollIntroView()\n  const scroll = await $('[href=\"https://twitter.com/webdriverio\"]');\n  await browser.pause(1000);\n  await scroll.scrollIntoView();\n  //isDisplayed#1\n  const Twitter1 = await $('[href=\"https://twitter.com/webdriverio\"]');\n  isDisplayed1 = await Twitter1.isDisplayed();\n  console.log('Twittet Is Displayed?: ' + (await isDisplayed1));\n  await browser.pause(1000);\n  //isDisplayedInViewport#1\n  let isDisplayedInViewport1 = await $('[href=\"https://twitter.com/webdriverio\"]').isDisplayedInViewport();\n  console.log('Twittet is displayed in ViewPort?: ' + (await isDisplayedInViewport1));\n  await browser.pause(1000);\n  //isFocused\n  const blog = await $('//a[@href=\"/blog\"]');\n  await browser.pause(1000);\n  console.log('blog isFocused() before click:' + (await blog.isFocused()));\n  await browser.pause(1000);\n  await blog.click();\n  await browser.pause(7000);\n  console.log('blog isFocused() after click:' + (await blog.isFocused()));\n  await browser.pause(5000);\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJpdCIsImJyb3dzZXIiLCJ1cmwiLCJwYXVzZSIsIkpTT05XaXJlIiwiJCIsIm5ld3dpbmQiLCJnZXRBdHRyaWJ1dGUiLCJuZXdXaW5kb3ciLCJXaWtpQnV0dG9uIiwiaXNEaXNwbGF5ZWQiLCJjb25zb2xlIiwibG9nIiwic3dpdGNoV2luZG93Iiwid2FpdFVudGlsIiwiZ2V0VGV4dCIsImVsZW0iLCJzYXZlU2NyZWVuc2hvdCIsIlR3aXR0ZXIiLCJpc0Rpc3BsYXllZEluVmlld3BvcnQiLCJzY3JvbGwiLCJzY3JvbGxJbnRvVmlldyIsIlR3aXR0ZXIxIiwiaXNEaXNwbGF5ZWQxIiwiaXNEaXNwbGF5ZWRJblZpZXdwb3J0MSIsImJsb2ciLCJpc0ZvY3VzZWQiLCJjbGljayJdLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFxBbGV4XFxEZXNrdG9wXFx3b3JrMVxcdGVzdFxcc3BlY3NcXCIsInNvdXJjZXMiOlsiYmFzaWMuanMiXSwic291cmNlc0NvbnRlbnQiOlsiaXQoJ0hvbWV3b3JrMScsIGFzeW5jICgpID0+IHtcclxuICAgIGF3YWl0IGJyb3dzZXIudXJsKCdodHRwczovL3Y3LndlYmRyaXZlci5pby9kb2NzL2FwaScpO1xyXG4gICAgYXdhaXQgYnJvd3Nlci5wYXVzZSgyMDAwKTtcclxuICAgIC8vZ2V0QXR0cmlidXRlXHJcbiAgICBjb25zdCBKU09OV2lyZSA9IGF3YWl0ICQoJy8vKlt0ZXh0KCk9XCJKU09OV2lyZSBwcm90b2NvbFwiXScpO1xyXG4gICAgY29uc3QgbmV3d2luZCA9IGF3YWl0IEpTT05XaXJlLmdldEF0dHJpYnV0ZSgnaHJlZicpO1xyXG4gICAgLy9uZXdXaW5kb3dcclxuICAgIGJyb3dzZXIubmV3V2luZG93KG5ld3dpbmQpO1xyXG4gICAgYXdhaXQgYnJvd3Nlci5wYXVzZSgxMDAwKTtcclxuICAgIC8vaXNEaXNwbGF5ZWRcclxuICAgIGNvbnN0IFdpa2lCdXR0b24gPSBhd2FpdCAkKCdbaHJlZj1cIi9TZWxlbml1bUhRL3NlbGVuaXVtL3dpa2lcIl0nKTtcclxuICAgIGlzRGlzcGxheWVkID0gYXdhaXQgV2lraUJ1dHRvbi5pc0Rpc3BsYXllZCgpO1xyXG4gICAgY29uc29sZS5sb2coJ0lzIERpc3BsYXllZD86ICcgKyBhd2FpdCBpc0Rpc3BsYXllZCk7XHJcbiAgICBhd2FpdCBicm93c2VyLnBhdXNlKDEwMDApO1xyXG4gICAgLy9zd2l0Y2hXaW5kb3dcclxuICAgIGJyb3dzZXIuc3dpdGNoV2luZG93KCdodHRwczovL3Y3LndlYmRyaXZlci5pby9kb2NzL2FwaScpO1xyXG4gICAgYXdhaXQgYnJvd3Nlci5wYXVzZSgxMDAwKTtcclxuICAgIC8vd2FpdFVudGlsXHJcbiAgICBicm93c2VyLndhaXRVbnRpbCgoKSA9PiB7XHJcbiAgICAgICAgcmV0dXJuICQoJy5kb2NUaXRsZV9PdW1tJykuZ2V0VGV4dCgpO1xyXG4gICAgfSwgMjAwMCwgJ2Jsb2cgaXMgbm90IGRpYXBsYXllZCcpO1xyXG4gICAgLy9zYXZlU2NyZWVuc2hvdFxyXG4gICAgY29uc3QgZWxlbSA9ICQoJy5kb2NUaXRsZV9PdW1tJyk7XHJcbiAgICBlbGVtLnNhdmVTY3JlZW5zaG90KCdlbGVtU2NyZWVuc2hvdC5wbmcnKVxyXG4gICAgYXdhaXQgYnJvd3Nlci5wYXVzZSgxMDAwKTtcclxuICAgIC8vaXNEaXNwbGF5ZWRcclxuICAgIGNvbnN0IFR3aXR0ZXIgPSBhd2FpdCAkKCdbaHJlZj1cImh0dHBzOi8vdHdpdHRlci5jb20vd2ViZHJpdmVyaW9cIl0nKTtcclxuICAgIGlzRGlzcGxheWVkID0gYXdhaXQgVHdpdHRlci5pc0Rpc3BsYXllZCgpO1xyXG4gICAgY29uc29sZS5sb2coJ1R3aXR0ZXQgSXMgRGlzcGxheWVkPzogJyArIGF3YWl0IGlzRGlzcGxheWVkKTtcclxuICAgIGF3YWl0IGJyb3dzZXIucGF1c2UoMTAwMCk7XHJcbiAgICAvL2lzRGlzcGxheWVkSW5WaWV3cG9ydFxyXG4gICAgbGV0IGlzRGlzcGxheWVkSW5WaWV3cG9ydCA9IGF3YWl0ICQoJ1tocmVmPVwiaHR0cHM6Ly90d2l0dGVyLmNvbS93ZWJkcml2ZXJpb1wiXScpLmlzRGlzcGxheWVkSW5WaWV3cG9ydCgpO1xyXG4gICAgY29uc29sZS5sb2coJ1R3aXR0ZXQgaXMgZGlzcGxheWVkIGluIFZpZXdQb3J0PzogJyArIGF3YWl0IGlzRGlzcGxheWVkSW5WaWV3cG9ydCk7XHJcbiAgICBhd2FpdCBicm93c2VyLnBhdXNlKDEwMDApO1xyXG4gICAgLy9zY3JvbGxJbnRyb1ZpZXcoKVxyXG4gICAgY29uc3Qgc2Nyb2xsID0gYXdhaXQgJCgnW2hyZWY9XCJodHRwczovL3R3aXR0ZXIuY29tL3dlYmRyaXZlcmlvXCJdJyk7XHJcbiAgICBhd2FpdCBicm93c2VyLnBhdXNlKDEwMDApO1xyXG4gICAgYXdhaXQgc2Nyb2xsLnNjcm9sbEludG9WaWV3KCk7XHJcbiAgICAvL2lzRGlzcGxheWVkIzFcclxuICAgIGNvbnN0IFR3aXR0ZXIxID0gYXdhaXQgJCgnW2hyZWY9XCJodHRwczovL3R3aXR0ZXIuY29tL3dlYmRyaXZlcmlvXCJdJyk7XHJcbiAgICBpc0Rpc3BsYXllZDEgPSBhd2FpdCBUd2l0dGVyMS5pc0Rpc3BsYXllZCgpO1xyXG4gICAgY29uc29sZS5sb2coJ1R3aXR0ZXQgSXMgRGlzcGxheWVkPzogJyArIGF3YWl0IGlzRGlzcGxheWVkMSk7XHJcbiAgICBhd2FpdCBicm93c2VyLnBhdXNlKDEwMDApO1xyXG4gICAgLy9pc0Rpc3BsYXllZEluVmlld3BvcnQjMVxyXG4gICAgbGV0IGlzRGlzcGxheWVkSW5WaWV3cG9ydDEgPSBhd2FpdCAkKCdbaHJlZj1cImh0dHBzOi8vdHdpdHRlci5jb20vd2ViZHJpdmVyaW9cIl0nKS5pc0Rpc3BsYXllZEluVmlld3BvcnQoKTtcclxuICAgIGNvbnNvbGUubG9nKCdUd2l0dGV0IGlzIGRpc3BsYXllZCBpbiBWaWV3UG9ydD86ICcgKyBhd2FpdCBpc0Rpc3BsYXllZEluVmlld3BvcnQxKTtcclxuICAgIGF3YWl0IGJyb3dzZXIucGF1c2UoMTAwMCk7XHJcbiAgICAvL2lzRm9jdXNlZFxyXG4gICAgY29uc3QgYmxvZyA9IGF3YWl0ICQoJy8vYVtAaHJlZj1cIi9ibG9nXCJdJyk7XHJcbiAgICBhd2FpdCBicm93c2VyLnBhdXNlKDEwMDApO1xyXG4gICAgY29uc29sZS5sb2coJ2Jsb2cgaXNGb2N1c2VkKCkgYmVmb3JlIGNsaWNrOicgKyBhd2FpdCBibG9nLmlzRm9jdXNlZCgpKTtcclxuICAgIGF3YWl0IGJyb3dzZXIucGF1c2UoMTAwMCk7XHJcblxyXG4gICAgYXdhaXQgYmxvZy5jbGljaygpO1xyXG4gICAgYXdhaXQgYnJvd3Nlci5wYXVzZSg3MDAwKTtcclxuICAgIGNvbnNvbGUubG9nKCdibG9nIGlzRm9jdXNlZCgpIGFmdGVyIGNsaWNrOicgKyBhd2FpdCBibG9nLmlzRm9jdXNlZCgpKTtcclxuICAgIGF3YWl0IGJyb3dzZXIucGF1c2UoNTAwMCk7XHJcblxyXG5cclxufSlcclxuXHJcbiJdLCJtYXBwaW5ncyI6IkFBQUFBLEVBQUUsQ0FBQyxXQUFXLEVBQUUsWUFBWTtFQUN4QixNQUFNQyxPQUFPLENBQUNDLEdBQUcsQ0FBQyxrQ0FBa0MsQ0FBQztFQUNyRCxNQUFNRCxPQUFPLENBQUNFLEtBQUssQ0FBQyxJQUFJLENBQUM7RUFDekI7RUFDQSxNQUFNQyxRQUFRLEdBQUcsTUFBTUMsQ0FBQyxDQUFDLGlDQUFpQyxDQUFDO0VBQzNELE1BQU1DLE9BQU8sR0FBRyxNQUFNRixRQUFRLENBQUNHLFlBQVksQ0FBQyxNQUFNLENBQUM7RUFDbkQ7RUFDQU4sT0FBTyxDQUFDTyxTQUFTLENBQUNGLE9BQU8sQ0FBQztFQUMxQixNQUFNTCxPQUFPLENBQUNFLEtBQUssQ0FBQyxJQUFJLENBQUM7RUFDekI7RUFDQSxNQUFNTSxVQUFVLEdBQUcsTUFBTUosQ0FBQyxDQUFDLG9DQUFvQyxDQUFDO0VBQ2hFSyxXQUFXLEdBQUcsTUFBTUQsVUFBVSxDQUFDQyxXQUFXLENBQUMsQ0FBQztFQUM1Q0MsT0FBTyxDQUFDQyxHQUFHLENBQUMsaUJBQWlCLElBQUcsTUFBTUYsV0FBVyxF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","map":{"version":3,"names":["it","browser","url","pause","JSONWire","$","newwind","getAttribute","newWindow","WikiButton","isDisplayed","console","log","switchWindow","waitUntil","getText","elem","saveScreenshot","Twitter","isDisplayedInViewport","scroll","scrollIntoView","Twitter1","isDisplayed1","isDisplayedInViewport1","blog","isFocused","click"],"sourceRoot":"C:\\Users\\Alex\\Desktop\\work1\\test\\specs\\","sources":["basic.js"],"sourcesContent":["it('Homework1', async () => {\r\n    await browser.url('https://v7.webdriver.io/docs/api');\r\n    await browser.pause(2000);\r\n    //getAttribute\r\n    const JSONWire = await $('//*[text()=\"JSONWire protocol\"]');\r\n    const newwind = await JSONWire.getAttribute('href');\r\n    //newWindow\r\n    browser.newWindow(newwind);\r\n    await browser.pause(1000);\r\n    //isDisplayed\r\n    const WikiButton = await $('[href=\"/SeleniumHQ/selenium/wiki\"]');\r\n    isDisplayed = await WikiButton.isDisplayed();\r\n    console.log('Is Displayed?: ' + await isDisplayed);\r\n    await browser.pause(1000);\r\n    //switchWindow\r\n    browser.switchWindow('https://v7.webdriver.io/docs/api');\r\n    await browser.pause(1000);\r\n    //waitUntil\r\n    browser.waitUntil(() => {\r\n        return $('.docTitle_Oumm').getText();\r\n    }, 2000, 'blog is not diaplayed');\r\n    //saveScreenshot\r\n    const elem = $('.docTitle_Oumm');\r\n    elem.saveScreenshot('elemScreenshot.png')\r\n    await browser.pause(1000);\r\n    //isDisplayed\r\n    const Twitter = await $('[href=\"https://twitter.com/webdriverio\"]');\r\n    isDisplayed = await Twitter.isDisplayed();\r\n    console.log('Twittet Is Displayed?: ' + await isDisplayed);\r\n    await browser.pause(1000);\r\n    //isDisplayedInViewport\r\n    let isDisplayedInViewport = await $('[href=\"https://twitter.com/webdriverio\"]').isDisplayedInViewport();\r\n    console.log('Twittet is displayed in ViewPort?: ' + await isDisplayedInViewport);\r\n    await browser.pause(1000);\r\n    //scrollIntroView()\r\n    const scroll = await $('[href=\"https://twitter.com/webdriverio\"]');\r\n    await browser.pause(1000);\r\n    await scroll.scrollIntoView();\r\n    //isDisplayed#1\r\n    const Twitter1 = await $('[href=\"https://twitter.com/webdriverio\"]');\r\n    isDisplayed1 = await Twitter1.isDisplayed();\r\n    console.log('Twittet Is Displayed?: ' + await isDisplayed1);\r\n    await browser.pause(1000);\r\n    //isDisplayedInViewport#1\r\n    let isDisplayedInViewport1 = await $('[href=\"https://twitter.com/webdriverio\"]').isDisplayedInViewport();\r\n    console.log('Twittet is displayed in ViewPort?: ' + await isDisplayedInViewport1);\r\n    await browser.pause(1000);\r\n    //isFocused\r\n    const blog = await $('//a[@href=\"/blog\"]');\r\n    await browser.pause(1000);\r\n    console.log('blog isFocused() before click:' + await blog.isFocused());\r\n    await browser.pause(1000);\r\n\r\n    await blog.click();\r\n    await browser.pause(7000);\r\n    console.log('blog isFocused() after click:' + await blog.isFocused());\r\n    await browser.pause(5000);\r\n\r\n\r\n})\r\n\r\n"],"mappings":"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"}},"mtime":1698696677872},"{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\Alex\\\\Desktop\\\\Work1\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\Alex\\\\Desktop\\\\Work1\",\"filename\":\"C:\\\\Users\\\\Alex\\\\Desktop\\\\Work1\\\\wdio.conf.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"C:\\\\Users\\\\Alex\\\\Desktop\\\\Work1\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.22.11:test":{"value":{"code":"exports.config = {\n  //\n  // ====================\n  // Runner Configuration\n  // ====================\n  // WebdriverIO supports running e2e tests as well as unit and component tests.\n  runner: 'local',\n  //\n  // ==================\n  // Specify Test Files\n  // ==================\n  // Define which test specs should run. The pattern is relative to the directory\n  // of the configuration file being run.\n  //\n  // The specs are defined as an array of spec files (optionally using wildcards\n  // that will be expanded). The test for each spec file will be run in a separate\n  // worker process. In order to have a group of spec files run in the same worker\n  // process simply enclose them in an array within the specs array.\n  //\n  // If you are calling `wdio` from an NPM script (see https://docs.npmjs.com/cli/run-script),\n  // then the current working directory is where your `package.json` resides, so `wdio`\n  // will be called from there.\n  //\n  specs: ['./test/specs/**/*.js'],\n  // Patterns to exclude.\n  exclude: [\n    // 'path/to/excluded/files'\n  ],\n  //\n  // ============\n  // Capabilities\n  // ============\n  // Define your capabilities here. WebdriverIO can run multiple capabilities at the same\n  // time. Depending on the number of capabilities, WebdriverIO launches several test\n  // sessions. Within your capabilities you can overwrite the spec and exclude options in\n  // order to group specific specs to a specific capability.\n  //\n  // First, you can define how many instances should be started at the same time. Let's\n  // say you have 3 different capabilities (Chrome, Firefox, and Safari) and you have\n  // set maxInstances to 1; wdio will spawn 3 processes. Therefore, if you have 10 spec\n  // files and you set maxInstances to 10, all spec files will get tested at the same time\n  // and 30 processes will get spawned. The property handles how many capabilities\n  // from the same test should run tests.\n  //\n  maxInstances: 10,\n  //\n  // If you have trouble getting all important capabilities together, check out the\n  // Sauce Labs platform configurator - a great tool to configure your capabilities:\n  // https://saucelabs.com/platform/platform-configurator\n  //\n  capabilities: [{\n    // capabilities for local browser web tests\n    browserName: 'chrome' // or \"firefox\", \"microsoftedge\", \"safari\"\n  }],\n\n  //\n  // ===================\n  // Test Configurations\n  // ===================\n  // Define all options that are relevant for the WebdriverIO instance here\n  //\n  // Level of logging verbosity: trace | debug | info | warn | error | silent\n  logLevel: 'info',\n  //\n  // Set specific log levels per logger\n  // loggers:\n  // - webdriver, webdriverio\n  // - @wdio/browserstack-service, @wdio/devtools-service, @wdio/sauce-service\n  // - @wdio/mocha-framework, @wdio/jasmine-framework\n  // - @wdio/local-runner\n  // - @wdio/sumologic-reporter\n  // - @wdio/cli, @wdio/config, @wdio/utils\n  // Level of logging verbosity: trace | debug | info | warn | error | silent\n  // logLevels: {\n  //     webdriver: 'info',\n  //     '@wdio/appium-service': 'info'\n  // },\n  //\n  // If you only want to run your tests until a specific amount of tests have failed use\n  // bail (default is 0 - don't bail, run all tests).\n  bail: 0,\n  //\n  // Set a base URL in order to shorten url command calls. If your `url` parameter starts\n  // with `/`, the base url gets prepended, not including the path portion of your baseUrl.\n  // If your `url` parameter starts without a scheme or `/` (like `some/path`), the base url\n  // gets prepended directly.\n  baseUrl: 'http://localhost',\n  //\n  // Default timeout for all waitFor* commands.\n  waitforTimeout: 10000,\n  //\n  // Default timeout in milliseconds for request\n  // if browser driver or grid doesn't send response\n  connectionRetryTimeout: 120000,\n  //\n  // Default request retries count\n  connectionRetryCount: 3,\n  //\n  // Test runner services\n  // Services take over a specific job you don't want to take care of. They enhance\n  // your test setup with almost no effort. Unlike plugins, they don't add new\n  // commands. Instead, they hook themselves up into the test process.\n  // services: [],\n  //\n  // Framework you want to run your specs with.\n  // The following are supported: Mocha, Jasmine, and Cucumber\n  // see also: https://webdriver.io/docs/frameworks\n  //\n  // Make sure you have the wdio adapter package for the specific framework installed\n  // before running any tests.\n  framework: 'mocha',\n  //\n  // The number of times to retry the entire specfile when it fails as a whole\n  // specFileRetries: 1,\n  //\n  // Delay in seconds between the spec file retry attempts\n  // specFileRetriesDelay: 0,\n  //\n  // Whether or not retried spec files should be retried immediately or deferred to the end of the queue\n  // specFileRetriesDeferred: false,\n  //\n  // Test reporter for stdout.\n  // The only one supported by default is 'dot'\n  // see also: https://webdriver.io/docs/dot-reporter\n  reporters: ['spec'],\n  //\n  // Options to be passed to Mocha.\n  // See the full list at http://mochajs.org/\n  mochaOpts: {\n    ui: 'bdd',\n    timeout: 60000\n  }\n  //\n  // =====\n  // Hooks\n  // =====\n  // WebdriverIO provides several hooks you can use to interfere with the test process in order to enhance\n  // it and to build services around it. You can either apply a single function or an array of\n  // methods to it. If one of them returns with a promise, WebdriverIO will wait until that promise got\n  // resolved to continue.\n  /**\n   * Gets executed once before all workers get launched.\n   * @param {object} config wdio configuration object\n   * @param {Array.<Object>} capabilities list of capabilities details\n   */\n  // onPrepare: function (config, capabilities) {\n  // },\n  /**\n   * Gets executed before a worker process is spawned and can be used to initialise specific service\n   * for that worker as well as modify runtime environments in an async fashion.\n   * @param  {string} cid      capability id (e.g 0-0)\n   * @param  {object} caps     object containing capabilities for session that will be spawn in the worker\n   * @param  {object} specs    specs to be run in the worker process\n   * @param  {object} args     object that will be merged with the main configuration once worker is initialized\n   * @param  {object} execArgv list of string arguments passed to the worker process\n   */\n  // onWorkerStart: function (cid, caps, specs, args, execArgv) {\n  // },\n  /**\n   * Gets executed just after a worker process has exited.\n   * @param  {string} cid      capability id (e.g 0-0)\n   * @param  {number} exitCode 0 - success, 1 - fail\n   * @param  {object} specs    specs to be run in the worker process\n   * @param  {number} retries  number of retries used\n   */\n  // onWorkerEnd: function (cid, exitCode, specs, retries) {\n  // },\n  /**\n   * Gets executed just before initialising the webdriver session and test framework. It allows you\n   * to manipulate configurations depending on the capability or spec.\n   * @param {object} config wdio configuration object\n   * @param {Array.<Object>} capabilities list of capabilities details\n   * @param {Array.<String>} specs List of spec file paths that are to be run\n   * @param {string} cid worker id (e.g. 0-0)\n   */\n  // beforeSession: function (config, capabilities, specs, cid) {\n  // },\n  /**\n   * Gets executed before test execution begins. At this point you can access to all global\n   * variables like `browser`. It is the perfect place to define custom commands.\n   * @param {Array.<Object>} capabilities list of capabilities details\n   * @param {Array.<String>} specs        List of spec file paths that are to be run\n   * @param {object}         browser      instance of created browser/device session\n   */\n  // before: function (capabilities, specs) {\n  // },\n  /**\n   * Runs before a WebdriverIO command gets executed.\n   * @param {string} commandName hook command name\n   * @param {Array} args arguments that command would receive\n   */\n  // beforeCommand: function (commandName, args) {\n  // },\n  /**\n   * Hook that gets executed before the suite starts\n   * @param {object} suite suite details\n   */\n  // beforeSuite: function (suite) {\n  // },\n  /**\n   * Function to be executed before a test (in Mocha/Jasmine) starts.\n   */\n  // beforeTest: function (test, context) {\n  // },\n  /**\n   * Hook that gets executed _before_ a hook within the suite starts (e.g. runs before calling\n   * beforeEach in Mocha)\n   */\n  // beforeHook: function (test, context) {\n  // },\n  /**\n   * Hook that gets executed _after_ a hook within the suite starts (e.g. runs after calling\n   * afterEach in Mocha)\n   */\n  // afterHook: function (test, context, { error, result, duration, passed, retries }) {\n  // },\n  /**\n   * Function to be executed after a test (in Mocha/Jasmine only)\n   * @param {object}  test             test object\n   * @param {object}  context          scope object the test was executed with\n   * @param {Error}   result.error     error object in case the test fails, otherwise `undefined`\n   * @param {*}       result.result    return object of test function\n   * @param {number}  result.duration  duration of test\n   * @param {boolean} result.passed    true if test has passed, otherwise false\n   * @param {object}  result.retries   informations to spec related retries, e.g. `{ attempts: 0, limit: 0 }`\n   */\n  // afterTest: function(test, context, { error, result, duration, passed, retries }) {\n  // },\n\n  /**\n   * Hook that gets executed after the suite has ended\n   * @param {object} suite suite details\n   */\n  // afterSuite: function (suite) {\n  // },\n  /**\n   * Runs after a WebdriverIO command gets executed\n   * @param {string} commandName hook command name\n   * @param {Array} args arguments that command would receive\n   * @param {number} result 0 - command success, 1 - command error\n   * @param {object} error error object if any\n   */\n  // afterCommand: function (commandName, args, result, error) {\n  // },\n  /**\n   * Gets executed after all tests are done. You still have access to all global variables from\n   * the test.\n   * @param {number} result 0 - test pass, 1 - test fail\n   * @param {Array.<Object>} capabilities list of capabilities details\n   * @param {Array.<String>} specs List of spec file paths that ran\n   */\n  // after: function (result, capabilities, specs) {\n  // },\n  /**\n   * Gets executed right after terminating the webdriver session.\n   * @param {object} config wdio configuration object\n   * @param {Array.<Object>} capabilities list of capabilities details\n   * @param {Array.<String>} specs List of spec file paths that ran\n   */\n  // afterSession: function (config, capabilities, specs) {\n  // },\n  /**\n   * Gets executed after all workers got shut down and the process is about to exit. An error\n   * thrown in the onComplete hook will result in the test run failing.\n   * @param {object} exitCode 0 - success, 1 - fail\n   * @param {object} config wdio configuration object\n   * @param {Array.<Object>} capabilities list of capabilities details\n   * @param {<Object>} results object containing test results\n   */\n  // onComplete: function(exitCode, config, capabilities, results) {\n  // },\n  /**\n  * Gets executed when a refresh happens.\n  * @param {string} oldSessionId session ID of the old session\n  * @param {string} newSessionId session ID of the new session\n  */\n  // onReload: function(oldSessionId, newSessionId) {\n  // }\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","map":{"version":3,"names":["exports","config","runner","specs","exclude","maxInstances","capabilities","browserName","logLevel","bail","baseUrl","waitforTimeout","connectionRetryTimeout","connectionRetryCount","framework","reporters","mochaOpts","ui","timeout"],"sourceRoot":"C:\\Users\\Alex\\Desktop\\Work1\\","sources":["wdio.conf.js"],"sourcesContent":["exports.config = {\n    //\n    // ====================\n    // Runner Configuration\n    // ====================\n    // WebdriverIO supports running e2e tests as well as unit and component tests.\n    runner: 'local',\n    //\n    // ==================\n    // Specify Test Files\n    // ==================\n    // Define which test specs should run. The pattern is relative to the directory\n    // of the configuration file being run.\n    //\n    // The specs are defined as an array of spec files (optionally using wildcards\n    // that will be expanded). The test for each spec file will be run in a separate\n    // worker process. In order to have a group of spec files run in the same worker\n    // process simply enclose them in an array within the specs array.\n    //\n    // If you are calling `wdio` from an NPM script (see https://docs.npmjs.com/cli/run-script),\n    // then the current working directory is where your `package.json` resides, so `wdio`\n    // will be called from there.\n    //\n    specs: [\n        './test/specs/**/*.js'\n    ],\n    // Patterns to exclude.\n    exclude: [\n        // 'path/to/excluded/files'\n    ],\n    //\n    // ============\n    // Capabilities\n    // ============\n    // Define your capabilities here. WebdriverIO can run multiple capabilities at the same\n    // time. Depending on the number of capabilities, WebdriverIO launches several test\n    // sessions. Within your capabilities you can overwrite the spec and exclude options in\n    // order to group specific specs to a specific capability.\n    //\n    // First, you can define how many instances should be started at the same time. Let's\n    // say you have 3 different capabilities (Chrome, Firefox, and Safari) and you have\n    // set maxInstances to 1; wdio will spawn 3 processes. Therefore, if you have 10 spec\n    // files and you set maxInstances to 10, all spec files will get tested at the same time\n    // and 30 processes will get spawned. The property handles how many capabilities\n    // from the same test should run tests.\n    //\n    maxInstances: 10,\n    //\n    // If you have trouble getting all important capabilities together, check out the\n    // Sauce Labs platform configurator - a great tool to configure your capabilities:\n    // https://saucelabs.com/platform/platform-configurator\n    //\n    capabilities: [{\n        // capabilities for local browser web tests\n        browserName: 'chrome' // or \"firefox\", \"microsoftedge\", \"safari\"\n    }],\n\n    //\n    // ===================\n    // Test Configurations\n    // ===================\n    // Define all options that are relevant for the WebdriverIO instance here\n    //\n    // Level of logging verbosity: trace | debug | info | warn | error | silent\n    logLevel: 'info',\n    //\n    // Set specific log levels per logger\n    // loggers:\n    // - webdriver, webdriverio\n    // - @wdio/browserstack-service, @wdio/devtools-service, @wdio/sauce-service\n    // - @wdio/mocha-framework, @wdio/jasmine-framework\n    // - @wdio/local-runner\n    // - @wdio/sumologic-reporter\n    // - @wdio/cli, @wdio/config, @wdio/utils\n    // Level of logging verbosity: trace | debug | info | warn | error | silent\n    // logLevels: {\n    //     webdriver: 'info',\n    //     '@wdio/appium-service': 'info'\n    // },\n    //\n    // If you only want to run your tests until a specific amount of tests have failed use\n    // bail (default is 0 - don't bail, run all tests).\n    bail: 0,\n    //\n    // Set a base URL in order to shorten url command calls. If your `url` parameter starts\n    // with `/`, the base url gets prepended, not including the path portion of your baseUrl.\n    // If your `url` parameter starts without a scheme or `/` (like `some/path`), the base url\n    // gets prepended directly.\n    baseUrl: 'http://localhost',\n    //\n    // Default timeout for all waitFor* commands.\n    waitforTimeout: 10000,\n    //\n    // Default timeout in milliseconds for request\n    // if browser driver or grid doesn't send response\n    connectionRetryTimeout: 120000,\n    //\n    // Default request retries count\n    connectionRetryCount: 3,\n    //\n    // Test runner services\n    // Services take over a specific job you don't want to take care of. They enhance\n    // your test setup with almost no effort. Unlike plugins, they don't add new\n    // commands. Instead, they hook themselves up into the test process.\n    // services: [],\n    //\n    // Framework you want to run your specs with.\n    // The following are supported: Mocha, Jasmine, and Cucumber\n    // see also: https://webdriver.io/docs/frameworks\n    //\n    // Make sure you have the wdio adapter package for the specific framework installed\n    // before running any tests.\n    framework: 'mocha',\n    //\n    // The number of times to retry the entire specfile when it fails as a whole\n    // specFileRetries: 1,\n    //\n    // Delay in seconds between the spec file retry attempts\n    // specFileRetriesDelay: 0,\n    //\n    // Whether or not retried spec files should be retried immediately or deferred to the end of the queue\n    // specFileRetriesDeferred: false,\n    //\n    // Test reporter for stdout.\n    // The only one supported by default is 'dot'\n    // see also: https://webdriver.io/docs/dot-reporter\n    reporters: ['spec'],\n\n    \n    //\n    // Options to be passed to Mocha.\n    // See the full list at http://mochajs.org/\n    mochaOpts: {\n        ui: 'bdd',\n        timeout: 60000\n    },\n    //\n    // =====\n    // Hooks\n    // =====\n    // WebdriverIO provides several hooks you can use to interfere with the test process in order to enhance\n    // it and to build services around it. You can either apply a single function or an array of\n    // methods to it. If one of them returns with a promise, WebdriverIO will wait until that promise got\n    // resolved to continue.\n    /**\n     * Gets executed once before all workers get launched.\n     * @param {object} config wdio configuration object\n     * @param {Array.<Object>} capabilities list of capabilities details\n     */\n    // onPrepare: function (config, capabilities) {\n    // },\n    /**\n     * Gets executed before a worker process is spawned and can be used to initialise specific service\n     * for that worker as well as modify runtime environments in an async fashion.\n     * @param  {string} cid      capability id (e.g 0-0)\n     * @param  {object} caps     object containing capabilities for session that will be spawn in the worker\n     * @param  {object} specs    specs to be run in the worker process\n     * @param  {object} args     object that will be merged with the main configuration once worker is initialized\n     * @param  {object} execArgv list of string arguments passed to the worker process\n     */\n    // onWorkerStart: function (cid, caps, specs, args, execArgv) {\n    // },\n    /**\n     * Gets executed just after a worker process has exited.\n     * @param  {string} cid      capability id (e.g 0-0)\n     * @param  {number} exitCode 0 - success, 1 - fail\n     * @param  {object} specs    specs to be run in the worker process\n     * @param  {number} retries  number of retries used\n     */\n    // onWorkerEnd: function (cid, exitCode, specs, retries) {\n    // },\n    /**\n     * Gets executed just before initialising the webdriver session and test framework. It allows you\n     * to manipulate configurations depending on the capability or spec.\n     * @param {object} config wdio configuration object\n     * @param {Array.<Object>} capabilities list of capabilities details\n     * @param {Array.<String>} specs List of spec file paths that are to be run\n     * @param {string} cid worker id (e.g. 0-0)\n     */\n    // beforeSession: function (config, capabilities, specs, cid) {\n    // },\n    /**\n     * Gets executed before test execution begins. At this point you can access to all global\n     * variables like `browser`. It is the perfect place to define custom commands.\n     * @param {Array.<Object>} capabilities list of capabilities details\n     * @param {Array.<String>} specs        List of spec file paths that are to be run\n     * @param {object}         browser      instance of created browser/device session\n     */\n    // before: function (capabilities, specs) {\n    // },\n    /**\n     * Runs before a WebdriverIO command gets executed.\n     * @param {string} commandName hook command name\n     * @param {Array} args arguments that command would receive\n     */\n    // beforeCommand: function (commandName, args) {\n    // },\n    /**\n     * Hook that gets executed before the suite starts\n     * @param {object} suite suite details\n     */\n    // beforeSuite: function (suite) {\n    // },\n    /**\n     * Function to be executed before a test (in Mocha/Jasmine) starts.\n     */\n    // beforeTest: function (test, context) {\n    // },\n    /**\n     * Hook that gets executed _before_ a hook within the suite starts (e.g. runs before calling\n     * beforeEach in Mocha)\n     */\n    // beforeHook: function (test, context) {\n    // },\n    /**\n     * Hook that gets executed _after_ a hook within the suite starts (e.g. runs after calling\n     * afterEach in Mocha)\n     */\n    // afterHook: function (test, context, { error, result, duration, passed, retries }) {\n    // },\n    /**\n     * Function to be executed after a test (in Mocha/Jasmine only)\n     * @param {object}  test             test object\n     * @param {object}  context          scope object the test was executed with\n     * @param {Error}   result.error     error object in case the test fails, otherwise `undefined`\n     * @param {*}       result.result    return object of test function\n     * @param {number}  result.duration  duration of test\n     * @param {boolean} result.passed    true if test has passed, otherwise false\n     * @param {object}  result.retries   informations to spec related retries, e.g. `{ attempts: 0, limit: 0 }`\n     */\n    // afterTest: function(test, context, { error, result, duration, passed, retries }) {\n    // },\n\n\n    /**\n     * Hook that gets executed after the suite has ended\n     * @param {object} suite suite details\n     */\n    // afterSuite: function (suite) {\n    // },\n    /**\n     * Runs after a WebdriverIO command gets executed\n     * @param {string} commandName hook command name\n     * @param {Array} args arguments that command would receive\n     * @param {number} result 0 - command success, 1 - command error\n     * @param {object} error error object if any\n     */\n    // afterCommand: function (commandName, args, result, error) {\n    // },\n    /**\n     * Gets executed after all tests are done. You still have access to all global variables from\n     * the test.\n     * @param {number} result 0 - test pass, 1 - test fail\n     * @param {Array.<Object>} capabilities list of capabilities details\n     * @param {Array.<String>} specs List of spec file paths that ran\n     */\n    // after: function (result, capabilities, specs) {\n    // },\n    /**\n     * Gets executed right after terminating the webdriver session.\n     * @param {object} config wdio configuration object\n     * @param {Array.<Object>} capabilities list of capabilities details\n     * @param {Array.<String>} specs List of spec file paths that ran\n     */\n    // afterSession: function (config, capabilities, specs) {\n    // },\n    /**\n     * Gets executed after all workers got shut down and the process is about to exit. An error\n     * thrown in the onComplete hook will result in the test run failing.\n     * @param {object} exitCode 0 - success, 1 - fail\n     * @param {object} config wdio configuration object\n     * @param {Array.<Object>} capabilities list of capabilities details\n     * @param {<Object>} results object containing test results\n     */\n    // onComplete: function(exitCode, config, capabilities, results) {\n    // },\n    /**\n    * Gets executed when a refresh happens.\n    * @param {string} oldSessionId session ID of the old session\n    * @param {string} newSessionId session ID of the new session\n    */\n    // onReload: function(oldSessionId, newSessionId) {\n    // }\n}\n"],"mappings":"AAAAA,OAAO,CAACC,MAAM,GAAG;EACb;EACA;EACA;EACA;EACA;EACAC,MAAM,EAAE,OAAO;EACf;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACAC,KAAK,EAAE,CACH,sBAAsB,CACzB;EACD;EACAC,OAAO,EAAE;IACL;EAAA,CACH;EACD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACAC,YAAY,EAAE,EAAE;EAChB;EACA;EACA;EACA;EACA;EACAC,YAAY,EAAE,CAAC;IACX;IACAC,WAAW,EAAE,QAAQ,CAAC;EAC1B,CAAC,CAAC;;EAEF;EACA;EACA;EACA;EACA;EACA;EACA;EACAC,QAAQ,EAAE,MAAM;EAChB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACAC,IAAI,EAAE,CAAC;EACP;EACA;EACA;EACA;EACA;EACAC,OAAO,EAAE,kBAAkB;EAC3B;EACA;EACAC,cAAc,EAAE,KAAK;EACrB;EACA;EACA;EACAC,sBAAsB,EAAE,MAAM;EAC9B;EACA;EACAC,oBAAoB,EAAE,CAAC;EACvB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACAC,SAAS,EAAE,OAAO;EAClB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACAC,SAAS,EAAE,CAAC,MAAM,CAAC;EAGnB;EACA;EACA;EACAC,SAAS,EAAE;IACPC,EAAE,EAAE,KAAK;IACTC,OAAO,EAAE;EACb;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACJ;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI;EACA;;EAGA;AACJ;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;EACI;EACA;AACJ,CAAC"}},"mtime":1693336488935},"{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\Alex\\\\Desktop\\\\Work1\\\\test\\\\specs\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\Alex\\\\Desktop\\\\Work1\",\"filename\":\"C:\\\\Users\\\\Alex\\\\Desktop\\\\Work1\\\\test\\\\specs\\\\basic.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"C:\\\\Users\\\\Alex\\\\Desktop\\\\Work1\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.22.11:test":{"value":{"code":"it('Homework1', async () => {\n  await browser.url('https://v5.webdriver.io/docs/api.html'); // ������� �� ��������\n  await browser.pause(2000);\n\n  //await apiButton.click()     // ������� �� ������ Api\n  //await browser.pause(2000);\n\n  //const currentUrl = await (browser.getUrl());\n  //console.log('Current Url is ' + await currentUrl);    // ����� � ������� https://v5.webdriver.io/docs/api.html\n\n  //const header = await $('.postHeaderTitle');\n  //console.log('Text is ' + await header.getText());    // ����� � ������� API Docs\n\n  const JSONWire = await $('//*[text()=\"JSONWire protocol\"]');\n  //getAttribute\n  const newwind = await JSONWire.getAttribute('href');\n  //newWindow\n  browser.newWindow(newwind);\n  await browser.pause(1000);\n  //isDisplayed\n  const WikiButton = await $('[href=\"/SeleniumHQ/selenium/wiki\"]');\n  isDisplayed = await WikiButton.isDisplayed();\n  console.log('Is Displayed?: ' + (await isDisplayed));\n  await browser.pause(1000);\n  //switchWindow\n  browser.switchWindow('https://v5.webdriver.io/docs/api.html'); //��� ����� �����\n  //waitUntil\n  browser.waitUntil(() => {\n    return $('.postHeaderTitle').getText();\n  }, 2000, 'blog is not diaplayed');\n  //saveScreenshot\n  const elem = $('.postHeaderTitle');\n  elem.saveScreenshot('elemScreenshot.png');\n  await browser.pause(1000);\n  //isDisplayed\n  const Twitter = await $('[href=\"https://twitter.com/webdriverio\"]');\n  isDisplayed = await Twitter.isDisplayed();\n  console.log('Twittet Is Displayed?: ' + (await isDisplayed));\n  await browser.pause(1000);\n  //isDisplayedInViewport\n  let isDisplayedInViewport = await $('[href=\"https://twitter.com/webdriverio\"]').isDisplayedInViewport();\n  console.log('Twittet is displayed in ViewPort?: ' + (await isDisplayedInViewport));\n  await browser.pause(1000);\n  //scrollIntroView()\n  const scroll = await $('#footer [href=\"https://twitter.com/webdriverio\"]');\n  await browser.pause(1000);\n  await scroll.scrollIntoView();\n  //isDisplayed#1\n  const Twitter1 = await $('[href=\"https://twitter.com/webdriverio\"]');\n  isDisplayed1 = await Twitter.isDisplayed();\n  console.log('Twittet Is Displayed?: ' + (await isDisplayed1));\n  await browser.pause(1000);\n  //isDisplayedInViewport#1\n  let isDisplayedInViewport1 = await $('[href=\"https://twitter.com/webdriverio\"]').isDisplayedInViewport();\n  console.log('Twittet is displayed in ViewPort?: ' + (await isDisplayedInViewport1));\n  await browser.pause(1000);\n  const blog = $('[href=\"/blog/\"]');\n  console.log('blog isFocused() before click:' + input.isFocused());\n  await browser.pause(1000);\n  await blog.click();\n  console.log('blog isFocused() after click:' + input.isFocused());\n  await browser.pause(5000);\n\n  //const elem = $('#search_ nput_react');\n  //  elem.setValue('test is')      // ����� � ����� ���� 'test is'\n  //  await browser.pause(2000);\n\n  // let input = $('#search_input_react');\n  //   input.addValue(' DONE!')       // ���������� � ����� ���� 'DONE!'\n  //  await browser.pause(5000);     // ����� � ����� �� 5�.\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","map":{"version":3,"names":["it","browser","url","pause","JSONWire","$","newwind","getAttribute","newWindow","WikiButton","isDisplayed","console","log","switchWindow","waitUntil","getText","elem","saveScreenshot","Twitter","isDisplayedInViewport","scroll","scrollIntoView","Twitter1","isDisplayed1","isDisplayedInViewport1","blog","input","isFocused","click"],"sourceRoot":"C:\\Users\\Alex\\Desktop\\Work1\\test\\specs\\","sources":["basic.js"],"sourcesContent":["it('Homework1', async () => {\r\n    await browser.url('https://v5.webdriver.io/docs/api.html');     // ������� �� ��������\r\n    await browser.pause(2000);\r\n   \r\n    //await apiButton.click()     // ������� �� ������ Api\r\n    //await browser.pause(2000);\r\n\r\n    //const currentUrl = await (browser.getUrl());\r\n    //console.log('Current Url is ' + await currentUrl);    // ����� � ������� https://v5.webdriver.io/docs/api.html\r\n\r\n\r\n    //const header = await $('.postHeaderTitle');\r\n    //console.log('Text is ' + await header.getText());    // ����� � ������� API Docs\r\n\r\n    const JSONWire = await $('//*[text()=\"JSONWire protocol\"]');\r\n    //getAttribute\r\n    const newwind = await JSONWire.getAttribute('href');\r\n    //newWindow\r\n    browser.newWindow(newwind);\r\n    await browser.pause(1000);\r\n    //isDisplayed\r\n    const WikiButton = await $('[href=\"/SeleniumHQ/selenium/wiki\"]');\r\n    isDisplayed = await WikiButton.isDisplayed();\r\n    console.log('Is Displayed?: ' + await isDisplayed);\r\n    await browser.pause(1000);\r\n    //switchWindow\r\n    browser.switchWindow('https://v5.webdriver.io/docs/api.html');          //��� ����� �����\r\n    //waitUntil\r\n    browser.waitUntil(() => {\r\n    return $('.postHeaderTitle').getText();\r\n    }, 2000, 'blog is not diaplayed');\r\n    //saveScreenshot\r\n    const elem = $('.postHeaderTitle');\r\n    elem.saveScreenshot('elemScreenshot.png')\r\n    await browser.pause(1000);\r\n    //isDisplayed\r\n    const Twitter = await $('[href=\"https://twitter.com/webdriverio\"]');\r\n    isDisplayed = await Twitter.isDisplayed();\r\n    console.log('Twittet Is Displayed?: ' + await isDisplayed);\r\n    await browser.pause(1000);\r\n    //isDisplayedInViewport\r\n    let isDisplayedInViewport = await $('[href=\"https://twitter.com/webdriverio\"]').isDisplayedInViewport();\r\n    console.log('Twittet is displayed in ViewPort?: ' + await isDisplayedInViewport);\r\n    await browser.pause(1000);\r\n    //scrollIntroView()\r\n    const scroll = await $('#footer [href=\"https://twitter.com/webdriverio\"]');\r\n    await browser.pause(1000);\r\n    await scroll.scrollIntoView();\r\n    //isDisplayed#1\r\n    const Twitter1 = await $('[href=\"https://twitter.com/webdriverio\"]');\r\n    isDisplayed1 = await Twitter.isDisplayed();\r\n    console.log('Twittet Is Displayed?: ' + await isDisplayed1);\r\n    await browser.pause(1000);\r\n    //isDisplayedInViewport#1\r\n    let isDisplayedInViewport1 = await $('[href=\"https://twitter.com/webdriverio\"]').isDisplayedInViewport();\r\n    console.log('Twittet is displayed in ViewPort?: ' + await isDisplayedInViewport1);\r\n    await browser.pause(1000);\r\n    const blog = $('[href=\"/blog/\"]');\r\n    console.log('blog isFocused() before click:' + input.isFocused());\r\n    await browser.pause(1000);\r\n    await blog.click();\r\n    console.log('blog isFocused() after click:' + input.isFocused());\r\n    await browser.pause(5000);\r\n\r\n    //const elem = $('#search_ nput_react');\r\n    //  elem.setValue('test is')      // ����� � ����� ���� 'test is'\r\n    //  await browser.pause(2000);\r\n\r\n\r\n\r\n\r\n  \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n   // let input = $('#search_input_react');\r\n //   input.addValue(' DONE!')       // ���������� � ����� ���� 'DONE!'\r\n //  await browser.pause(5000);     // ����� � ����� �� 5�.\r\n})"],"mappings":"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"}},"mtime":1698090690733},"{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\Alex\\\\desktop\\\\work1\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\Alex\\\\desktop\\\\work1\",\"filename\":\"C:\\\\Users\\\\Alex\\\\desktop\\\\work1\\\\wdio.conf.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"C:\\\\Users\\\\Alex\\\\desktop\\\\work1\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.22.11:test":{"value":{"code":"exports.config = {\n  //\n  // ====================\n  // Runner Configuration\n  // ====================\n  // WebdriverIO supports running e2e tests as well as unit and component tests.\n  runner: 'local',\n  //\n  // ==================\n  // Specify Test Files\n  // ==================\n  // Define which test specs should run. The pattern is relative to the directory\n  // of the configuration file being run.\n  //\n  // The specs are defined as an array of spec files (optionally using wildcards\n  // that will be expanded). The test for each spec file will be run in a separate\n  // worker process. In order to have a group of spec files run in the same worker\n  // process simply enclose them in an array within the specs array.\n  //\n  // If you are calling `wdio` from an NPM script (see https://docs.npmjs.com/cli/run-script),\n  // then the current working directory is where your `package.json` resides, so `wdio`\n  // will be called from there.\n  //\n  specs: ['./test/specs/**/*.js'],\n  // Patterns to exclude.\n  exclude: [\n    // 'path/to/excluded/files'\n  ],\n  //\n  // ============\n  // Capabilities\n  // ============\n  // Define your capabilities here. WebdriverIO can run multiple capabilities at the same\n  // time. Depending on the number of capabilities, WebdriverIO launches several test\n  // sessions. Within your capabilities you can overwrite the spec and exclude options in\n  // order to group specific specs to a specific capability.\n  //\n  // First, you can define how many instances should be started at the same time. Let's\n  // say you have 3 different capabilities (Chrome, Firefox, and Safari) and you have\n  // set maxInstances to 1; wdio will spawn 3 processes. Therefore, if you have 10 spec\n  // files and you set maxInstances to 10, all spec files will get tested at the same time\n  // and 30 processes will get spawned. The property handles how many capabilities\n  // from the same test should run tests.\n  //\n  maxInstances: 10,\n  //\n  // If you have trouble getting all important capabilities together, check out the\n  // Sauce Labs platform configurator - a great tool to configure your capabilities:\n  // https://saucelabs.com/platform/platform-configurator\n  //\n  capabilities: [{\n    // capabilities for local browser web tests\n    browserName: 'chrome' // or \"firefox\", \"microsoftedge\", \"safari\"\n  }],\n\n  //\n  // ===================\n  // Test Configurations\n  // ===================\n  // Define all options that are relevant for the WebdriverIO instance here\n  //\n  // Level of logging verbosity: trace | debug | info | warn | error | silent\n  logLevel: 'info',\n  //\n  // Set specific log levels per logger\n  // loggers:\n  // - webdriver, webdriverio\n  // - @wdio/browserstack-service, @wdio/devtools-service, @wdio/sauce-service\n  // - @wdio/mocha-framework, @wdio/jasmine-framework\n  // - @wdio/local-runner\n  // - @wdio/sumologic-reporter\n  // - @wdio/cli, @wdio/config, @wdio/utils\n  // Level of logging verbosity: trace | debug | info | warn | error | silent\n  // logLevels: {\n  //     webdriver: 'info',\n  //     '@wdio/appium-service': 'info'\n  // },\n  //\n  // If you only want to run your tests until a specific amount of tests have failed use\n  // bail (default is 0 - don't bail, run all tests).\n  bail: 0,\n  //\n  // Set a base URL in order to shorten url command calls. If your `url` parameter starts\n  // with `/`, the base url gets prepended, not including the path portion of your baseUrl.\n  // If your `url` parameter starts without a scheme or `/` (like `some/path`), the base url\n  // gets prepended directly.\n  baseUrl: 'http://localhost',\n  //\n  // Default timeout for all waitFor* commands.\n  waitforTimeout: 10000,\n  //\n  // Default timeout in milliseconds for request\n  // if browser driver or grid doesn't send response\n  connectionRetryTimeout: 120000,\n  //\n  // Default request retries count\n  connectionRetryCount: 3,\n  //\n  // Test runner services\n  // Services take over a specific job you don't want to take care of. They enhance\n  // your test setup with almost no effort. Unlike plugins, they don't add new\n  // commands. Instead, they hook themselves up into the test process.\n  // services: [],\n  //\n  // Framework you want to run your specs with.\n  // The following are supported: Mocha, Jasmine, and Cucumber\n  // see also: https://webdriver.io/docs/frameworks\n  //\n  // Make sure you have the wdio adapter package for the specific framework installed\n  // before running any tests.\n  framework: 'mocha',\n  //\n  // The number of times to retry the entire specfile when it fails as a whole\n  // specFileRetries: 1,\n  //\n  // Delay in seconds between the spec file retry attempts\n  // specFileRetriesDelay: 0,\n  //\n  // Whether or not retried spec files should be retried immediately or deferred to the end of the queue\n  // specFileRetriesDeferred: false,\n  //\n  // Test reporter for stdout.\n  // The only one supported by default is 'dot'\n  // see also: https://webdriver.io/docs/dot-reporter\n  reporters: ['spec'],\n  //\n  // Options to be passed to Mocha.\n  // See the full list at http://mochajs.org/\n  mochaOpts: {\n    ui: 'bdd',\n    timeout: 60000\n  }\n  //\n  // =====\n  // Hooks\n  // =====\n  // WebdriverIO provides several hooks you can use to interfere with the test process in order to enhance\n  // it and to build services around it. You can either apply a single function or an array of\n  // methods to it. If one of them returns with a promise, WebdriverIO will wait until that promise got\n  // resolved to continue.\n  /**\n   * Gets executed once before all workers get launched.\n   * @param {object} config wdio configuration object\n   * @param {Array.<Object>} capabilities list of capabilities details\n   */\n  // onPrepare: function (config, capabilities) {\n  // },\n  /**\n   * Gets executed before a worker process is spawned and can be used to initialise specific service\n   * for that worker as well as modify runtime environments in an async fashion.\n   * @param  {string} cid      capability id (e.g 0-0)\n   * @param  {object} caps     object containing capabilities for session that will be spawn in the worker\n   * @param  {object} specs    specs to be run in the worker process\n   * @param  {object} args     object that will be merged with the main configuration once worker is initialized\n   * @param  {object} execArgv list of string arguments passed to the worker process\n   */\n  // onWorkerStart: function (cid, caps, specs, args, execArgv) {\n  // },\n  /**\n   * Gets executed just after a worker process has exited.\n   * @param  {string} cid      capability id (e.g 0-0)\n   * @param  {number} exitCode 0 - success, 1 - fail\n   * @param  {object} specs    specs to be run in the worker process\n   * @param  {number} retries  number of retries used\n   */\n  // onWorkerEnd: function (cid, exitCode, specs, retries) {\n  // },\n  /**\n   * Gets executed just before initialising the webdriver session and test framework. It allows you\n   * to manipulate configurations depending on the capability or spec.\n   * @param {object} config wdio configuration object\n   * @param {Array.<Object>} capabilities list of capabilities details\n   * @param {Array.<String>} specs List of spec file paths that are to be run\n   * @param {string} cid worker id (e.g. 0-0)\n   */\n  // beforeSession: function (config, capabilities, specs, cid) {\n  // },\n  /**\n   * Gets executed before test execution begins. At this point you can access to all global\n   * variables like `browser`. It is the perfect place to define custom commands.\n   * @param {Array.<Object>} capabilities list of capabilities details\n   * @param {Array.<String>} specs        List of spec file paths that are to be run\n   * @param {object}         browser      instance of created browser/device session\n   */\n  // before: function (capabilities, specs) {\n  // },\n  /**\n   * Runs before a WebdriverIO command gets executed.\n   * @param {string} commandName hook command name\n   * @param {Array} args arguments that command would receive\n   */\n  // beforeCommand: function (commandName, args) {\n  // },\n  /**\n   * Hook that gets executed before the suite starts\n   * @param {object} suite suite details\n   */\n  // beforeSuite: function (suite) {\n  // },\n  /**\n   * Function to be executed before a test (in Mocha/Jasmine) starts.\n   */\n  // beforeTest: function (test, context) {\n  // },\n  /**\n   * Hook that gets executed _before_ a hook within the suite starts (e.g. runs before calling\n   * beforeEach in Mocha)\n   */\n  // beforeHook: function (test, context) {\n  // },\n  /**\n   * Hook that gets executed _after_ a hook within the suite starts (e.g. runs after calling\n   * afterEach in Mocha)\n   */\n  // afterHook: function (test, context, { error, result, duration, passed, retries }) {\n  // },\n  /**\n   * Function to be executed after a test (in Mocha/Jasmine only)\n   * @param {object}  test             test object\n   * @param {object}  context          scope object the test was executed with\n   * @param {Error}   result.error     error object in case the test fails, otherwise `undefined`\n   * @param {*}       result.result    return object of test function\n   * @param {number}  result.duration  duration of test\n   * @param {boolean} result.passed    true if test has passed, otherwise false\n   * @param {object}  result.retries   informations to spec related retries, e.g. `{ attempts: 0, limit: 0 }`\n   */\n  // afterTest: function(test, context, { error, result, duration, passed, retries }) {\n  // },\n\n  /**\n   * Hook that gets executed after the suite has ended\n   * @param {object} suite suite details\n   */\n  // afterSuite: function (suite) {\n  // },\n  /**\n   * Runs after a WebdriverIO command gets executed\n   * @param {string} commandName hook command name\n   * @param {Array} args arguments that command would receive\n   * @param {number} result 0 - command success, 1 - command error\n   * @param {object} error error object if any\n   */\n  // afterCommand: function (commandName, args, result, error) {\n  // },\n  /**\n   * Gets executed after all tests are done. You still have access to all global variables from\n   * the test.\n   * @param {number} result 0 - test pass, 1 - test fail\n   * @param {Array.<Object>} capabilities list of capabilities details\n   * @param {Array.<String>} specs List of spec file paths that ran\n   */\n  // after: function (result, capabilities, specs) {\n  // },\n  /**\n   * Gets executed right after terminating the webdriver session.\n   * @param {object} config wdio configuration object\n   * @param {Array.<Object>} capabilities list of capabilities details\n   * @param {Array.<String>} specs List of spec file paths that ran\n   */\n  // afterSession: function (config, capabilities, specs) {\n  // },\n  /**\n   * Gets executed after all workers got shut down and the process is about to exit. An error\n   * thrown in the onComplete hook will result in the test run failing.\n   * @param {object} exitCode 0 - success, 1 - fail\n   * @param {object} config wdio configuration object\n   * @param {Array.<Object>} capabilities list of capabilities details\n   * @param {<Object>} results object containing test results\n   */\n  // onComplete: function(exitCode, config, capabilities, results) {\n  // },\n  /**\n  * Gets executed when a refresh happens.\n  * @param {string} oldSessionId session ID of the old session\n  * @param {string} newSessionId session ID of the new session\n  */\n  // onReload: function(oldSessionId, newSessionId) {\n  // }\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","map":{"version":3,"names":["exports","config","runner","specs","exclude","maxInstances","capabilities","browserName","logLevel","bail","baseUrl","waitforTimeout","connectionRetryTimeout","connectionRetryCount","framework","reporters","mochaOpts","ui","timeout"],"sourceRoot":"C:\\Users\\Alex\\desktop\\work1\\","sources":["wdio.conf.js"],"sourcesContent":["exports.config = {\n    //\n    // ====================\n    // Runner Configuration\n    // ====================\n    // WebdriverIO supports running e2e tests as well as unit and component tests.\n    runner: 'local',\n    //\n    // ==================\n    // Specify Test Files\n    // ==================\n    // Define which test specs should run. The pattern is relative to the directory\n    // of the configuration file being run.\n    //\n    // The specs are defined as an array of spec files (optionally using wildcards\n    // that will be expanded). The test for each spec file will be run in a separate\n    // worker process. In order to have a group of spec files run in the same worker\n    // process simply enclose them in an array within the specs array.\n    //\n    // If you are calling `wdio` from an NPM script (see https://docs.npmjs.com/cli/run-script),\n    // then the current working directory is where your `package.json` resides, so `wdio`\n    // will be called from there.\n    //\n    specs: [\n        './test/specs/**/*.js'\n    ],\n    // Patterns to exclude.\n    exclude: [\n        // 'path/to/excluded/files'\n    ],\n    //\n    // ============\n    // Capabilities\n    // ============\n    // Define your capabilities here. WebdriverIO can run multiple capabilities at the same\n    // time. Depending on the number of capabilities, WebdriverIO launches several test\n    // sessions. Within your capabilities you can overwrite the spec and exclude options in\n    // order to group specific specs to a specific capability.\n    //\n    // First, you can define how many instances should be started at the same time. Let's\n    // say you have 3 different capabilities (Chrome, Firefox, and Safari) and you have\n    // set maxInstances to 1; wdio will spawn 3 processes. Therefore, if you have 10 spec\n    // files and you set maxInstances to 10, all spec files will get tested at the same time\n    // and 30 processes will get spawned. The property handles how many capabilities\n    // from the same test should run tests.\n    //\n    maxInstances: 10,\n    //\n    // If you have trouble getting all important capabilities together, check out the\n    // Sauce Labs platform configurator - a great tool to configure your capabilities:\n    // https://saucelabs.com/platform/platform-configurator\n    //\n    capabilities: [{\n        // capabilities for local browser web tests\n        browserName: 'chrome' // or \"firefox\", \"microsoftedge\", \"safari\"\n    }],\n\n    //\n    // ===================\n    // Test Configurations\n    // ===================\n    // Define all options that are relevant for the WebdriverIO instance here\n    //\n    // Level of logging verbosity: trace | debug | info | warn | error | silent\n    logLevel: 'info',\n    //\n    // Set specific log levels per logger\n    // loggers:\n    // - webdriver, webdriverio\n    // - @wdio/browserstack-service, @wdio/devtools-service, @wdio/sauce-service\n    // - @wdio/mocha-framework, @wdio/jasmine-framework\n    // - @wdio/local-runner\n    // - @wdio/sumologic-reporter\n    // - @wdio/cli, @wdio/config, @wdio/utils\n    // Level of logging verbosity: trace | debug | info | warn | error | silent\n    // logLevels: {\n    //     webdriver: 'info',\n    //     '@wdio/appium-service': 'info'\n    // },\n    //\n    // If you only want to run your tests until a specific amount of tests have failed use\n    // bail (default is 0 - don't bail, run all tests).\n    bail: 0,\n    //\n    // Set a base URL in order to shorten url command calls. If your `url` parameter starts\n    // with `/`, the base url gets prepended, not including the path portion of your baseUrl.\n    // If your `url` parameter starts without a scheme or `/` (like `some/path`), the base url\n    // gets prepended directly.\n    baseUrl: 'http://localhost',\n    //\n    // Default timeout for all waitFor* commands.\n    waitforTimeout: 10000,\n    //\n    // Default timeout in milliseconds for request\n    // if browser driver or grid doesn't send response\n    connectionRetryTimeout: 120000,\n    //\n    // Default request retries count\n    connectionRetryCount: 3,\n    //\n    // Test runner services\n    // Services take over a specific job you don't want to take care of. They enhance\n    // your test setup with almost no effort. Unlike plugins, they don't add new\n    // commands. Instead, they hook themselves up into the test process.\n    // services: [],\n    //\n    // Framework you want to run your specs with.\n    // The following are supported: Mocha, Jasmine, and Cucumber\n    // see also: https://webdriver.io/docs/frameworks\n    //\n    // Make sure you have the wdio adapter package for the specific framework installed\n    // before running any tests.\n    framework: 'mocha',\n    //\n    // The number of times to retry the entire specfile when it fails as a whole\n    // specFileRetries: 1,\n    //\n    // Delay in seconds between the spec file retry attempts\n    // specFileRetriesDelay: 0,\n    //\n    // Whether or not retried spec files should be retried immediately or deferred to the end of the queue\n    // specFileRetriesDeferred: false,\n    //\n    // Test reporter for stdout.\n    // The only one supported by default is 'dot'\n    // see also: https://webdriver.io/docs/dot-reporter\n    reporters: ['spec'],\n\n    \n    //\n    // Options to be passed to Mocha.\n    // See the full list at http://mochajs.org/\n    mochaOpts: {\n        ui: 'bdd',\n        timeout: 60000\n    },\n    //\n    // =====\n    // Hooks\n    // =====\n    // WebdriverIO provides several hooks you can use to interfere with the test process in order to enhance\n    // it and to build services around it. You can either apply a single function or an array of\n    // methods to it. If one of them returns with a promise, WebdriverIO will wait until that promise got\n    // resolved to continue.\n    /**\n     * Gets executed once before all workers get launched.\n     * @param {object} config wdio configuration object\n     * @param {Array.<Object>} capabilities list of capabilities details\n     */\n    // onPrepare: function (config, capabilities) {\n    // },\n    /**\n     * Gets executed before a worker process is spawned and can be used to initialise specific service\n     * for that worker as well as modify runtime environments in an async fashion.\n     * @param  {string} cid      capability id (e.g 0-0)\n     * @param  {object} caps     object containing capabilities for session that will be spawn in the worker\n     * @param  {object} specs    specs to be run in the worker process\n     * @param  {object} args     object that will be merged with the main configuration once worker is initialized\n     * @param  {object} execArgv list of string arguments passed to the worker process\n     */\n    // onWorkerStart: function (cid, caps, specs, args, execArgv) {\n    // },\n    /**\n     * Gets executed just after a worker process has exited.\n     * @param  {string} cid      capability id (e.g 0-0)\n     * @param  {number} exitCode 0 - success, 1 - fail\n     * @param  {object} specs    specs to be run in the worker process\n     * @param  {number} retries  number of retries used\n     */\n    // onWorkerEnd: function (cid, exitCode, specs, retries) {\n    // },\n    /**\n     * Gets executed just before initialising the webdriver session and test framework. It allows you\n     * to manipulate configurations depending on the capability or spec.\n     * @param {object} config wdio configuration object\n     * @param {Array.<Object>} capabilities list of capabilities details\n     * @param {Array.<String>} specs List of spec file paths that are to be run\n     * @param {string} cid worker id (e.g. 0-0)\n     */\n    // beforeSession: function (config, capabilities, specs, cid) {\n    // },\n    /**\n     * Gets executed before test execution begins. At this point you can access to all global\n     * variables like `browser`. It is the perfect place to define custom commands.\n     * @param {Array.<Object>} capabilities list of capabilities details\n     * @param {Array.<String>} specs        List of spec file paths that are to be run\n     * @param {object}         browser      instance of created browser/device session\n     */\n    // before: function (capabilities, specs) {\n    // },\n    /**\n     * Runs before a WebdriverIO command gets executed.\n     * @param {string} commandName hook command name\n     * @param {Array} args arguments that command would receive\n     */\n    // beforeCommand: function (commandName, args) {\n    // },\n    /**\n     * Hook that gets executed before the suite starts\n     * @param {object} suite suite details\n     */\n    // beforeSuite: function (suite) {\n    // },\n    /**\n     * Function to be executed before a test (in Mocha/Jasmine) starts.\n     */\n    // beforeTest: function (test, context) {\n    // },\n    /**\n     * Hook that gets executed _before_ a hook within the suite starts (e.g. runs before calling\n     * beforeEach in Mocha)\n     */\n    // beforeHook: function (test, context) {\n    // },\n    /**\n     * Hook that gets executed _after_ a hook within the suite starts (e.g. runs after calling\n     * afterEach in Mocha)\n     */\n    // afterHook: function (test, context, { error, result, duration, passed, retries }) {\n    // },\n    /**\n     * Function to be executed after a test (in Mocha/Jasmine only)\n     * @param {object}  test             test object\n     * @param {object}  context          scope object the test was executed with\n     * @param {Error}   result.error     error object in case the test fails, otherwise `undefined`\n     * @param {*}       result.result    return object of test function\n     * @param {number}  result.duration  duration of test\n     * @param {boolean} result.passed    true if test has passed, otherwise false\n     * @param {object}  result.retries   informations to spec related retries, e.g. `{ attempts: 0, limit: 0 }`\n     */\n    // afterTest: function(test, context, { error, result, duration, passed, retries }) {\n    // },\n\n\n    /**\n     * Hook that gets executed after the suite has ended\n     * @param {object} suite suite details\n     */\n    // afterSuite: function (suite) {\n    // },\n    /**\n     * Runs after a WebdriverIO command gets executed\n     * @param {string} commandName hook command name\n     * @param {Array} args arguments that command would receive\n     * @param {number} result 0 - command success, 1 - command error\n     * @param {object} error error object if any\n     */\n    // afterCommand: function (commandName, args, result, error) {\n    // },\n    /**\n     * Gets executed after all tests are done. You still have access to all global variables from\n     * the test.\n     * @param {number} result 0 - test pass, 1 - test fail\n     * @param {Array.<Object>} capabilities list of capabilities details\n     * @param {Array.<String>} specs List of spec file paths that ran\n     */\n    // after: function (result, capabilities, specs) {\n    // },\n    /**\n     * Gets executed right after terminating the webdriver session.\n     * @param {object} config wdio configuration object\n     * @param {Array.<Object>} capabilities list of capabilities details\n     * @param {Array.<String>} specs List of spec file paths that ran\n     */\n    // afterSession: function (config, capabilities, specs) {\n    // },\n    /**\n     * Gets executed after all workers got shut down and the process is about to exit. An error\n     * thrown in the onComplete hook will result in the test run failing.\n     * @param {object} exitCode 0 - success, 1 - fail\n     * @param {object} config wdio configuration object\n     * @param {Array.<Object>} capabilities list of capabilities details\n     * @param {<Object>} results object containing test results\n     */\n    // onComplete: function(exitCode, config, capabilities, results) {\n    // },\n    /**\n    * Gets executed when a refresh happens.\n    * @param {string} oldSessionId session ID of the old session\n    * @param {string} newSessionId session ID of the new session\n    */\n    // onReload: function(oldSessionId, newSessionId) {\n    // }\n}\n"],"mappings":"AAAAA,OAAO,CAACC,MAAM,GAAG;EACb;EACA;EACA;EACA;EACA;EACAC,MAAM,EAAE,OAAO;EACf;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACAC,KAAK,EAAE,CACH,sBAAsB,CACzB;EACD;EACAC,OAAO,EAAE;IACL;EAAA,CACH;EACD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACAC,YAAY,EAAE,EAAE;EAChB;EACA;EACA;EACA;EACA;EACAC,YAAY,EAAE,CAAC;IACX;IACAC,WAAW,EAAE,QAAQ,CAAC;EAC1B,CAAC,CAAC;;EAEF;EACA;EACA;EACA;EACA;EACA;EACA;EACAC,QAAQ,EAAE,MAAM;EAChB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACAC,IAAI,EAAE,CAAC;EACP;EACA;EACA;EACA;EACA;EACAC,OAAO,EAAE,kBAAkB;EAC3B;EACA;EACAC,cAAc,EAAE,KAAK;EACrB;EACA;EACA;EACAC,sBAAsB,EAAE,MAAM;EAC9B;EACA;EACAC,oBAAoB,EAAE,CAAC;EACvB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACAC,SAAS,EAAE,OAAO;EAClB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACAC,SAAS,EAAE,CAAC,MAAM,CAAC;EAGnB;EACA;EACA;EACAC,SAAS,EAAE;IACPC,EAAE,EAAE,KAAK;IACTC,OAAO,EAAE;EACb;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACJ;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI;EACA;;EAGA;AACJ;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;EACI;EACA;AACJ,CAAC"}},"mtime":1693336488935},"{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\Alex\\\\desktop\\\\work1\\\\test\\\\specs\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\Alex\\\\desktop\\\\work1\",\"filename\":\"C:\\\\Users\\\\Alex\\\\desktop\\\\work1\\\\test\\\\specs\\\\basic.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"C:\\\\Users\\\\Alex\\\\desktop\\\\work1\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.22.11:test":{"value":{"code":"it('Homework1', async () => {\n  await browser.url('https://v7.webdriver.io/docs/api');\n  await browser.pause(2000);\n  //getAttribute\n  const JSONWire = await $('//*[text()=\"JSONWire protocol\"]');\n  const newwind = await JSONWire.getAttribute('href');\n  //newWindow\n  browser.newWindow(newwind);\n  await browser.pause(1000);\n  //isDisplayed\n  const WikiButton = await $('[href=\"/SeleniumHQ/selenium/wiki\"]');\n  isDisplayed = await WikiButton.isDisplayed();\n  console.log('Is Displayed?: ' + (await isDisplayed));\n  await browser.pause(1000);\n  //switchWindow\n  browser.switchWindow('https://v7.webdriver.io/docs/api');\n  await browser.pause(1000);\n  //waitUntil\n  browser.waitUntil(() => {\n    return $('.docTitle_Oumm').getText();\n  }, 2000, 'blog is not diaplayed');\n  //saveScreenshot\n  const elem = $('.docTitle_Oumm');\n  elem.saveScreenshot('elemScreenshot.png');\n  await browser.pause(1000);\n  //isDisplayed\n  const Twitter = await $('[href=\"https://twitter.com/webdriverio\"]');\n  isDisplayed = await Twitter.isDisplayed();\n  console.log('Twittet Is Displayed?: ' + (await isDisplayed));\n  await browser.pause(1000);\n  //isDisplayedInViewport\n  let isDisplayedInViewport = await $('[href=\"https://twitter.com/webdriverio\"]').isDisplayedInViewport();\n  console.log('Twittet is displayed in ViewPort?: ' + (await isDisplayedInViewport));\n  await browser.pause(1000);\n  //scrollIntroView()\n  const scroll = await $('[href=\"https://twitter.com/webdriverio\"]');\n  await browser.pause(1000);\n  await scroll.scrollIntoView();\n  //isDisplayed#1\n  const Twitter1 = await $('[href=\"https://twitter.com/webdriverio\"]');\n  isDisplayed1 = await Twitter1.isDisplayed();\n  console.log('Twittet Is Displayed?: ' + (await isDisplayed1));\n  await browser.pause(1000);\n  //isDisplayedInViewport#1\n  let isDisplayedInViewport1 = await $('[href=\"https://twitter.com/webdriverio\"]').isDisplayedInViewport();\n  console.log('Twittet is displayed in ViewPort?: ' + (await isDisplayedInViewport1));\n  await browser.pause(1000);\n  //isFocused before click\n  const blog = await $('//div[@class=\"navbar__items\"]/a');\n  await browser.pause(1000);\n  console.log('blog isFocused() before click:' + (await blog.isFocused()));\n  await browser.pause(1000);\n  //isFocused after click\n  await blog.click();\n  await browser.pause(1000);\n  console.log('blog isFocused() after click:' + (await blog.isFocused()));\n  await browser.pause(2000);\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJpdCIsImJyb3dzZXIiLCJ1cmwiLCJwYXVzZSIsIkpTT05XaXJlIiwiJCIsIm5ld3dpbmQiLCJnZXRBdHRyaWJ1dGUiLCJuZXdXaW5kb3ciLCJXaWtpQnV0dG9uIiwiaXNEaXNwbGF5ZWQiLCJjb25zb2xlIiwibG9nIiwic3dpdGNoV2luZG93Iiwid2FpdFVudGlsIiwiZ2V0VGV4dCIsImVsZW0iLCJzYXZlU2NyZWVuc2hvdCIsIlR3aXR0ZXIiLCJpc0Rpc3BsYXllZEluVmlld3BvcnQiLCJzY3JvbGwiLCJzY3JvbGxJbnRvVmlldyIsIlR3aXR0ZXIxIiwiaXNEaXNwbGF5ZWQxIiwiaXNEaXNwbGF5ZWRJblZpZXdwb3J0MSIsImJsb2ciLCJpc0ZvY3VzZWQiLCJjbGljayJdLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFxBbGV4XFxkZXNrdG9wXFx3b3JrMVxcdGVzdFxcc3BlY3NcXCIsInNvdXJjZXMiOlsiYmFzaWMuanMiXSwic291cmNlc0NvbnRlbnQiOlsiaXQoJ0hvbWV3b3JrMScsIGFzeW5jICgpID0+IHtcclxuICAgIGF3YWl0IGJyb3dzZXIudXJsKCdodHRwczovL3Y3LndlYmRyaXZlci5pby9kb2NzL2FwaScpO1xyXG4gICAgYXdhaXQgYnJvd3Nlci5wYXVzZSgyMDAwKTtcclxuICAgIC8vZ2V0QXR0cmlidXRlXHJcbiAgICBjb25zdCBKU09OV2lyZSA9IGF3YWl0ICQoJy8vKlt0ZXh0KCk9XCJKU09OV2lyZSBwcm90b2NvbFwiXScpO1xyXG4gICAgY29uc3QgbmV3d2luZCA9IGF3YWl0IEpTT05XaXJlLmdldEF0dHJpYnV0ZSgnaHJlZicpO1xyXG4gICAgLy9uZXdXaW5kb3dcclxuICAgIGJyb3dzZXIubmV3V2luZG93KG5ld3dpbmQpO1xyXG4gICAgYXdhaXQgYnJvd3Nlci5wYXVzZSgxMDAwKTtcclxuICAgIC8vaXNEaXNwbGF5ZWRcclxuICAgIGNvbnN0IFdpa2lCdXR0b24gPSBhd2FpdCAkKCdbaHJlZj1cIi9TZWxlbml1bUhRL3NlbGVuaXVtL3dpa2lcIl0nKTtcclxuICAgIGlzRGlzcGxheWVkID0gYXdhaXQgV2lraUJ1dHRvbi5pc0Rpc3BsYXllZCgpO1xyXG4gICAgY29uc29sZS5sb2coJ0lzIERpc3BsYXllZD86ICcgKyBhd2FpdCBpc0Rpc3BsYXllZCk7XHJcbiAgICBhd2FpdCBicm93c2VyLnBhdXNlKDEwMDApO1xyXG4gICAgLy9zd2l0Y2hXaW5kb3dcclxuICAgIGJyb3dzZXIuc3dpdGNoV2luZG93KCdodHRwczovL3Y3LndlYmRyaXZlci5pby9kb2NzL2FwaScpO1xyXG4gICAgYXdhaXQgYnJvd3Nlci5wYXVzZSgxMDAwKTtcclxuICAgIC8vd2FpdFVudGlsXHJcbiAgICBicm93c2VyLndhaXRVbnRpbCgoKSA9PiB7XHJcbiAgICAgICAgcmV0dXJuICQoJy5kb2NUaXRsZV9PdW1tJykuZ2V0VGV4dCgpO1xyXG4gICAgfSwgMjAwMCwgJ2Jsb2cgaXMgbm90IGRpYXBsYXllZCcpO1xyXG4gICAgLy9zYXZlU2NyZWVuc2hvdFxyXG4gICAgY29uc3QgZWxlbSA9ICQoJy5kb2NUaXRsZV9PdW1tJyk7XHJcbiAgICBlbGVtLnNhdmVTY3JlZW5zaG90KCdlbGVtU2NyZWVuc2hvdC5wbmcnKVxyXG4gICAgYXdhaXQgYnJvd3Nlci5wYXVzZSgxMDAwKTtcclxuICAgIC8vaXNEaXNwbGF5ZWRcclxuICAgIGNvbnN0IFR3aXR0ZXIgPSBhd2FpdCAkKCdbaHJlZj1cImh0dHBzOi8vdHdpdHRlci5jb20vd2ViZHJpdmVyaW9cIl0nKTtcclxuICAgIGlzRGlzcGxheWVkID0gYXdhaXQgVHdpdHRlci5pc0Rpc3BsYXllZCgpO1xyXG4gICAgY29uc29sZS5sb2coJ1R3aXR0ZXQgSXMgRGlzcGxheWVkPzogJyArIGF3YWl0IGlzRGlzcGxheWVkKTtcclxuICAgIGF3YWl0IGJyb3dzZXIucGF1c2UoMTAwMCk7XHJcbiAgICAvL2lzRGlzcGxheWVkSW5WaWV3cG9ydFxyXG4gICAgbGV0IGlzRGlzcGxheWVkSW5WaWV3cG9ydCA9IGF3YWl0ICQoJ1tocmVmPVwiaHR0cHM6Ly90d2l0dGVyLmNvbS93ZWJkcml2ZXJpb1wiXScpLmlzRGlzcGxheWVkSW5WaWV3cG9ydCgpO1xyXG4gICAgY29uc29sZS5sb2coJ1R3aXR0ZXQgaXMgZGlzcGxheWVkIGluIFZpZXdQb3J0PzogJyArIGF3YWl0IGlzRGlzcGxheWVkSW5WaWV3cG9ydCk7XHJcbiAgICBhd2FpdCBicm93c2VyLnBhdXNlKDEwMDApO1xyXG4gICAgLy9zY3JvbGxJbnRyb1ZpZXcoKVxyXG4gICAgY29uc3Qgc2Nyb2xsID0gYXdhaXQgJCgnW2hyZWY9XCJodHRwczovL3R3aXR0ZXIuY29tL3dlYmRyaXZlcmlvXCJdJyk7XHJcbiAgICBhd2FpdCBicm93c2VyLnBhdXNlKDEwMDApO1xyXG4gICAgYXdhaXQgc2Nyb2xsLnNjcm9sbEludG9WaWV3KCk7XHJcbiAgICAvL2lzRGlzcGxheWVkIzFcclxuICAgIGNvbnN0IFR3aXR0ZXIxID0gYXdhaXQgJCgnW2hyZWY9XCJodHRwczovL3R3aXR0ZXIuY29tL3dlYmRyaXZlcmlvXCJdJyk7XHJcbiAgICBpc0Rpc3BsYXllZDEgPSBhd2FpdCBUd2l0dGVyMS5pc0Rpc3BsYXllZCgpO1xyXG4gICAgY29uc29sZS5sb2coJ1R3aXR0ZXQgSXMgRGlzcGxheWVkPzogJyArIGF3YWl0IGlzRGlzcGxheWVkMSk7XHJcbiAgICBhd2FpdCBicm93c2VyLnBhdXNlKDEwMDApO1xyXG4gICAgLy9pc0Rpc3BsYXllZEluVmlld3BvcnQjMVxyXG4gICAgbGV0IGlzRGlzcGxheWVkSW5WaWV3cG9ydDEgPSBhd2FpdCAkKCdbaHJlZj1cImh0dHBzOi8vdHdpdHRlci5jb20vd2ViZHJpdmVyaW9cIl0nKS5pc0Rpc3BsYXllZEluVmlld3BvcnQoKTtcclxuICAgIGNvbnNvbGUubG9nKCdUd2l0dGV0IGlzIGRpc3BsYXllZCBpbiBWaWV3UG9ydD86ICcgKyBhd2FpdCBpc0Rpc3BsYXllZEluVmlld3BvcnQxKTtcclxuICAgIGF3YWl0IGJyb3dzZXIucGF1c2UoMTAwMCk7XHJcbiAgICAvL2lzRm9jdXNlZCBiZWZvcmUgY2xpY2tcclxuICAgIGNvbnN0IGJsb2cgPSBhd2FpdCAkKCcvL2RpdltAY2xhc3M9XCJuYXZiYXJfX2l0ZW1zXCJdL2EnKTtcclxuICAgIGF3YWl0IGJyb3dzZXIucGF1c2UoMTAwMCk7XHJcbiAgICBjb25zb2xlLmxvZygnYmxvZyBpc0ZvY3VzZWQoKSBiZWZvcmUgY2xpY2s6JyArIGF3YWl0IGJsb2cuaXNGb2N1c2VkKCkpO1xyXG4gICAgYXdhaXQgYnJvd3Nlci5wYXVzZSgxMDAwKTtcclxuICAgIC8vaXNGb2N1c2VkIGFmdGVyIGNsaWNrXHJcbiAgICBhd2FpdCBibG9nLmNsaWNrKCk7XHJcbiAgICBhd2FpdCBicm93c2VyLnBhdXNlKDEwMDApO1xyXG4gICAgY29uc29sZS5sb2coJ2Jsb2cgaXNGb2N1c2VkKCkgYWZ0ZXIgY2xpY2s6JyArIGF3YWl0IGJsb2cuaXNGb2N1c2VkKCkpO1xyXG4gICAgYXdhaXQgYnJvd3Nlci5wYXVzZSgyMDAwKTtcclxufSlcclxuXHJcbiJdLCJtYXBwaW5ncyI6IkFBQUFBLEVBQUUsQ0FBQyxXQUFXLEVBQUUsWUFBWTtFQUN4QixNQUFNQyxPQUFPLENBQUNDLEdBQUcsQ0FBQyxrQ0FBa0MsQ0FBQztFQUNyRCxNQUFNRCxPQUFPLENBQUNFLEtBQUssQ0FBQyxJQUFJLENBQUM7RUFDekI7RUFDQSxNQUFNQyxRQUFRLEdBQUcsTUFBTUMsQ0FBQyxDQUFDLGlDQUFpQyxDQUFDO0VBQzNELE1BQU1DLE9BQU8sR0FBRyxNQUFNRixRQUFRLENBQUNHLFlBQVksQ0FBQyxNQUFNLENBQUM7RUFDbkQ7RUFDQU4sT0FBTyxDQUFDTyxTQUFTLENBQUNGLE9BQU8sQ0FBQztFQUMxQixNQUFNTCxPQUFPLENBQUNFLEtBQUssQ0FBQyxJQUFJLENBQUM7RUFDekI7RUFDQSxNQUFNTSxVQUFVLEdBQUcsTUFBTUosQ0FBQyxDQUFDLG9DQUFvQyxDQUFDO0VBQ2hFSyxXQUFXLEdBQUcsTUFBTUQsVUFBVSxDQUFDQyxXQUFXLENBQUMsQ0FBQztFQUM1Q0Ms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","map":{"version":3,"names":["it","browser","url","pause","JSONWire","$","newwind","getAttribute","newWindow","WikiButton","isDisplayed","console","log","switchWindow","waitUntil","getText","elem","saveScreenshot","Twitter","isDisplayedInViewport","scroll","scrollIntoView","Twitter1","isDisplayed1","isDisplayedInViewport1","blog","isFocused","click"],"sourceRoot":"C:\\Users\\Alex\\desktop\\work1\\test\\specs\\","sources":["basic.js"],"sourcesContent":["it('Homework1', async () => {\r\n    await browser.url('https://v7.webdriver.io/docs/api');\r\n    await browser.pause(2000);\r\n    //getAttribute\r\n    const JSONWire = await $('//*[text()=\"JSONWire protocol\"]');\r\n    const newwind = await JSONWire.getAttribute('href');\r\n    //newWindow\r\n    browser.newWindow(newwind);\r\n    await browser.pause(1000);\r\n    //isDisplayed\r\n    const WikiButton = await $('[href=\"/SeleniumHQ/selenium/wiki\"]');\r\n    isDisplayed = await WikiButton.isDisplayed();\r\n    console.log('Is Displayed?: ' + await isDisplayed);\r\n    await browser.pause(1000);\r\n    //switchWindow\r\n    browser.switchWindow('https://v7.webdriver.io/docs/api');\r\n    await browser.pause(1000);\r\n    //waitUntil\r\n    browser.waitUntil(() => {\r\n        return $('.docTitle_Oumm').getText();\r\n    }, 2000, 'blog is not diaplayed');\r\n    //saveScreenshot\r\n    const elem = $('.docTitle_Oumm');\r\n    elem.saveScreenshot('elemScreenshot.png')\r\n    await browser.pause(1000);\r\n    //isDisplayed\r\n    const Twitter = await $('[href=\"https://twitter.com/webdriverio\"]');\r\n    isDisplayed = await Twitter.isDisplayed();\r\n    console.log('Twittet Is Displayed?: ' + await isDisplayed);\r\n    await browser.pause(1000);\r\n    //isDisplayedInViewport\r\n    let isDisplayedInViewport = await $('[href=\"https://twitter.com/webdriverio\"]').isDisplayedInViewport();\r\n    console.log('Twittet is displayed in ViewPort?: ' + await isDisplayedInViewport);\r\n    await browser.pause(1000);\r\n    //scrollIntroView()\r\n    const scroll = await $('[href=\"https://twitter.com/webdriverio\"]');\r\n    await browser.pause(1000);\r\n    await scroll.scrollIntoView();\r\n    //isDisplayed#1\r\n    const Twitter1 = await $('[href=\"https://twitter.com/webdriverio\"]');\r\n    isDisplayed1 = await Twitter1.isDisplayed();\r\n    console.log('Twittet Is Displayed?: ' + await isDisplayed1);\r\n    await browser.pause(1000);\r\n    //isDisplayedInViewport#1\r\n    let isDisplayedInViewport1 = await $('[href=\"https://twitter.com/webdriverio\"]').isDisplayedInViewport();\r\n    console.log('Twittet is displayed in ViewPort?: ' + await isDisplayedInViewport1);\r\n    await browser.pause(1000);\r\n    //isFocused before click\r\n    const blog = await $('//div[@class=\"navbar__items\"]/a');\r\n    await browser.pause(1000);\r\n    console.log('blog isFocused() before click:' + await blog.isFocused());\r\n    await browser.pause(1000);\r\n    //isFocused after click\r\n    await blog.click();\r\n    await browser.pause(1000);\r\n    console.log('blog isFocused() after click:' + await blog.isFocused());\r\n    await browser.pause(2000);\r\n})\r\n\r\n"],"mappings":"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"}},"mtime":1698701705320},"{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\Alex\\\\desktop\\\\work2\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\Alex\\\\desktop\\\\work2\",\"filename\":\"C:\\\\Users\\\\Alex\\\\desktop\\\\work2\\\\wdio.conf.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"C:\\\\Users\\\\Alex\\\\desktop\\\\work2\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.22.11:test":{"value":{"code":"exports.config = {\n  //\n  // ====================\n  // Runner Configuration\n  // ====================\n  // WebdriverIO supports running e2e tests as well as unit and component tests.\n  runner: 'local',\n  //\n  // ==================\n  // Specify Test Files\n  // ==================\n  // Define which test specs should run. The pattern is relative to the directory\n  // of the configuration file being run.\n  //\n  // The specs are defined as an array of spec files (optionally using wildcards\n  // that will be expanded). The test for each spec file will be run in a separate\n  // worker process. In order to have a group of spec files run in the same worker\n  // process simply enclose them in an array within the specs array.\n  //\n  // If you are calling `wdio` from an NPM script (see https://docs.npmjs.com/cli/run-script),\n  // then the current working directory is where your `package.json` resides, so `wdio`\n  // will be called from there.\n  //\n  specs: ['./test/specs/**/*.js'],\n  // Patterns to exclude.\n  exclude: [\n    // 'path/to/excluded/files'\n  ],\n  //\n  // ============\n  // Capabilities\n  // ============\n  // Define your capabilities here. WebdriverIO can run multiple capabilities at the same\n  // time. Depending on the number of capabilities, WebdriverIO launches several test\n  // sessions. Within your capabilities you can overwrite the spec and exclude options in\n  // order to group specific specs to a specific capability.\n  //\n  // First, you can define how many instances should be started at the same time. Let's\n  // say you have 3 different capabilities (Chrome, Firefox, and Safari) and you have\n  // set maxInstances to 1; wdio will spawn 3 processes. Therefore, if you have 10 spec\n  // files and you set maxInstances to 10, all spec files will get tested at the same time\n  // and 30 processes will get spawned. The property handles how many capabilities\n  // from the same test should run tests.\n  //\n  maxInstances: 10,\n  //\n  // If you have trouble getting all important capabilities together, check out the\n  // Sauce Labs platform configurator - a great tool to configure your capabilities:\n  // https://saucelabs.com/platform/platform-configurator\n  //\n  capabilities: [{\n    // capabilities for local browser web tests\n    browserName: 'chrome' // or \"firefox\", \"microsoftedge\", \"safari\"\n  }],\n\n  //\n  // ===================\n  // Test Configurations\n  // ===================\n  // Define all options that are relevant for the WebdriverIO instance here\n  //\n  // Level of logging verbosity: trace | debug | info | warn | error | silent\n  logLevel: 'info',\n  //\n  // Set specific log levels per logger\n  // loggers:\n  // - webdriver, webdriverio\n  // - @wdio/browserstack-service, @wdio/devtools-service, @wdio/sauce-service\n  // - @wdio/mocha-framework, @wdio/jasmine-framework\n  // - @wdio/local-runner\n  // - @wdio/sumologic-reporter\n  // - @wdio/cli, @wdio/config, @wdio/utils\n  // Level of logging verbosity: trace | debug | info | warn | error | silent\n  // logLevels: {\n  //     webdriver: 'info',\n  //     '@wdio/appium-service': 'info'\n  // },\n  //\n  // If you only want to run your tests until a specific amount of tests have failed use\n  // bail (default is 0 - don't bail, run all tests).\n  bail: 0,\n  //\n  // Set a base URL in order to shorten url command calls. If your `url` parameter starts\n  // with `/`, the base url gets prepended, not including the path portion of your baseUrl.\n  // If your `url` parameter starts without a scheme or `/` (like `some/path`), the base url\n  // gets prepended directly.\n  baseUrl: 'http://localhost',\n  //\n  // Default timeout for all waitFor* commands.\n  waitforTimeout: 10000,\n  //\n  // Default timeout in milliseconds for request\n  // if browser driver or grid doesn't send response\n  connectionRetryTimeout: 120000,\n  //\n  // Default request retries count\n  connectionRetryCount: 3,\n  //\n  // Test runner services\n  // Services take over a specific job you don't want to take care of. They enhance\n  // your test setup with almost no effort. Unlike plugins, they don't add new\n  // commands. Instead, they hook themselves up into the test process.\n  // services: [],\n  //\n  // Framework you want to run your specs with.\n  // The following are supported: Mocha, Jasmine, and Cucumber\n  // see also: https://webdriver.io/docs/frameworks\n  //\n  // Make sure you have the wdio adapter package for the specific framework installed\n  // before running any tests.\n  framework: 'mocha',\n  //\n  // The number of times to retry the entire specfile when it fails as a whole\n  // specFileRetries: 1,\n  //\n  // Delay in seconds between the spec file retry attempts\n  // specFileRetriesDelay: 0,\n  //\n  // Whether or not retried spec files should be retried immediately or deferred to the end of the queue\n  // specFileRetriesDeferred: false,\n  //\n  // Test reporter for stdout.\n  // The only one supported by default is 'dot'\n  // see also: https://webdriver.io/docs/dot-reporter\n  reporters: ['spec'],\n  //\n  // Options to be passed to Mocha.\n  // See the full list at http://mochajs.org/\n  mochaOpts: {\n    ui: 'bdd',\n    timeout: 60000\n  }\n  //\n  // =====\n  // Hooks\n  // =====\n  // WebdriverIO provides several hooks you can use to interfere with the test process in order to enhance\n  // it and to build services around it. You can either apply a single function or an array of\n  // methods to it. If one of them returns with a promise, WebdriverIO will wait until that promise got\n  // resolved to continue.\n  /**\n   * Gets executed once before all workers get launched.\n   * @param {object} config wdio configuration object\n   * @param {Array.<Object>} capabilities list of capabilities details\n   */\n  // onPrepare: function (config, capabilities) {\n  // },\n  /**\n   * Gets executed before a worker process is spawned and can be used to initialise specific service\n   * for that worker as well as modify runtime environments in an async fashion.\n   * @param  {string} cid      capability id (e.g 0-0)\n   * @param  {object} caps     object containing capabilities for session that will be spawn in the worker\n   * @param  {object} specs    specs to be run in the worker process\n   * @param  {object} args     object that will be merged with the main configuration once worker is initialized\n   * @param  {object} execArgv list of string arguments passed to the worker process\n   */\n  // onWorkerStart: function (cid, caps, specs, args, execArgv) {\n  // },\n  /**\n   * Gets executed just after a worker process has exited.\n   * @param  {string} cid      capability id (e.g 0-0)\n   * @param  {number} exitCode 0 - success, 1 - fail\n   * @param  {object} specs    specs to be run in the worker process\n   * @param  {number} retries  number of retries used\n   */\n  // onWorkerEnd: function (cid, exitCode, specs, retries) {\n  // },\n  /**\n   * Gets executed just before initialising the webdriver session and test framework. It allows you\n   * to manipulate configurations depending on the capability or spec.\n   * @param {object} config wdio configuration object\n   * @param {Array.<Object>} capabilities list of capabilities details\n   * @param {Array.<String>} specs List of spec file paths that are to be run\n   * @param {string} cid worker id (e.g. 0-0)\n   */\n  // beforeSession: function (config, capabilities, specs, cid) {\n  // },\n  /**\n   * Gets executed before test execution begins. At this point you can access to all global\n   * variables like `browser`. It is the perfect place to define custom commands.\n   * @param {Array.<Object>} capabilities list of capabilities details\n   * @param {Array.<String>} specs        List of spec file paths that are to be run\n   * @param {object}         browser      instance of created browser/device session\n   */\n  // before: function (capabilities, specs) {\n  // },\n  /**\n   * Runs before a WebdriverIO command gets executed.\n   * @param {string} commandName hook command name\n   * @param {Array} args arguments that command would receive\n   */\n  // beforeCommand: function (commandName, args) {\n  // },\n  /**\n   * Hook that gets executed before the suite starts\n   * @param {object} suite suite details\n   */\n  // beforeSuite: function (suite) {\n  // },\n  /**\n   * Function to be executed before a test (in Mocha/Jasmine) starts.\n   */\n  // beforeTest: function (test, context) {\n  // },\n  /**\n   * Hook that gets executed _before_ a hook within the suite starts (e.g. runs before calling\n   * beforeEach in Mocha)\n   */\n  // beforeHook: function (test, context) {\n  // },\n  /**\n   * Hook that gets executed _after_ a hook within the suite starts (e.g. runs after calling\n   * afterEach in Mocha)\n   */\n  // afterHook: function (test, context, { error, result, duration, passed, retries }) {\n  // },\n  /**\n   * Function to be executed after a test (in Mocha/Jasmine only)\n   * @param {object}  test             test object\n   * @param {object}  context          scope object the test was executed with\n   * @param {Error}   result.error     error object in case the test fails, otherwise `undefined`\n   * @param {*}       result.result    return object of test function\n   * @param {number}  result.duration  duration of test\n   * @param {boolean} result.passed    true if test has passed, otherwise false\n   * @param {object}  result.retries   informations to spec related retries, e.g. `{ attempts: 0, limit: 0 }`\n   */\n  // afterTest: function(test, context, { error, result, duration, passed, retries }) {\n  // },\n\n  /**\n   * Hook that gets executed after the suite has ended\n   * @param {object} suite suite details\n   */\n  // afterSuite: function (suite) {\n  // },\n  /**\n   * Runs after a WebdriverIO command gets executed\n   * @param {string} commandName hook command name\n   * @param {Array} args arguments that command would receive\n   * @param {number} result 0 - command success, 1 - command error\n   * @param {object} error error object if any\n   */\n  // afterCommand: function (commandName, args, result, error) {\n  // },\n  /**\n   * Gets executed after all tests are done. You still have access to all global variables from\n   * the test.\n   * @param {number} result 0 - test pass, 1 - test fail\n   * @param {Array.<Object>} capabilities list of capabilities details\n   * @param {Array.<String>} specs List of spec file paths that ran\n   */\n  // after: function (result, capabilities, specs) {\n  // },\n  /**\n   * Gets executed right after terminating the webdriver session.\n   * @param {object} config wdio configuration object\n   * @param {Array.<Object>} capabilities list of capabilities details\n   * @param {Array.<String>} specs List of spec file paths that ran\n   */\n  // afterSession: function (config, capabilities, specs) {\n  // },\n  /**\n   * Gets executed after all workers got shut down and the process is about to exit. An error\n   * thrown in the onComplete hook will result in the test run failing.\n   * @param {object} exitCode 0 - success, 1 - fail\n   * @param {object} config wdio configuration object\n   * @param {Array.<Object>} capabilities list of capabilities details\n   * @param {<Object>} results object containing test results\n   */\n  // onComplete: function(exitCode, config, capabilities, results) {\n  // },\n  /**\n  * Gets executed when a refresh happens.\n  * @param {string} oldSessionId session ID of the old session\n  * @param {string} newSessionId session ID of the new session\n  */\n  // onReload: function(oldSessionId, newSessionId) {\n  // }\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","map":{"version":3,"names":["exports","config","runner","specs","exclude","maxInstances","capabilities","browserName","logLevel","bail","baseUrl","waitforTimeout","connectionRetryTimeout","connectionRetryCount","framework","reporters","mochaOpts","ui","timeout"],"sourceRoot":"C:\\Users\\Alex\\desktop\\work2\\","sources":["wdio.conf.js"],"sourcesContent":["exports.config = {\n    //\n    // ====================\n    // Runner Configuration\n    // ====================\n    // WebdriverIO supports running e2e tests as well as unit and component tests.\n    runner: 'local',\n    //\n    // ==================\n    // Specify Test Files\n    // ==================\n    // Define which test specs should run. The pattern is relative to the directory\n    // of the configuration file being run.\n    //\n    // The specs are defined as an array of spec files (optionally using wildcards\n    // that will be expanded). The test for each spec file will be run in a separate\n    // worker process. In order to have a group of spec files run in the same worker\n    // process simply enclose them in an array within the specs array.\n    //\n    // If you are calling `wdio` from an NPM script (see https://docs.npmjs.com/cli/run-script),\n    // then the current working directory is where your `package.json` resides, so `wdio`\n    // will be called from there.\n    //\n    specs: [\n        './test/specs/**/*.js'\n    ],\n    // Patterns to exclude.\n    exclude: [\n        // 'path/to/excluded/files'\n    ],\n    //\n    // ============\n    // Capabilities\n    // ============\n    // Define your capabilities here. WebdriverIO can run multiple capabilities at the same\n    // time. Depending on the number of capabilities, WebdriverIO launches several test\n    // sessions. Within your capabilities you can overwrite the spec and exclude options in\n    // order to group specific specs to a specific capability.\n    //\n    // First, you can define how many instances should be started at the same time. Let's\n    // say you have 3 different capabilities (Chrome, Firefox, and Safari) and you have\n    // set maxInstances to 1; wdio will spawn 3 processes. Therefore, if you have 10 spec\n    // files and you set maxInstances to 10, all spec files will get tested at the same time\n    // and 30 processes will get spawned. The property handles how many capabilities\n    // from the same test should run tests.\n    //\n    maxInstances: 10,\n    //\n    // If you have trouble getting all important capabilities together, check out the\n    // Sauce Labs platform configurator - a great tool to configure your capabilities:\n    // https://saucelabs.com/platform/platform-configurator\n    //\n    capabilities: [{\n        // capabilities for local browser web tests\n        browserName: 'chrome' // or \"firefox\", \"microsoftedge\", \"safari\"\n    }],\n\n    //\n    // ===================\n    // Test Configurations\n    // ===================\n    // Define all options that are relevant for the WebdriverIO instance here\n    //\n    // Level of logging verbosity: trace | debug | info | warn | error | silent\n    logLevel: 'info',\n    //\n    // Set specific log levels per logger\n    // loggers:\n    // - webdriver, webdriverio\n    // - @wdio/browserstack-service, @wdio/devtools-service, @wdio/sauce-service\n    // - @wdio/mocha-framework, @wdio/jasmine-framework\n    // - @wdio/local-runner\n    // - @wdio/sumologic-reporter\n    // - @wdio/cli, @wdio/config, @wdio/utils\n    // Level of logging verbosity: trace | debug | info | warn | error | silent\n    // logLevels: {\n    //     webdriver: 'info',\n    //     '@wdio/appium-service': 'info'\n    // },\n    //\n    // If you only want to run your tests until a specific amount of tests have failed use\n    // bail (default is 0 - don't bail, run all tests).\n    bail: 0,\n    //\n    // Set a base URL in order to shorten url command calls. If your `url` parameter starts\n    // with `/`, the base url gets prepended, not including the path portion of your baseUrl.\n    // If your `url` parameter starts without a scheme or `/` (like `some/path`), the base url\n    // gets prepended directly.\n    baseUrl: 'http://localhost',\n    //\n    // Default timeout for all waitFor* commands.\n    waitforTimeout: 10000,\n    //\n    // Default timeout in milliseconds for request\n    // if browser driver or grid doesn't send response\n    connectionRetryTimeout: 120000,\n    //\n    // Default request retries count\n    connectionRetryCount: 3,\n    //\n    // Test runner services\n    // Services take over a specific job you don't want to take care of. They enhance\n    // your test setup with almost no effort. Unlike plugins, they don't add new\n    // commands. Instead, they hook themselves up into the test process.\n    // services: [],\n    //\n    // Framework you want to run your specs with.\n    // The following are supported: Mocha, Jasmine, and Cucumber\n    // see also: https://webdriver.io/docs/frameworks\n    //\n    // Make sure you have the wdio adapter package for the specific framework installed\n    // before running any tests.\n    framework: 'mocha',\n    //\n    // The number of times to retry the entire specfile when it fails as a whole\n    // specFileRetries: 1,\n    //\n    // Delay in seconds between the spec file retry attempts\n    // specFileRetriesDelay: 0,\n    //\n    // Whether or not retried spec files should be retried immediately or deferred to the end of the queue\n    // specFileRetriesDeferred: false,\n    //\n    // Test reporter for stdout.\n    // The only one supported by default is 'dot'\n    // see also: https://webdriver.io/docs/dot-reporter\n    reporters: ['spec'],\n\n    \n    //\n    // Options to be passed to Mocha.\n    // See the full list at http://mochajs.org/\n    mochaOpts: {\n        ui: 'bdd',\n        timeout: 60000\n    },\n    //\n    // =====\n    // Hooks\n    // =====\n    // WebdriverIO provides several hooks you can use to interfere with the test process in order to enhance\n    // it and to build services around it. You can either apply a single function or an array of\n    // methods to it. If one of them returns with a promise, WebdriverIO will wait until that promise got\n    // resolved to continue.\n    /**\n     * Gets executed once before all workers get launched.\n     * @param {object} config wdio configuration object\n     * @param {Array.<Object>} capabilities list of capabilities details\n     */\n    // onPrepare: function (config, capabilities) {\n    // },\n    /**\n     * Gets executed before a worker process is spawned and can be used to initialise specific service\n     * for that worker as well as modify runtime environments in an async fashion.\n     * @param  {string} cid      capability id (e.g 0-0)\n     * @param  {object} caps     object containing capabilities for session that will be spawn in the worker\n     * @param  {object} specs    specs to be run in the worker process\n     * @param  {object} args     object that will be merged with the main configuration once worker is initialized\n     * @param  {object} execArgv list of string arguments passed to the worker process\n     */\n    // onWorkerStart: function (cid, caps, specs, args, execArgv) {\n    // },\n    /**\n     * Gets executed just after a worker process has exited.\n     * @param  {string} cid      capability id (e.g 0-0)\n     * @param  {number} exitCode 0 - success, 1 - fail\n     * @param  {object} specs    specs to be run in the worker process\n     * @param  {number} retries  number of retries used\n     */\n    // onWorkerEnd: function (cid, exitCode, specs, retries) {\n    // },\n    /**\n     * Gets executed just before initialising the webdriver session and test framework. It allows you\n     * to manipulate configurations depending on the capability or spec.\n     * @param {object} config wdio configuration object\n     * @param {Array.<Object>} capabilities list of capabilities details\n     * @param {Array.<String>} specs List of spec file paths that are to be run\n     * @param {string} cid worker id (e.g. 0-0)\n     */\n    // beforeSession: function (config, capabilities, specs, cid) {\n    // },\n    /**\n     * Gets executed before test execution begins. At this point you can access to all global\n     * variables like `browser`. It is the perfect place to define custom commands.\n     * @param {Array.<Object>} capabilities list of capabilities details\n     * @param {Array.<String>} specs        List of spec file paths that are to be run\n     * @param {object}         browser      instance of created browser/device session\n     */\n    // before: function (capabilities, specs) {\n    // },\n    /**\n     * Runs before a WebdriverIO command gets executed.\n     * @param {string} commandName hook command name\n     * @param {Array} args arguments that command would receive\n     */\n    // beforeCommand: function (commandName, args) {\n    // },\n    /**\n     * Hook that gets executed before the suite starts\n     * @param {object} suite suite details\n     */\n    // beforeSuite: function (suite) {\n    // },\n    /**\n     * Function to be executed before a test (in Mocha/Jasmine) starts.\n     */\n    // beforeTest: function (test, context) {\n    // },\n    /**\n     * Hook that gets executed _before_ a hook within the suite starts (e.g. runs before calling\n     * beforeEach in Mocha)\n     */\n    // beforeHook: function (test, context) {\n    // },\n    /**\n     * Hook that gets executed _after_ a hook within the suite starts (e.g. runs after calling\n     * afterEach in Mocha)\n     */\n    // afterHook: function (test, context, { error, result, duration, passed, retries }) {\n    // },\n    /**\n     * Function to be executed after a test (in Mocha/Jasmine only)\n     * @param {object}  test             test object\n     * @param {object}  context          scope object the test was executed with\n     * @param {Error}   result.error     error object in case the test fails, otherwise `undefined`\n     * @param {*}       result.result    return object of test function\n     * @param {number}  result.duration  duration of test\n     * @param {boolean} result.passed    true if test has passed, otherwise false\n     * @param {object}  result.retries   informations to spec related retries, e.g. `{ attempts: 0, limit: 0 }`\n     */\n    // afterTest: function(test, context, { error, result, duration, passed, retries }) {\n    // },\n\n\n    /**\n     * Hook that gets executed after the suite has ended\n     * @param {object} suite suite details\n     */\n    // afterSuite: function (suite) {\n    // },\n    /**\n     * Runs after a WebdriverIO command gets executed\n     * @param {string} commandName hook command name\n     * @param {Array} args arguments that command would receive\n     * @param {number} result 0 - command success, 1 - command error\n     * @param {object} error error object if any\n     */\n    // afterCommand: function (commandName, args, result, error) {\n    // },\n    /**\n     * Gets executed after all tests are done. You still have access to all global variables from\n     * the test.\n     * @param {number} result 0 - test pass, 1 - test fail\n     * @param {Array.<Object>} capabilities list of capabilities details\n     * @param {Array.<String>} specs List of spec file paths that ran\n     */\n    // after: function (result, capabilities, specs) {\n    // },\n    /**\n     * Gets executed right after terminating the webdriver session.\n     * @param {object} config wdio configuration object\n     * @param {Array.<Object>} capabilities list of capabilities details\n     * @param {Array.<String>} specs List of spec file paths that ran\n     */\n    // afterSession: function (config, capabilities, specs) {\n    // },\n    /**\n     * Gets executed after all workers got shut down and the process is about to exit. An error\n     * thrown in the onComplete hook will result in the test run failing.\n     * @param {object} exitCode 0 - success, 1 - fail\n     * @param {object} config wdio configuration object\n     * @param {Array.<Object>} capabilities list of capabilities details\n     * @param {<Object>} results object containing test results\n     */\n    // onComplete: function(exitCode, config, capabilities, results) {\n    // },\n    /**\n    * Gets executed when a refresh happens.\n    * @param {string} oldSessionId session ID of the old session\n    * @param {string} newSessionId session ID of the new session\n    */\n    // onReload: function(oldSessionId, newSessionId) {\n    // }\n}\n"],"mappings":"AAAAA,OAAO,CAACC,MAAM,GAAG;EACb;EACA;EACA;EACA;EACA;EACAC,MAAM,EAAE,OAAO;EACf;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACAC,KAAK,EAAE,CACH,sBAAsB,CACzB;EACD;EACAC,OAAO,EAAE;IACL;EAAA,CACH;EACD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACAC,YAAY,EAAE,EAAE;EAChB;EACA;EACA;EACA;EACA;EACAC,YAAY,EAAE,CAAC;IACX;IACAC,WAAW,EAAE,QAAQ,CAAC;EAC1B,CAAC,CAAC;;EAEF;EACA;EACA;EACA;EACA;EACA;EACA;EACAC,QAAQ,EAAE,MAAM;EAChB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACAC,IAAI,EAAE,CAAC;EACP;EACA;EACA;EACA;EACA;EACAC,OAAO,EAAE,kBAAkB;EAC3B;EACA;EACAC,cAAc,EAAE,KAAK;EACrB;EACA;EACA;EACAC,sBAAsB,EAAE,MAAM;EAC9B;EACA;EACAC,oBAAoB,EAAE,CAAC;EACvB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACAC,SAAS,EAAE,OAAO;EAClB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACAC,SAAS,EAAE,CAAC,MAAM,CAAC;EAGnB;EACA;EACA;EACAC,SAAS,EAAE;IACPC,EAAE,EAAE,KAAK;IACTC,OAAO,EAAE;EACb;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACJ;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI;EACA;;EAGA;AACJ;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;EACI;EACA;AACJ,CAAC"}},"mtime":1693336488935},"{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\Alex\\\\desktop\\\\work2\\\\test\\\\specs\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\Alex\\\\desktop\\\\work2\",\"filename\":\"C:\\\\Users\\\\Alex\\\\desktop\\\\work2\\\\test\\\\specs\\\\basic.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"C:\\\\Users\\\\Alex\\\\desktop\\\\work2\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.22.11:test":{"value":{"code":"it('Homework1', async () => {\n  await browser.url('https://v7.webdriver.io/docs/api');\n  await browser.pause(2000);\n  //getAttribute\n  const JSONWire = await $('//*[text()=\"JSONWire protocol\"]');\n  const newwind = await JSONWire.getAttribute('href');\n  //newWindow\n  browser.newWindow(newwind);\n  await browser.pause(1000);\n  //isDisplayed\n  const WikiButton = await $('[href=\"/SeleniumHQ/selenium/wiki\"]');\n  isDisplayed = await WikiButton.isDisplayed();\n  console.log('Is Displayed?: ' + (await isDisplayed));\n  await browser.pause(1000);\n  //switchWindow\n  browser.switchWindow('https://v7.webdriver.io/docs/api');\n  await browser.pause(1000);\n  //waitUntil\n  browser.waitUntil(() => {\n    return $('.docTitle_Oumm').getText();\n  }, 2000, 'blog is not diaplayed');\n  //saveScreenshot\n  const elem = $('.docTitle_Oumm');\n  elem.saveScreenshot('elemScreenshot.png');\n  await browser.pause(1000);\n  //isDisplayed\n  const Twitter = await $('[href=\"https://twitter.com/webdriverio\"]');\n  isDisplayed = await Twitter.isDisplayed();\n  console.log('Twittet Is Displayed?: ' + (await isDisplayed));\n  await browser.pause(1000);\n  //isDisplayedInViewport\n  let isDisplayedInViewport = await $('[href=\"https://twitter.com/webdriverio\"]').isDisplayedInViewport();\n  console.log('Twittet is displayed in ViewPort?: ' + (await isDisplayedInViewport));\n  await browser.pause(1000);\n  //scrollIntroView()\n  const scroll = await $('[href=\"https://twitter.com/webdriverio\"]');\n  await browser.pause(1000);\n  await scroll.scrollIntoView();\n  //isDisplayed#1\n  const Twitter1 = await $('[href=\"https://twitter.com/webdriverio\"]');\n  isDisplayed1 = await Twitter1.isDisplayed();\n  console.log('Twittet Is Displayed?: ' + (await isDisplayed1));\n  await browser.pause(1000);\n  //isDisplayedInViewport#1\n  let isDisplayedInViewport1 = await $('[href=\"https://twitter.com/webdriverio\"]').isDisplayedInViewport();\n  console.log('Twittet is displayed in ViewPort?: ' + (await isDisplayedInViewport1));\n  await browser.pause(1000);\n  //isFocused before click\n  const blog = await $('//div[@class=\"navbar__items\"]/a');\n  await browser.pause(1000);\n  console.log('blog isFocused() before click:' + (await blog.isFocused()));\n  await browser.pause(1000);\n  //isFocused after click\n  await blog.click();\n  await browser.pause(1000);\n  console.log('blog isFocused() after click:' + (await blog.isFocused()));\n  await browser.pause(2000);\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJpdCIsImJyb3dzZXIiLCJ1cmwiLCJwYXVzZSIsIkpTT05XaXJlIiwiJCIsIm5ld3dpbmQiLCJnZXRBdHRyaWJ1dGUiLCJuZXdXaW5kb3ciLCJXaWtpQnV0dG9uIiwiaXNEaXNwbGF5ZWQiLCJjb25zb2xlIiwibG9nIiwic3dpdGNoV2luZG93Iiwid2FpdFVudGlsIiwiZ2V0VGV4dCIsImVsZW0iLCJzYXZlU2NyZWVuc2hvdCIsIlR3aXR0ZXIiLCJpc0Rpc3BsYXllZEluVmlld3BvcnQiLCJzY3JvbGwiLCJzY3JvbGxJbnRvVmlldyIsIlR3aXR0ZXIxIiwiaXNEaXNwbGF5ZWQxIiwiaXNEaXNwbGF5ZWRJblZpZXdwb3J0MSIsImJsb2ciLCJpc0ZvY3VzZWQiLCJjbGljayJdLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFxBbGV4XFxkZXNrdG9wXFx3b3JrMlxcdGVzdFxcc3BlY3NcXCIsInNvdXJjZXMiOlsiYmFzaWMuanMiXSwic291cmNlc0NvbnRlbnQiOlsiaXQoJ0hvbWV3b3JrMScsIGFzeW5jICgpID0+IHtcclxuICAgIGF3YWl0IGJyb3dzZXIudXJsKCdodHRwczovL3Y3LndlYmRyaXZlci5pby9kb2NzL2FwaScpO1xyXG4gICAgYXdhaXQgYnJvd3Nlci5wYXVzZSgyMDAwKTtcclxuICAgIC8vZ2V0QXR0cmlidXRlXHJcbiAgICBjb25zdCBKU09OV2lyZSA9IGF3YWl0ICQoJy8vKlt0ZXh0KCk9XCJKU09OV2lyZSBwcm90b2NvbFwiXScpO1xyXG4gICAgY29uc3QgbmV3d2luZCA9IGF3YWl0IEpTT05XaXJlLmdldEF0dHJpYnV0ZSgnaHJlZicpO1xyXG4gICAgLy9uZXdXaW5kb3dcclxuICAgIGJyb3dzZXIubmV3V2luZG93KG5ld3dpbmQpO1xyXG4gICAgYXdhaXQgYnJvd3Nlci5wYXVzZSgxMDAwKTtcclxuICAgIC8vaXNEaXNwbGF5ZWRcclxuICAgIGNvbnN0IFdpa2lCdXR0b24gPSBhd2FpdCAkKCdbaHJlZj1cIi9TZWxlbml1bUhRL3NlbGVuaXVtL3dpa2lcIl0nKTtcclxuICAgIGlzRGlzcGxheWVkID0gYXdhaXQgV2lraUJ1dHRvbi5pc0Rpc3BsYXllZCgpO1xyXG4gICAgY29uc29sZS5sb2coJ0lzIERpc3BsYXllZD86ICcgKyBhd2FpdCBpc0Rpc3BsYXllZCk7XHJcbiAgICBhd2FpdCBicm93c2VyLnBhdXNlKDEwMDApO1xyXG4gICAgLy9zd2l0Y2hXaW5kb3dcclxuICAgIGJyb3dzZXIuc3dpdGNoV2luZG93KCdodHRwczovL3Y3LndlYmRyaXZlci5pby9kb2NzL2FwaScpO1xyXG4gICAgYXdhaXQgYnJvd3Nlci5wYXVzZSgxMDAwKTtcclxuICAgIC8vd2FpdFVudGlsXHJcbiAgICBicm93c2VyLndhaXRVbnRpbCgoKSA9PiB7XHJcbiAgICAgICAgcmV0dXJuICQoJy5kb2NUaXRsZV9PdW1tJykuZ2V0VGV4dCgpO1xyXG4gICAgfSwgMjAwMCwgJ2Jsb2cgaXMgbm90IGRpYXBsYXllZCcpO1xyXG4gICAgLy9zYXZlU2NyZWVuc2hvdFxyXG4gICAgY29uc3QgZWxlbSA9ICQoJy5kb2NUaXRsZV9PdW1tJyk7XHJcbiAgICBlbGVtLnNhdmVTY3JlZW5zaG90KCdlbGVtU2NyZWVuc2hvdC5wbmcnKVxyXG4gICAgYXdhaXQgYnJvd3Nlci5wYXVzZSgxMDAwKTtcclxuICAgIC8vaXNEaXNwbGF5ZWRcclxuICAgIGNvbnN0IFR3aXR0ZXIgPSBhd2FpdCAkKCdbaHJlZj1cImh0dHBzOi8vdHdpdHRlci5jb20vd2ViZHJpdmVyaW9cIl0nKTtcclxuICAgIGlzRGlzcGxheWVkID0gYXdhaXQgVHdpdHRlci5pc0Rpc3BsYXllZCgpO1xyXG4gICAgY29uc29sZS5sb2coJ1R3aXR0ZXQgSXMgRGlzcGxheWVkPzogJyArIGF3YWl0IGlzRGlzcGxheWVkKTtcclxuICAgIGF3YWl0IGJyb3dzZXIucGF1c2UoMTAwMCk7XHJcbiAgICAvL2lzRGlzcGxheWVkSW5WaWV3cG9ydFxyXG4gICAgbGV0IGlzRGlzcGxheWVkSW5WaWV3cG9ydCA9IGF3YWl0ICQoJ1tocmVmPVwiaHR0cHM6Ly90d2l0dGVyLmNvbS93ZWJkcml2ZXJpb1wiXScpLmlzRGlzcGxheWVkSW5WaWV3cG9ydCgpO1xyXG4gICAgY29uc29sZS5sb2coJ1R3aXR0ZXQgaXMgZGlzcGxheWVkIGluIFZpZXdQb3J0PzogJyArIGF3YWl0IGlzRGlzcGxheWVkSW5WaWV3cG9ydCk7XHJcbiAgICBhd2FpdCBicm93c2VyLnBhdXNlKDEwMDApO1xyXG4gICAgLy9zY3JvbGxJbnRyb1ZpZXcoKVxyXG4gICAgY29uc3Qgc2Nyb2xsID0gYXdhaXQgJCgnW2hyZWY9XCJodHRwczovL3R3aXR0ZXIuY29tL3dlYmRyaXZlcmlvXCJdJyk7XHJcbiAgICBhd2FpdCBicm93c2VyLnBhdXNlKDEwMDApO1xyXG4gICAgYXdhaXQgc2Nyb2xsLnNjcm9sbEludG9WaWV3KCk7XHJcbiAgICAvL2lzRGlzcGxheWVkIzFcclxuICAgIGNvbnN0IFR3aXR0ZXIxID0gYXdhaXQgJCgnW2hyZWY9XCJodHRwczovL3R3aXR0ZXIuY29tL3dlYmRyaXZlcmlvXCJdJyk7XHJcbiAgICBpc0Rpc3BsYXllZDEgPSBhd2FpdCBUd2l0dGVyMS5pc0Rpc3BsYXllZCgpO1xyXG4gICAgY29uc29sZS5sb2coJ1R3aXR0ZXQgSXMgRGlzcGxheWVkPzogJyArIGF3YWl0IGlzRGlzcGxheWVkMSk7XHJcbiAgICBhd2FpdCBicm93c2VyLnBhdXNlKDEwMDApO1xyXG4gICAgLy9pc0Rpc3BsYXllZEluVmlld3BvcnQjMVxyXG4gICAgbGV0IGlzRGlzcGxheWVkSW5WaWV3cG9ydDEgPSBhd2FpdCAkKCdbaHJlZj1cImh0dHBzOi8vdHdpdHRlci5jb20vd2ViZHJpdmVyaW9cIl0nKS5pc0Rpc3BsYXllZEluVmlld3BvcnQoKTtcclxuICAgIGNvbnNvbGUubG9nKCdUd2l0dGV0IGlzIGRpc3BsYXllZCBpbiBWaWV3UG9ydD86ICcgKyBhd2FpdCBpc0Rpc3BsYXllZEluVmlld3BvcnQxKTtcclxuICAgIGF3YWl0IGJyb3dzZXIucGF1c2UoMTAwMCk7XHJcbiAgICAvL2lzRm9jdXNlZCBiZWZvcmUgY2xpY2tcclxuICAgIGNvbnN0IGJsb2cgPSBhd2FpdCAkKCcvL2RpdltAY2xhc3M9XCJuYXZiYXJfX2l0ZW1zXCJdL2EnKTtcclxuICAgIGF3YWl0IGJyb3dzZXIucGF1c2UoMTAwMCk7XHJcbiAgICBjb25zb2xlLmxvZygnYmxvZyBpc0ZvY3VzZWQoKSBiZWZvcmUgY2xpY2s6JyArIGF3YWl0IGJsb2cuaXNGb2N1c2VkKCkpO1xyXG4gICAgYXdhaXQgYnJvd3Nlci5wYXVzZSgxMDAwKTtcclxuICAgIC8vaXNGb2N1c2VkIGFmdGVyIGNsaWNrXHJcbiAgICBhd2FpdCBibG9nLmNsaWNrKCk7XHJcbiAgICBhd2FpdCBicm93c2VyLnBhdXNlKDEwMDApO1xyXG4gICAgY29uc29sZS5sb2coJ2Jsb2cgaXNGb2N1c2VkKCkgYWZ0ZXIgY2xpY2s6JyArIGF3YWl0IGJsb2cuaXNGb2N1c2VkKCkpO1xyXG4gICAgYXdhaXQgYnJvd3Nlci5wYXVzZSgyMDAwKTtcclxufSlcclxuXHJcbiJdLCJtYXBwaW5ncyI6IkFBQUFBLEVBQUUsQ0FBQyxXQUFXLEVBQUUsWUFBWTtFQUN4QixNQUFNQyxPQUFPLENBQUNDLEdBQUcsQ0FBQyxrQ0FBa0MsQ0FBQztFQUNyRCxNQUFNRCxPQUFPLENBQUNFLEtBQUssQ0FBQyxJQUFJLENBQUM7RUFDekI7RUFDQSxNQUFNQyxRQUFRLEdBQUcsTUFBTUMsQ0FBQyxDQUFDLGlDQUFpQyxDQUFDO0VBQzNELE1BQU1DLE9BQU8sR0FBRyxNQUFNRixRQUFRLENBQUNHLFlBQVksQ0FBQyxNQUFNLENBQUM7RUFDbkQ7RUFDQU4sT0FBTyxDQUFDTyxTQUFTLENBQUNGLE9BQU8sQ0FBQztFQUMxQixNQUFNTCxPQUFPLENBQUNFLEtBQUssQ0FBQyxJQUFJLENBQUM7RUFDekI7RUFDQSxNQUFNTSxVQUFVLEdBQUcsTUFBTUosQ0FBQyxDQUFDLG9DQUFvQyxDQUFDO0VBQ2hFSyxXQUFXLEdBQUcsTUFBTUQsVUFBVSxDQUFDQyxXQUFXLENBQUMsQ0FBQztFQUM1Q0Ms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","map":{"version":3,"names":["it","browser","url","pause","JSONWire","$","newwind","getAttribute","newWindow","WikiButton","isDisplayed","console","log","switchWindow","waitUntil","getText","elem","saveScreenshot","Twitter","isDisplayedInViewport","scroll","scrollIntoView","Twitter1","isDisplayed1","isDisplayedInViewport1","blog","isFocused","click"],"sourceRoot":"C:\\Users\\Alex\\desktop\\work2\\test\\specs\\","sources":["basic.js"],"sourcesContent":["it('Homework1', async () => {\r\n    await browser.url('https://v7.webdriver.io/docs/api');\r\n    await browser.pause(2000);\r\n    //getAttribute\r\n    const JSONWire = await $('//*[text()=\"JSONWire protocol\"]');\r\n    const newwind = await JSONWire.getAttribute('href');\r\n    //newWindow\r\n    browser.newWindow(newwind);\r\n    await browser.pause(1000);\r\n    //isDisplayed\r\n    const WikiButton = await $('[href=\"/SeleniumHQ/selenium/wiki\"]');\r\n    isDisplayed = await WikiButton.isDisplayed();\r\n    console.log('Is Displayed?: ' + await isDisplayed);\r\n    await browser.pause(1000);\r\n    //switchWindow\r\n    browser.switchWindow('https://v7.webdriver.io/docs/api');\r\n    await browser.pause(1000);\r\n    //waitUntil\r\n    browser.waitUntil(() => {\r\n        return $('.docTitle_Oumm').getText();\r\n    }, 2000, 'blog is not diaplayed');\r\n    //saveScreenshot\r\n    const elem = $('.docTitle_Oumm');\r\n    elem.saveScreenshot('elemScreenshot.png')\r\n    await browser.pause(1000);\r\n    //isDisplayed\r\n    const Twitter = await $('[href=\"https://twitter.com/webdriverio\"]');\r\n    isDisplayed = await Twitter.isDisplayed();\r\n    console.log('Twittet Is Displayed?: ' + await isDisplayed);\r\n    await browser.pause(1000);\r\n    //isDisplayedInViewport\r\n    let isDisplayedInViewport = await $('[href=\"https://twitter.com/webdriverio\"]').isDisplayedInViewport();\r\n    console.log('Twittet is displayed in ViewPort?: ' + await isDisplayedInViewport);\r\n    await browser.pause(1000);\r\n    //scrollIntroView()\r\n    const scroll = await $('[href=\"https://twitter.com/webdriverio\"]');\r\n    await browser.pause(1000);\r\n    await scroll.scrollIntoView();\r\n    //isDisplayed#1\r\n    const Twitter1 = await $('[href=\"https://twitter.com/webdriverio\"]');\r\n    isDisplayed1 = await Twitter1.isDisplayed();\r\n    console.log('Twittet Is Displayed?: ' + await isDisplayed1);\r\n    await browser.pause(1000);\r\n    //isDisplayedInViewport#1\r\n    let isDisplayedInViewport1 = await $('[href=\"https://twitter.com/webdriverio\"]').isDisplayedInViewport();\r\n    console.log('Twittet is displayed in ViewPort?: ' + await isDisplayedInViewport1);\r\n    await browser.pause(1000);\r\n    //isFocused before click\r\n    const blog = await $('//div[@class=\"navbar__items\"]/a');\r\n    await browser.pause(1000);\r\n    console.log('blog isFocused() before click:' + await blog.isFocused());\r\n    await browser.pause(1000);\r\n    //isFocused after click\r\n    await blog.click();\r\n    await browser.pause(1000);\r\n    console.log('blog isFocused() after click:' + await blog.isFocused());\r\n    await browser.pause(2000);\r\n})\r\n\r\n"],"mappings":"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"}},"mtime":1698701705320},"{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\Alex\\\\Desktop\\\\Work2\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\Alex\\\\Desktop\\\\Work2\",\"filename\":\"C:\\\\Users\\\\Alex\\\\Desktop\\\\Work2\\\\wdio.conf.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"C:\\\\Users\\\\Alex\\\\Desktop\\\\Work2\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.22.11:test":{"value":{"code":"exports.config = {\n  //\n  // ====================\n  // Runner Configuration\n  // ====================\n  // WebdriverIO supports running e2e tests as well as unit and component tests.\n  runner: 'local',\n  //\n  // ==================\n  // Specify Test Files\n  // ==================\n  // Define which test specs should run. The pattern is relative to the directory\n  // of the configuration file being run.\n  //\n  // The specs are defined as an array of spec files (optionally using wildcards\n  // that will be expanded). The test for each spec file will be run in a separate\n  // worker process. In order to have a group of spec files run in the same worker\n  // process simply enclose them in an array within the specs array.\n  //\n  // If you are calling `wdio` from an NPM script (see https://docs.npmjs.com/cli/run-script),\n  // then the current working directory is where your `package.json` resides, so `wdio`\n  // will be called from there.\n  //\n  specs: ['./test/specs/**/*.js'],\n  // Patterns to exclude.\n  exclude: [\n    // 'path/to/excluded/files'\n  ],\n  //\n  // ============\n  // Capabilities\n  // ============\n  // Define your capabilities here. WebdriverIO can run multiple capabilities at the same\n  // time. Depending on the number of capabilities, WebdriverIO launches several test\n  // sessions. Within your capabilities you can overwrite the spec and exclude options in\n  // order to group specific specs to a specific capability.\n  //\n  // First, you can define how many instances should be started at the same time. Let's\n  // say you have 3 different capabilities (Chrome, Firefox, and Safari) and you have\n  // set maxInstances to 1; wdio will spawn 3 processes. Therefore, if you have 10 spec\n  // files and you set maxInstances to 10, all spec files will get tested at the same time\n  // and 30 processes will get spawned. The property handles how many capabilities\n  // from the same test should run tests.\n  //\n  maxInstances: 10,\n  //\n  // If you have trouble getting all important capabilities together, check out the\n  // Sauce Labs platform configurator - a great tool to configure your capabilities:\n  // https://saucelabs.com/platform/platform-configurator\n  //\n  capabilities: [{\n    // capabilities for local browser web tests\n    browserName: 'chrome' // or \"firefox\", \"microsoftedge\", \"safari\"\n  }],\n\n  //\n  // ===================\n  // Test Configurations\n  // ===================\n  // Define all options that are relevant for the WebdriverIO instance here\n  //\n  // Level of logging verbosity: trace | debug | info | warn | error | silent\n  logLevel: 'info',\n  //\n  // Set specific log levels per logger\n  // loggers:\n  // - webdriver, webdriverio\n  // - @wdio/browserstack-service, @wdio/devtools-service, @wdio/sauce-service\n  // - @wdio/mocha-framework, @wdio/jasmine-framework\n  // - @wdio/local-runner\n  // - @wdio/sumologic-reporter\n  // - @wdio/cli, @wdio/config, @wdio/utils\n  // Level of logging verbosity: trace | debug | info | warn | error | silent\n  // logLevels: {\n  //     webdriver: 'info',\n  //     '@wdio/appium-service': 'info'\n  // },\n  //\n  // If you only want to run your tests until a specific amount of tests have failed use\n  // bail (default is 0 - don't bail, run all tests).\n  bail: 0,\n  //\n  // Set a base URL in order to shorten url command calls. If your `url` parameter starts\n  // with `/`, the base url gets prepended, not including the path portion of your baseUrl.\n  // If your `url` parameter starts without a scheme or `/` (like `some/path`), the base url\n  // gets prepended directly.\n  baseUrl: 'http://localhost',\n  //\n  // Default timeout for all waitFor* commands.\n  waitforTimeout: 10000,\n  //\n  // Default timeout in milliseconds for request\n  // if browser driver or grid doesn't send response\n  connectionRetryTimeout: 120000,\n  //\n  // Default request retries count\n  connectionRetryCount: 3,\n  //\n  // Test runner services\n  // Services take over a specific job you don't want to take care of. They enhance\n  // your test setup with almost no effort. Unlike plugins, they don't add new\n  // commands. Instead, they hook themselves up into the test process.\n  // services: [],\n  //\n  // Framework you want to run your specs with.\n  // The following are supported: Mocha, Jasmine, and Cucumber\n  // see also: https://webdriver.io/docs/frameworks\n  //\n  // Make sure you have the wdio adapter package for the specific framework installed\n  // before running any tests.\n  framework: 'mocha',\n  //\n  // The number of times to retry the entire specfile when it fails as a whole\n  // specFileRetries: 1,\n  //\n  // Delay in seconds between the spec file retry attempts\n  // specFileRetriesDelay: 0,\n  //\n  // Whether or not retried spec files should be retried immediately or deferred to the end of the queue\n  // specFileRetriesDeferred: false,\n  //\n  // Test reporter for stdout.\n  // The only one supported by default is 'dot'\n  // see also: https://webdriver.io/docs/dot-reporter\n  reporters: ['spec'],\n  //\n  // Options to be passed to Mocha.\n  // See the full list at http://mochajs.org/\n  mochaOpts: {\n    ui: 'bdd',\n    timeout: 60000\n  }\n  //\n  // =====\n  // Hooks\n  // =====\n  // WebdriverIO provides several hooks you can use to interfere with the test process in order to enhance\n  // it and to build services around it. You can either apply a single function or an array of\n  // methods to it. If one of them returns with a promise, WebdriverIO will wait until that promise got\n  // resolved to continue.\n  /**\n   * Gets executed once before all workers get launched.\n   * @param {object} config wdio configuration object\n   * @param {Array.<Object>} capabilities list of capabilities details\n   */\n  // onPrepare: function (config, capabilities) {\n  // },\n  /**\n   * Gets executed before a worker process is spawned and can be used to initialise specific service\n   * for that worker as well as modify runtime environments in an async fashion.\n   * @param  {string} cid      capability id (e.g 0-0)\n   * @param  {object} caps     object containing capabilities for session that will be spawn in the worker\n   * @param  {object} specs    specs to be run in the worker process\n   * @param  {object} args     object that will be merged with the main configuration once worker is initialized\n   * @param  {object} execArgv list of string arguments passed to the worker process\n   */\n  // onWorkerStart: function (cid, caps, specs, args, execArgv) {\n  // },\n  /**\n   * Gets executed just after a worker process has exited.\n   * @param  {string} cid      capability id (e.g 0-0)\n   * @param  {number} exitCode 0 - success, 1 - fail\n   * @param  {object} specs    specs to be run in the worker process\n   * @param  {number} retries  number of retries used\n   */\n  // onWorkerEnd: function (cid, exitCode, specs, retries) {\n  // },\n  /**\n   * Gets executed just before initialising the webdriver session and test framework. It allows you\n   * to manipulate configurations depending on the capability or spec.\n   * @param {object} config wdio configuration object\n   * @param {Array.<Object>} capabilities list of capabilities details\n   * @param {Array.<String>} specs List of spec file paths that are to be run\n   * @param {string} cid worker id (e.g. 0-0)\n   */\n  // beforeSession: function (config, capabilities, specs, cid) {\n  // },\n  /**\n   * Gets executed before test execution begins. At this point you can access to all global\n   * variables like `browser`. It is the perfect place to define custom commands.\n   * @param {Array.<Object>} capabilities list of capabilities details\n   * @param {Array.<String>} specs        List of spec file paths that are to be run\n   * @param {object}         browser      instance of created browser/device session\n   */\n  // before: function (capabilities, specs) {\n  // },\n  /**\n   * Runs before a WebdriverIO command gets executed.\n   * @param {string} commandName hook command name\n   * @param {Array} args arguments that command would receive\n   */\n  // beforeCommand: function (commandName, args) {\n  // },\n  /**\n   * Hook that gets executed before the suite starts\n   * @param {object} suite suite details\n   */\n  // beforeSuite: function (suite) {\n  // },\n  /**\n   * Function to be executed before a test (in Mocha/Jasmine) starts.\n   */\n  // beforeTest: function (test, context) {\n  // },\n  /**\n   * Hook that gets executed _before_ a hook within the suite starts (e.g. runs before calling\n   * beforeEach in Mocha)\n   */\n  // beforeHook: function (test, context) {\n  // },\n  /**\n   * Hook that gets executed _after_ a hook within the suite starts (e.g. runs after calling\n   * afterEach in Mocha)\n   */\n  // afterHook: function (test, context, { error, result, duration, passed, retries }) {\n  // },\n  /**\n   * Function to be executed after a test (in Mocha/Jasmine only)\n   * @param {object}  test             test object\n   * @param {object}  context          scope object the test was executed with\n   * @param {Error}   result.error     error object in case the test fails, otherwise `undefined`\n   * @param {*}       result.result    return object of test function\n   * @param {number}  result.duration  duration of test\n   * @param {boolean} result.passed    true if test has passed, otherwise false\n   * @param {object}  result.retries   informations to spec related retries, e.g. `{ attempts: 0, limit: 0 }`\n   */\n  // afterTest: function(test, context, { error, result, duration, passed, retries }) {\n  // },\n\n  /**\n   * Hook that gets executed after the suite has ended\n   * @param {object} suite suite details\n   */\n  // afterSuite: function (suite) {\n  // },\n  /**\n   * Runs after a WebdriverIO command gets executed\n   * @param {string} commandName hook command name\n   * @param {Array} args arguments that command would receive\n   * @param {number} result 0 - command success, 1 - command error\n   * @param {object} error error object if any\n   */\n  // afterCommand: function (commandName, args, result, error) {\n  // },\n  /**\n   * Gets executed after all tests are done. You still have access to all global variables from\n   * the test.\n   * @param {number} result 0 - test pass, 1 - test fail\n   * @param {Array.<Object>} capabilities list of capabilities details\n   * @param {Array.<String>} specs List of spec file paths that ran\n   */\n  // after: function (result, capabilities, specs) {\n  // },\n  /**\n   * Gets executed right after terminating the webdriver session.\n   * @param {object} config wdio configuration object\n   * @param {Array.<Object>} capabilities list of capabilities details\n   * @param {Array.<String>} specs List of spec file paths that ran\n   */\n  // afterSession: function (config, capabilities, specs) {\n  // },\n  /**\n   * Gets executed after all workers got shut down and the process is about to exit. An error\n   * thrown in the onComplete hook will result in the test run failing.\n   * @param {object} exitCode 0 - success, 1 - fail\n   * @param {object} config wdio configuration object\n   * @param {Array.<Object>} capabilities list of capabilities details\n   * @param {<Object>} results object containing test results\n   */\n  // onComplete: function(exitCode, config, capabilities, results) {\n  // },\n  /**\n  * Gets executed when a refresh happens.\n  * @param {string} oldSessionId session ID of the old session\n  * @param {string} newSessionId session ID of the new session\n  */\n  // onReload: function(oldSessionId, newSessionId) {\n  // }\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","map":{"version":3,"names":["exports","config","runner","specs","exclude","maxInstances","capabilities","browserName","logLevel","bail","baseUrl","waitforTimeout","connectionRetryTimeout","connectionRetryCount","framework","reporters","mochaOpts","ui","timeout"],"sourceRoot":"C:\\Users\\Alex\\Desktop\\Work2\\","sources":["wdio.conf.js"],"sourcesContent":["exports.config = {\n    //\n    // ====================\n    // Runner Configuration\n    // ====================\n    // WebdriverIO supports running e2e tests as well as unit and component tests.\n    runner: 'local',\n    //\n    // ==================\n    // Specify Test Files\n    // ==================\n    // Define which test specs should run. The pattern is relative to the directory\n    // of the configuration file being run.\n    //\n    // The specs are defined as an array of spec files (optionally using wildcards\n    // that will be expanded). The test for each spec file will be run in a separate\n    // worker process. In order to have a group of spec files run in the same worker\n    // process simply enclose them in an array within the specs array.\n    //\n    // If you are calling `wdio` from an NPM script (see https://docs.npmjs.com/cli/run-script),\n    // then the current working directory is where your `package.json` resides, so `wdio`\n    // will be called from there.\n    //\n    specs: [\n        './test/specs/**/*.js'\n    ],\n    // Patterns to exclude.\n    exclude: [\n        // 'path/to/excluded/files'\n    ],\n    //\n    // ============\n    // Capabilities\n    // ============\n    // Define your capabilities here. WebdriverIO can run multiple capabilities at the same\n    // time. Depending on the number of capabilities, WebdriverIO launches several test\n    // sessions. Within your capabilities you can overwrite the spec and exclude options in\n    // order to group specific specs to a specific capability.\n    //\n    // First, you can define how many instances should be started at the same time. Let's\n    // say you have 3 different capabilities (Chrome, Firefox, and Safari) and you have\n    // set maxInstances to 1; wdio will spawn 3 processes. Therefore, if you have 10 spec\n    // files and you set maxInstances to 10, all spec files will get tested at the same time\n    // and 30 processes will get spawned. The property handles how many capabilities\n    // from the same test should run tests.\n    //\n    maxInstances: 10,\n    //\n    // If you have trouble getting all important capabilities together, check out the\n    // Sauce Labs platform configurator - a great tool to configure your capabilities:\n    // https://saucelabs.com/platform/platform-configurator\n    //\n    capabilities: [{\n        // capabilities for local browser web tests\n        browserName: 'chrome' // or \"firefox\", \"microsoftedge\", \"safari\"\n    }],\n\n    //\n    // ===================\n    // Test Configurations\n    // ===================\n    // Define all options that are relevant for the WebdriverIO instance here\n    //\n    // Level of logging verbosity: trace | debug | info | warn | error | silent\n    logLevel: 'info',\n    //\n    // Set specific log levels per logger\n    // loggers:\n    // - webdriver, webdriverio\n    // - @wdio/browserstack-service, @wdio/devtools-service, @wdio/sauce-service\n    // - @wdio/mocha-framework, @wdio/jasmine-framework\n    // - @wdio/local-runner\n    // - @wdio/sumologic-reporter\n    // - @wdio/cli, @wdio/config, @wdio/utils\n    // Level of logging verbosity: trace | debug | info | warn | error | silent\n    // logLevels: {\n    //     webdriver: 'info',\n    //     '@wdio/appium-service': 'info'\n    // },\n    //\n    // If you only want to run your tests until a specific amount of tests have failed use\n    // bail (default is 0 - don't bail, run all tests).\n    bail: 0,\n    //\n    // Set a base URL in order to shorten url command calls. If your `url` parameter starts\n    // with `/`, the base url gets prepended, not including the path portion of your baseUrl.\n    // If your `url` parameter starts without a scheme or `/` (like `some/path`), the base url\n    // gets prepended directly.\n    baseUrl: 'http://localhost',\n    //\n    // Default timeout for all waitFor* commands.\n    waitforTimeout: 10000,\n    //\n    // Default timeout in milliseconds for request\n    // if browser driver or grid doesn't send response\n    connectionRetryTimeout: 120000,\n    //\n    // Default request retries count\n    connectionRetryCount: 3,\n    //\n    // Test runner services\n    // Services take over a specific job you don't want to take care of. They enhance\n    // your test setup with almost no effort. Unlike plugins, they don't add new\n    // commands. Instead, they hook themselves up into the test process.\n    // services: [],\n    //\n    // Framework you want to run your specs with.\n    // The following are supported: Mocha, Jasmine, and Cucumber\n    // see also: https://webdriver.io/docs/frameworks\n    //\n    // Make sure you have the wdio adapter package for the specific framework installed\n    // before running any tests.\n    framework: 'mocha',\n    //\n    // The number of times to retry the entire specfile when it fails as a whole\n    // specFileRetries: 1,\n    //\n    // Delay in seconds between the spec file retry attempts\n    // specFileRetriesDelay: 0,\n    //\n    // Whether or not retried spec files should be retried immediately or deferred to the end of the queue\n    // specFileRetriesDeferred: false,\n    //\n    // Test reporter for stdout.\n    // The only one supported by default is 'dot'\n    // see also: https://webdriver.io/docs/dot-reporter\n    reporters: ['spec'],\n\n    \n    //\n    // Options to be passed to Mocha.\n    // See the full list at http://mochajs.org/\n    mochaOpts: {\n        ui: 'bdd',\n        timeout: 60000\n    },\n    //\n    // =====\n    // Hooks\n    // =====\n    // WebdriverIO provides several hooks you can use to interfere with the test process in order to enhance\n    // it and to build services around it. You can either apply a single function or an array of\n    // methods to it. If one of them returns with a promise, WebdriverIO will wait until that promise got\n    // resolved to continue.\n    /**\n     * Gets executed once before all workers get launched.\n     * @param {object} config wdio configuration object\n     * @param {Array.<Object>} capabilities list of capabilities details\n     */\n    // onPrepare: function (config, capabilities) {\n    // },\n    /**\n     * Gets executed before a worker process is spawned and can be used to initialise specific service\n     * for that worker as well as modify runtime environments in an async fashion.\n     * @param  {string} cid      capability id (e.g 0-0)\n     * @param  {object} caps     object containing capabilities for session that will be spawn in the worker\n     * @param  {object} specs    specs to be run in the worker process\n     * @param  {object} args     object that will be merged with the main configuration once worker is initialized\n     * @param  {object} execArgv list of string arguments passed to the worker process\n     */\n    // onWorkerStart: function (cid, caps, specs, args, execArgv) {\n    // },\n    /**\n     * Gets executed just after a worker process has exited.\n     * @param  {string} cid      capability id (e.g 0-0)\n     * @param  {number} exitCode 0 - success, 1 - fail\n     * @param  {object} specs    specs to be run in the worker process\n     * @param  {number} retries  number of retries used\n     */\n    // onWorkerEnd: function (cid, exitCode, specs, retries) {\n    // },\n    /**\n     * Gets executed just before initialising the webdriver session and test framework. It allows you\n     * to manipulate configurations depending on the capability or spec.\n     * @param {object} config wdio configuration object\n     * @param {Array.<Object>} capabilities list of capabilities details\n     * @param {Array.<String>} specs List of spec file paths that are to be run\n     * @param {string} cid worker id (e.g. 0-0)\n     */\n    // beforeSession: function (config, capabilities, specs, cid) {\n    // },\n    /**\n     * Gets executed before test execution begins. At this point you can access to all global\n     * variables like `browser`. It is the perfect place to define custom commands.\n     * @param {Array.<Object>} capabilities list of capabilities details\n     * @param {Array.<String>} specs        List of spec file paths that are to be run\n     * @param {object}         browser      instance of created browser/device session\n     */\n    // before: function (capabilities, specs) {\n    // },\n    /**\n     * Runs before a WebdriverIO command gets executed.\n     * @param {string} commandName hook command name\n     * @param {Array} args arguments that command would receive\n     */\n    // beforeCommand: function (commandName, args) {\n    // },\n    /**\n     * Hook that gets executed before the suite starts\n     * @param {object} suite suite details\n     */\n    // beforeSuite: function (suite) {\n    // },\n    /**\n     * Function to be executed before a test (in Mocha/Jasmine) starts.\n     */\n    // beforeTest: function (test, context) {\n    // },\n    /**\n     * Hook that gets executed _before_ a hook within the suite starts (e.g. runs before calling\n     * beforeEach in Mocha)\n     */\n    // beforeHook: function (test, context) {\n    // },\n    /**\n     * Hook that gets executed _after_ a hook within the suite starts (e.g. runs after calling\n     * afterEach in Mocha)\n     */\n    // afterHook: function (test, context, { error, result, duration, passed, retries }) {\n    // },\n    /**\n     * Function to be executed after a test (in Mocha/Jasmine only)\n     * @param {object}  test             test object\n     * @param {object}  context          scope object the test was executed with\n     * @param {Error}   result.error     error object in case the test fails, otherwise `undefined`\n     * @param {*}       result.result    return object of test function\n     * @param {number}  result.duration  duration of test\n     * @param {boolean} result.passed    true if test has passed, otherwise false\n     * @param {object}  result.retries   informations to spec related retries, e.g. `{ attempts: 0, limit: 0 }`\n     */\n    // afterTest: function(test, context, { error, result, duration, passed, retries }) {\n    // },\n\n\n    /**\n     * Hook that gets executed after the suite has ended\n     * @param {object} suite suite details\n     */\n    // afterSuite: function (suite) {\n    // },\n    /**\n     * Runs after a WebdriverIO command gets executed\n     * @param {string} commandName hook command name\n     * @param {Array} args arguments that command would receive\n     * @param {number} result 0 - command success, 1 - command error\n     * @param {object} error error object if any\n     */\n    // afterCommand: function (commandName, args, result, error) {\n    // },\n    /**\n     * Gets executed after all tests are done. You still have access to all global variables from\n     * the test.\n     * @param {number} result 0 - test pass, 1 - test fail\n     * @param {Array.<Object>} capabilities list of capabilities details\n     * @param {Array.<String>} specs List of spec file paths that ran\n     */\n    // after: function (result, capabilities, specs) {\n    // },\n    /**\n     * Gets executed right after terminating the webdriver session.\n     * @param {object} config wdio configuration object\n     * @param {Array.<Object>} capabilities list of capabilities details\n     * @param {Array.<String>} specs List of spec file paths that ran\n     */\n    // afterSession: function (config, capabilities, specs) {\n    // },\n    /**\n     * Gets executed after all workers got shut down and the process is about to exit. An error\n     * thrown in the onComplete hook will result in the test run failing.\n     * @param {object} exitCode 0 - success, 1 - fail\n     * @param {object} config wdio configuration object\n     * @param {Array.<Object>} capabilities list of capabilities details\n     * @param {<Object>} results object containing test results\n     */\n    // onComplete: function(exitCode, config, capabilities, results) {\n    // },\n    /**\n    * Gets executed when a refresh happens.\n    * @param {string} oldSessionId session ID of the old session\n    * @param {string} newSessionId session ID of the new session\n    */\n    // onReload: function(oldSessionId, newSessionId) {\n    // }\n}\n"],"mappings":"AAAAA,OAAO,CAACC,MAAM,GAAG;EACb;EACA;EACA;EACA;EACA;EACAC,MAAM,EAAE,OAAO;EACf;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACAC,KAAK,EAAE,CACH,sBAAsB,CACzB;EACD;EACAC,OAAO,EAAE;IACL;EAAA,CACH;EACD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACAC,YAAY,EAAE,EAAE;EAChB;EACA;EACA;EACA;EACA;EACAC,YAAY,EAAE,CAAC;IACX;IACAC,WAAW,EAAE,QAAQ,CAAC;EAC1B,CAAC,CAAC;;EAEF;EACA;EACA;EACA;EACA;EACA;EACA;EACAC,QAAQ,EAAE,MAAM;EAChB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACAC,IAAI,EAAE,CAAC;EACP;EACA;EACA;EACA;EACA;EACAC,OAAO,EAAE,kBAAkB;EAC3B;EACA;EACAC,cAAc,EAAE,KAAK;EACrB;EACA;EACA;EACAC,sBAAsB,EAAE,MAAM;EAC9B;EACA;EACAC,oBAAoB,EAAE,CAAC;EACvB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACAC,SAAS,EAAE,OAAO;EAClB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACAC,SAAS,EAAE,CAAC,MAAM,CAAC;EAGnB;EACA;EACA;EACAC,SAAS,EAAE;IACPC,EAAE,EAAE,KAAK;IACTC,OAAO,EAAE;EACb;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACJ;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI;EACA;;EAGA;AACJ;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;EACI;EACA;EACA;AACJ;AACA;AACA;AACA;EACI;EACA;AACJ,CAAC"}},"mtime":1693336488935},"{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\Alex\\\\Desktop\\\\Work2\\\\test\\\\specs\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\Users\\\\Alex\\\\Desktop\\\\Work2\",\"filename\":\"C:\\\\Users\\\\Alex\\\\Desktop\\\\Work2\\\\test\\\\specs\\\\basic.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"C:\\\\Users\\\\Alex\\\\Desktop\\\\Work2\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.22.11:test":{"value":{"code":"it('Homework1', async () => {\n  await browser.url('https://v7.webdriver.io/docs/api');\n  await browser.pause(2000);\n  //getAttribute\n  const JSONWire = await $('//*[text()=\"JSONWire protocol\"]');\n  const newwind = await JSONWire.getAttribute('href');\n  //newWindow\n  browser.newWindow(newwind);\n  await browser.pause(1000);\n  //isDisplayed\n  const WikiButton = await $('[href=\"/SeleniumHQ/selenium/wiki\"]');\n  isDisplayed = await WikiButton.isDisplayed();\n  console.log('Is Displayed?: ' + (await isDisplayed));\n  await browser.pause(1000);\n  //switchWindow\n  browser.switchWindow('https://v7.webdriver.io/docs/api');\n  await browser.pause(1000);\n  //waitUntil\n  browser.waitUntil(() => {\n    return $('.docTitle_Oumm').getText();\n  }, 2000, 'blog is not diaplayed');\n  //saveScreenshot\n  const elem = $('.docTitle_Oumm');\n  elem.saveScreenshot('elemScreenshot.png');\n  await browser.pause(1000);\n  //isDisplayed\n  const Twitter = await $('[href=\"https://twitter.com/webdriverio\"]');\n  isDisplayed = await Twitter.isDisplayed();\n  console.log('Twittet Is Displayed?: ' + (await isDisplayed));\n  await browser.pause(1000);\n  //isDisplayedInViewport\n  let isDisplayedInViewport = await $('[href=\"https://twitter.com/webdriverio\"]').isDisplayedInViewport();\n  console.log('Twittet is displayed in ViewPort?: ' + (await isDisplayedInViewport));\n  await browser.pause(1000);\n  //scrollIntroView()\n  const scroll = await $('[href=\"https://twitter.com/webdriverio\"]');\n  await browser.pause(1000);\n  await scroll.scrollIntoView();\n  //isDisplayed#1\n  const Twitter1 = await $('[href=\"https://twitter.com/webdriverio\"]');\n  isDisplayed1 = await Twitter1.isDisplayed();\n  console.log('Twittet Is Displayed?: ' + (await isDisplayed1));\n  await browser.pause(1000);\n  //isDisplayedInViewport#1\n  let isDisplayedInViewport1 = await $('[href=\"https://twitter.com/webdriverio\"]').isDisplayedInViewport();\n  console.log('Twittet is displayed in ViewPort?: ' + (await isDisplayedInViewport1));\n  await browser.pause(1000);\n  //isFocused before click\n  const blog = await $('//div[@class=\"navbar__items\"]/a');\n  await browser.pause(1000);\n  console.log('blog isFocused() before click:' + (await blog.isFocused()));\n  await browser.pause(1000);\n  //isFocused after click\n  await blog.click();\n  await browser.pause(1000);\n  console.log('blog isFocused() after click:' + (await blog.isFocused()));\n  await browser.pause(2000);\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJpdCIsImJyb3dzZXIiLCJ1cmwiLCJwYXVzZSIsIkpTT05XaXJlIiwiJCIsIm5ld3dpbmQiLCJnZXRBdHRyaWJ1dGUiLCJuZXdXaW5kb3ciLCJXaWtpQnV0dG9uIiwiaXNEaXNwbGF5ZWQiLCJjb25zb2xlIiwibG9nIiwic3dpdGNoV2luZG93Iiwid2FpdFVudGlsIiwiZ2V0VGV4dCIsImVsZW0iLCJzYXZlU2NyZWVuc2hvdCIsIlR3aXR0ZXIiLCJpc0Rpc3BsYXllZEluVmlld3BvcnQiLCJzY3JvbGwiLCJzY3JvbGxJbnRvVmlldyIsIlR3aXR0ZXIxIiwiaXNEaXNwbGF5ZWQxIiwiaXNEaXNwbGF5ZWRJblZpZXdwb3J0MSIsImJsb2ciLCJpc0ZvY3VzZWQiLCJjbGljayJdLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFxBbGV4XFxEZXNrdG9wXFxXb3JrMlxcdGVzdFxcc3BlY3NcXCIsInNvdXJjZXMiOlsiYmFzaWMuanMiXSwic291cmNlc0NvbnRlbnQiOlsiaXQoJ0hvbWV3b3JrMScsIGFzeW5jICgpID0+IHtcclxuICAgIGF3YWl0IGJyb3dzZXIudXJsKCdodHRwczovL3Y3LndlYmRyaXZlci5pby9kb2NzL2FwaScpO1xyXG4gICAgYXdhaXQgYnJvd3Nlci5wYXVzZSgyMDAwKTtcclxuICAgIC8vZ2V0QXR0cmlidXRlXHJcbiAgICBjb25zdCBKU09OV2lyZSA9IGF3YWl0ICQoJy8vKlt0ZXh0KCk9XCJKU09OV2lyZSBwcm90b2NvbFwiXScpO1xyXG4gICAgY29uc3QgbmV3d2luZCA9IGF3YWl0IEpTT05XaXJlLmdldEF0dHJpYnV0ZSgnaHJlZicpO1xyXG4gICAgLy9uZXdXaW5kb3dcclxuICAgIGJyb3dzZXIubmV3V2luZG93KG5ld3dpbmQpO1xyXG4gICAgYXdhaXQgYnJvd3Nlci5wYXVzZSgxMDAwKTtcclxuICAgIC8vaXNEaXNwbGF5ZWRcclxuICAgIGNvbnN0IFdpa2lCdXR0b24gPSBhd2FpdCAkKCdbaHJlZj1cIi9TZWxlbml1bUhRL3NlbGVuaXVtL3dpa2lcIl0nKTtcclxuICAgIGlzRGlzcGxheWVkID0gYXdhaXQgV2lraUJ1dHRvbi5pc0Rpc3BsYXllZCgpO1xyXG4gICAgY29uc29sZS5sb2coJ0lzIERpc3BsYXllZD86ICcgKyBhd2FpdCBpc0Rpc3BsYXllZCk7XHJcbiAgICBhd2FpdCBicm93c2VyLnBhdXNlKDEwMDApO1xyXG4gICAgLy9zd2l0Y2hXaW5kb3dcclxuICAgIGJyb3dzZXIuc3dpdGNoV2luZG93KCdodHRwczovL3Y3LndlYmRyaXZlci5pby9kb2NzL2FwaScpO1xyXG4gICAgYXdhaXQgYnJvd3Nlci5wYXVzZSgxMDAwKTtcclxuICAgIC8vd2FpdFVudGlsXHJcbiAgICBicm93c2VyLndhaXRVbnRpbCgoKSA9PiB7XHJcbiAgICAgICAgcmV0dXJuICQoJy5kb2NUaXRsZV9PdW1tJykuZ2V0VGV4dCgpO1xyXG4gICAgfSwgMjAwMCwgJ2Jsb2cgaXMgbm90IGRpYXBsYXllZCcpO1xyXG4gICAgLy9zYXZlU2NyZWVuc2hvdFxyXG4gICAgY29uc3QgZWxlbSA9ICQoJy5kb2NUaXRsZV9PdW1tJyk7XHJcbiAgICBlbGVtLnNhdmVTY3JlZW5zaG90KCdlbGVtU2NyZWVuc2hvdC5wbmcnKVxyXG4gICAgYXdhaXQgYnJvd3Nlci5wYXVzZSgxMDAwKTtcclxuICAgIC8vaXNEaXNwbGF5ZWRcclxuICAgIGNvbnN0IFR3aXR0ZXIgPSBhd2FpdCAkKCdbaHJlZj1cImh0dHBzOi8vdHdpdHRlci5jb20vd2ViZHJpdmVyaW9cIl0nKTtcclxuICAgIGlzRGlzcGxheWVkID0gYXdhaXQgVHdpdHRlci5pc0Rpc3BsYXllZCgpO1xyXG4gICAgY29uc29sZS5sb2coJ1R3aXR0ZXQgSXMgRGlzcGxheWVkPzogJyArIGF3YWl0IGlzRGlzcGxheWVkKTtcclxuICAgIGF3YWl0IGJyb3dzZXIucGF1c2UoMTAwMCk7XHJcbiAgICAvL2lzRGlzcGxheWVkSW5WaWV3cG9ydFxyXG4gICAgbGV0IGlzRGlzcGxheWVkSW5WaWV3cG9ydCA9IGF3YWl0ICQoJ1tocmVmPVwiaHR0cHM6Ly90d2l0dGVyLmNvbS93ZWJkcml2ZXJpb1wiXScpLmlzRGlzcGxheWVkSW5WaWV3cG9ydCgpO1xyXG4gICAgY29uc29sZS5sb2coJ1R3aXR0ZXQgaXMgZGlzcGxheWVkIGluIFZpZXdQb3J0PzogJyArIGF3YWl0IGlzRGlzcGxheWVkSW5WaWV3cG9ydCk7XHJcbiAgICBhd2FpdCBicm93c2VyLnBhdXNlKDEwMDApO1xyXG4gICAgLy9zY3JvbGxJbnRyb1ZpZXcoKVxyXG4gICAgY29uc3Qgc2Nyb2xsID0gYXdhaXQgJCgnW2hyZWY9XCJodHRwczovL3R3aXR0ZXIuY29tL3dlYmRyaXZlcmlvXCJdJyk7XHJcbiAgICBhd2FpdCBicm93c2VyLnBhdXNlKDEwMDApO1xyXG4gICAgYXdhaXQgc2Nyb2xsLnNjcm9sbEludG9WaWV3KCk7XHJcbiAgICAvL2lzRGlzcGxheWVkIzFcclxuICAgIGNvbnN0IFR3aXR0ZXIxID0gYXdhaXQgJCgnW2hyZWY9XCJodHRwczovL3R3aXR0ZXIuY29tL3dlYmRyaXZlcmlvXCJdJyk7XHJcbiAgICBpc0Rpc3BsYXllZDEgPSBhd2FpdCBUd2l0dGVyMS5pc0Rpc3BsYXllZCgpO1xyXG4gICAgY29uc29sZS5sb2coJ1R3aXR0ZXQgSXMgRGlzcGxheWVkPzogJyArIGF3YWl0IGlzRGlzcGxheWVkMSk7XHJcbiAgICBhd2FpdCBicm93c2VyLnBhdXNlKDEwMDApO1xyXG4gICAgLy9pc0Rpc3BsYXllZEluVmlld3BvcnQjMVxyXG4gICAgbGV0IGlzRGlzcGxheWVkSW5WaWV3cG9ydDEgPSBhd2FpdCAkKCdbaHJlZj1cImh0dHBzOi8vdHdpdHRlci5jb20vd2ViZHJpdmVyaW9cIl0nKS5pc0Rpc3BsYXllZEluVmlld3BvcnQoKTtcclxuICAgIGNvbnNvbGUubG9nKCdUd2l0dGV0IGlzIGRpc3BsYXllZCBpbiBWaWV3UG9ydD86ICcgKyBhd2FpdCBpc0Rpc3BsYXllZEluVmlld3BvcnQxKTtcclxuICAgIGF3YWl0IGJyb3dzZXIucGF1c2UoMTAwMCk7XHJcbiAgICAvL2lzRm9jdXNlZCBiZWZvcmUgY2xpY2tcclxuICAgIGNvbnN0IGJsb2cgPSBhd2FpdCAkKCcvL2RpdltAY2xhc3M9XCJuYXZiYXJfX2l0ZW1zXCJdL2EnKTtcclxuICAgIGF3YWl0IGJyb3dzZXIucGF1c2UoMTAwMCk7XHJcbiAgICBjb25zb2xlLmxvZygnYmxvZyBpc0ZvY3VzZWQoKSBiZWZvcmUgY2xpY2s6JyArIGF3YWl0IGJsb2cuaXNGb2N1c2VkKCkpO1xyXG4gICAgYXdhaXQgYnJvd3Nlci5wYXVzZSgxMDAwKTtcclxuICAgIC8vaXNGb2N1c2VkIGFmdGVyIGNsaWNrXHJcbiAgICBhd2FpdCBibG9nLmNsaWNrKCk7XHJcbiAgICBhd2FpdCBicm93c2VyLnBhdXNlKDEwMDApO1xyXG4gICAgY29uc29sZS5sb2coJ2Jsb2cgaXNGb2N1c2VkKCkgYWZ0ZXIgY2xpY2s6JyArIGF3YWl0IGJsb2cuaXNGb2N1c2VkKCkpO1xyXG4gICAgYXdhaXQgYnJvd3Nlci5wYXVzZSgyMDAwKTtcclxufSlcclxuXHJcbiJdLCJtYXBwaW5ncyI6IkFBQUFBLEVBQUUsQ0FBQyxXQUFXLEVBQUUsWUFBWTtFQUN4QixNQUFNQyxPQUFPLENBQUNDLEdBQUcsQ0FBQyxrQ0FBa0MsQ0FBQztFQUNyRCxNQUFNRCxPQUFPLENBQUNFLEtBQUssQ0FBQyxJQUFJLENBQUM7RUFDekI7RUFDQSxNQUFNQyxRQUFRLEdBQUcsTUFBTUMsQ0FBQyxDQUFDLGlDQUFpQyxDQUFDO0VBQzNELE1BQU1DLE9BQU8sR0FBRyxNQUFNRixRQUFRLENBQUNHLFlBQVksQ0FBQyxNQUFNLENBQUM7RUFDbkQ7RUFDQU4sT0FBTyxDQUFDTyxTQUFTLENBQUNGLE9BQU8sQ0FBQztFQUMxQixNQUFNTCxPQUFPLENBQUNFLEtBQUssQ0FBQyxJQUFJLENBQUM7RUFDekI7RUFDQSxNQUFNTSxVQUFVLEdBQUcsTUFBTUosQ0FBQyxDQUFDLG9DQUFvQyxDQUFDO0VBQ2hFSyxXQUFXLEdBQUcsTUFBTUQsVUFBVSxDQUFDQyxXQUFXLENBQUMsQ0FBQztFQUM1Q0Ms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","map":{"version":3,"names":["it","browser","url","pause","JSONWire","$","newwind","getAttribute","newWindow","WikiButton","isDisplayed","console","log","switchWindow","waitUntil","getText","elem","saveScreenshot","Twitter","isDisplayedInViewport","scroll","scrollIntoView","Twitter1","isDisplayed1","isDisplayedInViewport1","blog","isFocused","click"],"sourceRoot":"C:\\Users\\Alex\\Desktop\\Work2\\test\\specs\\","sources":["basic.js"],"sourcesContent":["it('Homework1', async () => {\r\n    await browser.url('https://v7.webdriver.io/docs/api');\r\n    await browser.pause(2000);\r\n    //getAttribute\r\n    const JSONWire = await $('//*[text()=\"JSONWire protocol\"]');\r\n    const newwind = await JSONWire.getAttribute('href');\r\n    //newWindow\r\n    browser.newWindow(newwind);\r\n    await browser.pause(1000);\r\n    //isDisplayed\r\n    const WikiButton = await $('[href=\"/SeleniumHQ/selenium/wiki\"]');\r\n    isDisplayed = await WikiButton.isDisplayed();\r\n    console.log('Is Displayed?: ' + await isDisplayed);\r\n    await browser.pause(1000);\r\n    //switchWindow\r\n    browser.switchWindow('https://v7.webdriver.io/docs/api');\r\n    await browser.pause(1000);\r\n    //waitUntil\r\n    browser.waitUntil(() => {\r\n        return $('.docTitle_Oumm').getText();\r\n    }, 2000, 'blog is not diaplayed');\r\n    //saveScreenshot\r\n    const elem = $('.docTitle_Oumm');\r\n    elem.saveScreenshot('elemScreenshot.png')\r\n    await browser.pause(1000);\r\n    //isDisplayed\r\n    const Twitter = await $('[href=\"https://twitter.com/webdriverio\"]');\r\n    isDisplayed = await Twitter.isDisplayed();\r\n    console.log('Twittet Is Displayed?: ' + await isDisplayed);\r\n    await browser.pause(1000);\r\n    //isDisplayedInViewport\r\n    let isDisplayedInViewport = await $('[href=\"https://twitter.com/webdriverio\"]').isDisplayedInViewport();\r\n    console.log('Twittet is displayed in ViewPort?: ' + await isDisplayedInViewport);\r\n    await browser.pause(1000);\r\n    //scrollIntroView()\r\n    const scroll = await $('[href=\"https://twitter.com/webdriverio\"]');\r\n    await browser.pause(1000);\r\n    await scroll.scrollIntoView();\r\n    //isDisplayed#1\r\n    const Twitter1 = await $('[href=\"https://twitter.com/webdriverio\"]');\r\n    isDisplayed1 = await Twitter1.isDisplayed();\r\n    console.log('Twittet Is Displayed?: ' + await isDisplayed1);\r\n    await browser.pause(1000);\r\n    //isDisplayedInViewport#1\r\n    let isDisplayedInViewport1 = await $('[href=\"https://twitter.com/webdriverio\"]').isDisplayedInViewport();\r\n    console.log('Twittet is displayed in ViewPort?: ' + await isDisplayedInViewport1);\r\n    await browser.pause(1000);\r\n    //isFocused before click\r\n    const blog = await $('//div[@class=\"navbar__items\"]/a');\r\n    await browser.pause(1000);\r\n    console.log('blog isFocused() before click:' + await blog.isFocused());\r\n    await browser.pause(1000);\r\n    //isFocused after click\r\n    await blog.click();\r\n    await browser.pause(1000);\r\n    console.log('blog isFocused() after click:' + await blog.isFocused());\r\n    await browser.pause(2000);\r\n})\r\n\r\n"],"mappings":"AAAAA,EAAE,CAAC,WAAW,EAAE,YAAY;EACxB,MAAMC,OAAO,CAACC,GAAG,CAAC,kCAAkC,CAAC;EACrD,MAAMD,OAAO,CAACE,KAAK,CAAC,IAAI,CAAC;EACzB;EACA,MAAMC,QAAQ,GAAG,MAAMC,CAAC,CAAC,iCAAiC,CAAC;EAC3D,MAAMC,OAAO,GAAG,MAAMF,QAAQ,CAACG,YAAY,CAAC,MAAM,CAAC;EACnD;EACAN,OAAO,CAACO,SAAS,CAACF,OAAO,CAAC;EAC1B,MAAML,OAAO,CAACE,KAAK,CAAC,IAAI,CAAC;EACzB;EACA,MAAMM,UAAU,GAAG,MAAMJ,CAAC,CAAC,oCAAoC,CAAC;EAChEK,WAAW,GAAG,MAAMD,UAAU,CAACC,WAAW,CAAC,CAAC;EAC5CC,OAAO,CAACC,GAAG,CAAC,iBAAiB,IAAG,MAAMF,WAAW,EAAC;EAClD,MAAMT,OAAO,CAACE,KAAK,CAAC,IAAI,CAAC;EACzB;EACAF,OAAO,CAACY,YAAY,CAAC,kCAAkC,CAAC;EACxD,MAAMZ,OAAO,CAACE,KAAK,CAAC,IAAI,CAAC;EACzB;EACAF,OAAO,CAACa,SAAS,CAAC,MAAM;IACpB,OAAOT,CAAC,CAAC,gBAAgB,CAAC,CAACU,OAAO,CAAC,CAAC;EACxC,CAAC,EAAE,IAAI,EAAE,uBAAuB,CAAC;EACjC;EACA,MAAMC,IAAI,GAAGX,CAAC,CAAC,gBAAgB,CAAC;EAChCW,IAAI,CAACC,cAAc,CAAC,oBAAoB,CAAC;EACzC,MAAMhB,OAAO,CAACE,KAAK,CAAC,IAAI,CAAC;EACzB;EACA,MAAMe,OAAO,GAAG,MAAMb,CAAC,CAAC,0CAA0C,CAAC;EACnEK,WAAW,GAAG,MAAMQ,OAAO,CAACR,WAAW,CAAC,CAAC;EACzCC,OAAO,CAACC,GAAG,CAAC,yBAAyB,IAAG,MAAMF,WAAW,EAAC;EAC1D,MAAMT,OAAO,CAACE,KAAK,CAAC,IAAI,CAAC;EACzB;EACA,IAAIgB,qBAAqB,GAAG,MAAMd,CAAC,CAAC,0CAA0C,CAAC,CAACc,qBAAqB,CAAC,CAAC;EACvGR,OAAO,CAACC,GAAG,CAAC,qCAAqC,IAAG,MAAMO,qBAAqB,EAAC;EAChF,MAAMlB,OAAO,CAACE,KAAK,CAAC,IAAI,CAAC;EACzB;EACA,MAAMiB,MAAM,GAAG,MAAMf,CAAC,CAAC,0CAA0C,CAAC;EAClE,MAAMJ,OAAO,CAACE,KAAK,CAAC,IAAI,CAAC;EACzB,MAAMiB,MAAM,CAACC,cAAc,CAAC,CAAC;EAC7B;EACA,MAAMC,QAAQ,GAAG,MAAMjB,CAAC,CAAC,0CAA0C,CAAC;EACpEkB,YAAY,GAAG,MAAMD,QAAQ,CAACZ,WAAW,CAAC,CAAC;EAC3CC,OAAO,CAACC,GAAG,CAAC,yBAAyB,IAAG,MAAMW,YAAY,EAAC;EAC3D,MAAMtB,OAAO,CAACE,KAAK,CAAC,IAAI,CAAC;EACzB;EACA,IAAIqB,sBAAsB,GAAG,MAAMnB,CAAC,CAAC,0CAA0C,CAAC,CAACc,qBAAqB,CAAC,CAAC;EACxGR,OAAO,CAACC,GAAG,CAAC,qCAAqC,IAAG,MAAMY,sBAAsB,EAAC;EACjF,MAAMvB,OAAO,CAACE,KAAK,CAAC,IAAI,CAAC;EACzB;EACA,MAAMsB,IAAI,GAAG,MAAMpB,CAAC,CAAC,iCAAiC,CAAC;EACvD,MAAMJ,OAAO,CAACE,KAAK,CAAC,IAAI,CAAC;EACzBQ,OAAO,CAACC,GAAG,CAAC,gCAAgC,IAAG,MAAMa,IAAI,CAACC,SAAS,CAAC,CAAC,EAAC;EACtE,MAAMzB,OAAO,CAACE,KAAK,CAAC,IAAI,CAAC;EACzB;EACA,MAAMsB,IAAI,CAACE,KAAK,CAAC,CAAC;EAClB,MAAM1B,OAAO,CAACE,KAAK,CAAC,IAAI,CAAC;EACzBQ,OAAO,CAACC,GAAG,CAAC,+BAA+B,IAAG,MAAMa,IAAI,CAACC,SAAS,CAAC,CAAC,EAAC;EACrE,MAAMzB,OAAO,CAACE,KAAK,CAAC,IAAI,CAAC;AAC7B,CAAC,CAAC"}},"mtime":1698701705320}}